[build-system]
requires = [
    "setuptools>=42",
    "wheel"
]
build-backend = "setuptools.build_meta"

[project]
name = "cobib"
authors = [
    {name = "Max Rossmannek", email = "max@rossmannek.de"},
]
description = "Console Bibliography"
requires-python = ">=3.8"
license = {text = "MIT License"}
keywords = [
    "reference-manager", "citation-manager", "bibliography", "cli", "tui",
    "command-line", "terminal", "console", "bibtex", "doi", "arxiv", "isbn"
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Unix",
    "Environment :: Console",
    "Typing :: Typed",
]
dynamic = ["dependencies", "readme", "version"]

[project.scripts]
cobib = "cobib.__main__:_main"

[project.urls]
Homepage = "https://gitlab.com/cobib/cobib"
Documentation = "https://cobib.gitlab.io/cobib/cobib.html"
Repository = "https://gitlab.com/cobib/cobib"
Issues = "https://gitlab.com/cobib/cobib/-/issues"
Changelog = "https://gitlab.com/cobib/cobib/-/blob/master/CHANGELOG.md"

[tool.setuptools]
include-package-data = true

[tool.setuptools.dynamic]
dependencies = {file = "requirements.txt"}
readme = {file = ["README.md", "CHANGELOG.md"], content-type = "text/markdown"}
version = {attr = "cobib.__version__"}

[tool.setuptools.packages.find]
where = ["src/"]

[tool.setuptools.package-data]
cobib = ["py.typed"]

[tool.pytest.ini_options]
log_level = "DEBUG"

[tool.mypy]
python_version = 3.8
show_error_codes = true
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
    "bibtexparser",
    "bs4",
    "pylatexenc.*",
    "requests",
    "requests_oauthlib",
    "setuptools",
    "text_unidecode",
]
ignore_missing_imports = true

[tool.ruff]
line-length = 100
src = ["src", "tests"]
target-version = "py38"

[tool.ruff.lint]
select = [
    "I",   # isort
    "E",   # pycodestyle
    "W",   # pycodestyle
    "D",   # pydocstyle
    "F",   # pyflakes
    "PL",  # pylint
    "RUF", # ruff
]

[tool.ruff.lint.extend-per-file-ignores]
# we explicitly rename imported modules in the __init__ files by design
"__init__.py" = ["PLC0414"]
"tests/*" = [
    "PLR2004",  # allow magic values in the tests
]

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-decorators = ["typing.overload", "typing_extensions.override"]

[tool.ruff.lint.pylint]
max-args = 10
max-branches = 20
max-returns = 10
max-statements = 100

[tool.typos.default.extend-words]
# Do not fix an old typo which has to be documented until its removal.
captial = "captial"
# Do not fix this substring which occurs as part of a regex. This can be removed
# once typos supports inline-overrides.
earch = "earch"
