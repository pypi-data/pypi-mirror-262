# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: signals.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rsignals.proto\x12\x13graphsignal.signals\"\xda\x01\n\rUploadRequest\x12(\n\x05spans\x18\x01 \x03(\x0b\x32\x19.graphsignal.signals.Span\x12*\n\x06scores\x18\x05 \x03(\x0b\x32\x1a.graphsignal.signals.Score\x12,\n\x07metrics\x18\x03 \x03(\x0b\x32\x1b.graphsignal.signals.Metric\x12\x32\n\x0blog_entries\x18\x04 \x03(\x0b\x32\x1d.graphsignal.signals.LogEntry\x12\x11\n\tupload_ms\x18\x02 \x01(\x04\"\x10\n\x0eUploadResponse\"\x8e\x01\n\nSpanRecord\x12\x0f\n\x07\x64\x61ta_id\x18\x01 \x01(\t\x12\x14\n\x0coperation_id\x18\x02 \x01(\t\x12\'\n\x04span\x18\x04 \x01(\x0b\x32\x19.graphsignal.signals.Span\x12\x1a\n\x12\x64\x61ta_retention_sec\x18\x05 \x01(\x04\x12\x14\n\x0ctime_skew_ms\x18\x06 \x01(\x12\"\xd8\x02\n\x04Span\x12\x0f\n\x07span_id\x18\x30 \x01(\t\x12\x10\n\x08start_us\x18\x05 \x01(\x04\x12\x0e\n\x06\x65nd_us\x18\x06 \x01(\x04\x12-\n\x07\x63ontext\x18? \x01(\x0b\x32\x1c.graphsignal.signals.Context\x12&\n\x04tags\x18- \x03(\x0b\x32\x18.graphsignal.signals.Tag\x12\x32\n\nexceptions\x18/ \x03(\x0b\x32\x1e.graphsignal.signals.Exception\x12.\n\x08payloads\x18@ \x03(\x0b\x32\x1c.graphsignal.signals.Payload\x12\x30\n\x05usage\x18\\ \x03(\x0b\x32!.graphsignal.signals.UsageCounter\x12\x30\n\x06\x63onfig\x18Z \x03(\x0b\x32 .graphsignal.signals.ConfigEntry\"q\n\x07\x43ontext\x12\x10\n\x08start_ns\x18\x02 \x01(\x04\x12\x0e\n\x06\x65nd_ns\x18\x03 \x01(\x04\x12\x16\n\x0e\x66irst_token_ns\x18\n \x01(\x04\x12\x14\n\x0croot_span_id\x18\x08 \x01(\t\x12\x16\n\x0eparent_span_id\x18\t \x01(\t\"!\n\x03Tag\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"C\n\tException\x12\x10\n\x08\x65xc_type\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x13\n\x0bstack_trace\x18\x03 \x01(\t\"D\n\x07Payload\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x14\n\x0c\x63ontent_type\x18\x02 \x01(\t\x12\x15\n\rcontent_bytes\x18\x03 \x01(\x0c\"T\n\x0cUsageCounter\x12\x14\n\x0cpayload_name\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x11\n\tint_value\x18\x03 \x01(\x04\x12\r\n\x05value\x18\x04 \x01(\x01\")\n\x0b\x43onfigEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"{\n\x0bScoreRecord\x12\x0f\n\x07\x64\x61ta_id\x18\x01 \x01(\t\x12)\n\x05score\x18\x02 \x01(\x0b\x32\x1a.graphsignal.signals.Score\x12\x1a\n\x12\x64\x61ta_retention_sec\x18\x03 \x01(\x04\x12\x14\n\x0ctime_skew_ms\x18\x04 \x01(\x12\"\xa5\x01\n\x05Score\x12\x10\n\x08score_id\x18\x07 \x01(\t\x12\x0f\n\x07span_id\x18\x01 \x01(\t\x12&\n\x04tags\x18\x02 \x03(\x0b\x32\x18.graphsignal.signals.Tag\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x0f\n\x07\x63omment\x18\x04 \x01(\t\x12\r\n\x05score\x18\x05 \x01(\x01\x12\x10\n\x08severity\x18\x08 \x01(\r\x12\x11\n\tcreate_ts\x18\x06 \x01(\x04\"\x91\x01\n\x0cMetricRecord\x12\x0f\n\x07\x64\x61ta_id\x18\x01 \x01(\t\x12\x11\n\tmetric_id\x18\x02 \x01(\t\x12+\n\x06metric\x18\x03 \x01(\x0b\x32\x1b.graphsignal.signals.Metric\x12\x1a\n\x12\x64\x61ta_retention_sec\x18\x04 \x01(\x04\x12\x14\n\x0ctime_skew_ms\x18\x05 \x01(\x12\"\xd1\x03\n\x06Metric\x12\r\n\x05scope\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12&\n\x04tags\x18\x03 \x03(\x0b\x32\x18.graphsignal.signals.Tag\x12\x34\n\x04type\x18\x04 \x01(\x0e\x32&.graphsignal.signals.Metric.MetricType\x12\x0c\n\x04unit\x18\x05 \x01(\t\x12\x0f\n\x07is_time\x18\x06 \x01(\x08\x12\x0f\n\x07is_size\x18\x07 \x01(\x08\x12\x0f\n\x05gauge\x18\x08 \x01(\x01H\x00\x12\x15\n\x0bint_counter\x18\t \x01(\x04H\x00\x12\x11\n\x07\x63ounter\x18\x0c \x01(\x01H\x00\x12:\n\thistogram\x18\n \x01(\x0b\x32%.graphsignal.signals.Metric.HistogramH\x00\x12\x11\n\tupdate_ts\x18\x0b \x01(\x04\x1a)\n\tHistogram\x12\x0c\n\x04\x62ins\x18\x01 \x03(\x04\x12\x0e\n\x06\x63ounts\x18\x02 \x03(\x04\"^\n\nMetricType\x12\x14\n\x10UNDEFINED_METRIC\x10\x00\x12\x10\n\x0cGAUGE_METRIC\x10\x01\x12\x12\n\x0e\x43OUNTER_METRIC\x10\x02\x12\x14\n\x10HISTOGRAM_METRIC\x10\x03\x42\x07\n\x05value\"\x93\x01\n\tLogRecord\x12\x0f\n\x07\x64\x61ta_id\x18\x01 \x01(\t\x12\x11\n\tlogger_id\x18\x02 \x01(\t\x12\x30\n\tlog_entry\x18\x04 \x01(\x0b\x32\x1d.graphsignal.signals.LogEntry\x12\x1a\n\x12\x64\x61ta_retention_sec\x18\x05 \x01(\x04\x12\x14\n\x0ctime_skew_ms\x18\x06 \x01(\x12\"\x95\x01\n\x08LogEntry\x12\r\n\x05scope\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12&\n\x04tags\x18\x03 \x03(\x0b\x32\x18.graphsignal.signals.Tag\x12\r\n\x05level\x18\x04 \x01(\t\x12\x0f\n\x07message\x18\x05 \x01(\t\x12\x11\n\texception\x18\x06 \x01(\t\x12\x11\n\tcreate_ts\x18\x07 \x01(\x04\x62\x06proto3')



_UPLOADREQUEST = DESCRIPTOR.message_types_by_name['UploadRequest']
_UPLOADRESPONSE = DESCRIPTOR.message_types_by_name['UploadResponse']
_SPANRECORD = DESCRIPTOR.message_types_by_name['SpanRecord']
_SPAN = DESCRIPTOR.message_types_by_name['Span']
_CONTEXT = DESCRIPTOR.message_types_by_name['Context']
_TAG = DESCRIPTOR.message_types_by_name['Tag']
_EXCEPTION = DESCRIPTOR.message_types_by_name['Exception']
_PAYLOAD = DESCRIPTOR.message_types_by_name['Payload']
_USAGECOUNTER = DESCRIPTOR.message_types_by_name['UsageCounter']
_CONFIGENTRY = DESCRIPTOR.message_types_by_name['ConfigEntry']
_SCORERECORD = DESCRIPTOR.message_types_by_name['ScoreRecord']
_SCORE = DESCRIPTOR.message_types_by_name['Score']
_METRICRECORD = DESCRIPTOR.message_types_by_name['MetricRecord']
_METRIC = DESCRIPTOR.message_types_by_name['Metric']
_METRIC_HISTOGRAM = _METRIC.nested_types_by_name['Histogram']
_LOGRECORD = DESCRIPTOR.message_types_by_name['LogRecord']
_LOGENTRY = DESCRIPTOR.message_types_by_name['LogEntry']
_METRIC_METRICTYPE = _METRIC.enum_types_by_name['MetricType']
UploadRequest = _reflection.GeneratedProtocolMessageType('UploadRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPLOADREQUEST,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.UploadRequest)
  })
_sym_db.RegisterMessage(UploadRequest)

UploadResponse = _reflection.GeneratedProtocolMessageType('UploadResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPLOADRESPONSE,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.UploadResponse)
  })
_sym_db.RegisterMessage(UploadResponse)

SpanRecord = _reflection.GeneratedProtocolMessageType('SpanRecord', (_message.Message,), {
  'DESCRIPTOR' : _SPANRECORD,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.SpanRecord)
  })
_sym_db.RegisterMessage(SpanRecord)

Span = _reflection.GeneratedProtocolMessageType('Span', (_message.Message,), {
  'DESCRIPTOR' : _SPAN,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.Span)
  })
_sym_db.RegisterMessage(Span)

Context = _reflection.GeneratedProtocolMessageType('Context', (_message.Message,), {
  'DESCRIPTOR' : _CONTEXT,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.Context)
  })
_sym_db.RegisterMessage(Context)

Tag = _reflection.GeneratedProtocolMessageType('Tag', (_message.Message,), {
  'DESCRIPTOR' : _TAG,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.Tag)
  })
_sym_db.RegisterMessage(Tag)

Exception = _reflection.GeneratedProtocolMessageType('Exception', (_message.Message,), {
  'DESCRIPTOR' : _EXCEPTION,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.Exception)
  })
_sym_db.RegisterMessage(Exception)

Payload = _reflection.GeneratedProtocolMessageType('Payload', (_message.Message,), {
  'DESCRIPTOR' : _PAYLOAD,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.Payload)
  })
_sym_db.RegisterMessage(Payload)

UsageCounter = _reflection.GeneratedProtocolMessageType('UsageCounter', (_message.Message,), {
  'DESCRIPTOR' : _USAGECOUNTER,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.UsageCounter)
  })
_sym_db.RegisterMessage(UsageCounter)

ConfigEntry = _reflection.GeneratedProtocolMessageType('ConfigEntry', (_message.Message,), {
  'DESCRIPTOR' : _CONFIGENTRY,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.ConfigEntry)
  })
_sym_db.RegisterMessage(ConfigEntry)

ScoreRecord = _reflection.GeneratedProtocolMessageType('ScoreRecord', (_message.Message,), {
  'DESCRIPTOR' : _SCORERECORD,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.ScoreRecord)
  })
_sym_db.RegisterMessage(ScoreRecord)

Score = _reflection.GeneratedProtocolMessageType('Score', (_message.Message,), {
  'DESCRIPTOR' : _SCORE,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.Score)
  })
_sym_db.RegisterMessage(Score)

MetricRecord = _reflection.GeneratedProtocolMessageType('MetricRecord', (_message.Message,), {
  'DESCRIPTOR' : _METRICRECORD,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.MetricRecord)
  })
_sym_db.RegisterMessage(MetricRecord)

Metric = _reflection.GeneratedProtocolMessageType('Metric', (_message.Message,), {

  'Histogram' : _reflection.GeneratedProtocolMessageType('Histogram', (_message.Message,), {
    'DESCRIPTOR' : _METRIC_HISTOGRAM,
    '__module__' : 'signals_pb2'
    # @@protoc_insertion_point(class_scope:graphsignal.signals.Metric.Histogram)
    })
  ,
  'DESCRIPTOR' : _METRIC,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.Metric)
  })
_sym_db.RegisterMessage(Metric)
_sym_db.RegisterMessage(Metric.Histogram)

LogRecord = _reflection.GeneratedProtocolMessageType('LogRecord', (_message.Message,), {
  'DESCRIPTOR' : _LOGRECORD,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.LogRecord)
  })
_sym_db.RegisterMessage(LogRecord)

LogEntry = _reflection.GeneratedProtocolMessageType('LogEntry', (_message.Message,), {
  'DESCRIPTOR' : _LOGENTRY,
  '__module__' : 'signals_pb2'
  # @@protoc_insertion_point(class_scope:graphsignal.signals.LogEntry)
  })
_sym_db.RegisterMessage(LogEntry)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _UPLOADREQUEST._serialized_start=39
  _UPLOADREQUEST._serialized_end=257
  _UPLOADRESPONSE._serialized_start=259
  _UPLOADRESPONSE._serialized_end=275
  _SPANRECORD._serialized_start=278
  _SPANRECORD._serialized_end=420
  _SPAN._serialized_start=423
  _SPAN._serialized_end=767
  _CONTEXT._serialized_start=769
  _CONTEXT._serialized_end=882
  _TAG._serialized_start=884
  _TAG._serialized_end=917
  _EXCEPTION._serialized_start=919
  _EXCEPTION._serialized_end=986
  _PAYLOAD._serialized_start=988
  _PAYLOAD._serialized_end=1056
  _USAGECOUNTER._serialized_start=1058
  _USAGECOUNTER._serialized_end=1142
  _CONFIGENTRY._serialized_start=1144
  _CONFIGENTRY._serialized_end=1185
  _SCORERECORD._serialized_start=1187
  _SCORERECORD._serialized_end=1310
  _SCORE._serialized_start=1313
  _SCORE._serialized_end=1478
  _METRICRECORD._serialized_start=1481
  _METRICRECORD._serialized_end=1626
  _METRIC._serialized_start=1629
  _METRIC._serialized_end=2094
  _METRIC_HISTOGRAM._serialized_start=1948
  _METRIC_HISTOGRAM._serialized_end=1989
  _METRIC_METRICTYPE._serialized_start=1991
  _METRIC_METRICTYPE._serialized_end=2085
  _LOGRECORD._serialized_start=2097
  _LOGRECORD._serialized_end=2244
  _LOGENTRY._serialized_start=2247
  _LOGENTRY._serialized_end=2396
# @@protoc_insertion_point(module_scope)
