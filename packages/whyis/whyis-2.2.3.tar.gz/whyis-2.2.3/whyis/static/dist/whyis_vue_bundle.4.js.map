{"version":3,"sources":["webpack:///./js/whyis_vue/components/pages/sparql-templates/sparql-template-page.vue?f1ac","webpack:///./js/whyis_vue/components/pages/sparql-templates/sparql-template-page.vue?2973","webpack:///./js/whyis_vue/components/pages/sparql-templates/sparql-template-page.vue?9170","webpack:///./js/whyis_vue/utilities/common-namespaces.js","webpack:///./js/whyis_vue/components/pages/sparql-templates/load-sparql-templates.js","webpack:///./js/whyis_vue/components/pages/sparql-templates/load-sparql-templates.rq","webpack:///js/whyis_vue/components/pages/sparql-templates/sparql-template-page.vue","webpack:///./js/whyis_vue/components/pages/sparql-templates/sparql-template-page.vue?2644","webpack:///./js/whyis_vue/components/pages/sparql-templates/sparql-template-page.vue","webpack:///./js/whyis_vue/utilities/debounce.js","webpack:///./js/whyis_vue/components/pages/sparql-templates/sparql-template-page.vue?b24a"],"names":["___CSS_LOADER_EXPORT___","push","module","i","render","_vm","this","_h","$createElement","_c","_self","staticClass","loadingTemplates","attrs","totalTemplateCount","_v","nativeOn","click","$event","preventDefault","selectQueryForVizEditor","toVizEditor","on","shiftTemplate","_l","selectedTemplate","displaySegments","segment","index","key","type","TextSegmentType","TEXT","domProps","innerHTML","_s","text","directives","name","rawName","value","varSelections","varName","expression","id","change","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","_value","$set","multiple","currentIndex","query","startOpen","title","readonly","_e","results","_withStripped","SCHEMA","SP","SPIN","async","loadSparqlTemplates","queryResponse","accept","subjectMap","templateUris","bindings","forEach","b","subject","predicate","object","datatype","RDF","predicateMap","objectSet","Set","add","transformedTemplates","templateUri","resolveUri","uri","visited","has","hasOwnProperty","predMap","obj","Object","entries","pred","values","resolvedVals","vUri","transformTemplate","sort","a","freeze","VAR","OptValueType","ANY","LITERAL","IDENTIFIER","template","displayText","display","parseDisplayText","SPARQL","params","fromEntries","param","opts","opt","getOptValue","e1","e2","qVarRegex","segmentRegex","RegExp","source","match","token","displaySegment","exec","queryTemplates","selTemplateId","execQueryDebounced","debounce","execQuery","computed","keys","templateIds","indexOf","length","methods","setQuery","CHART_EDITOR","NEW","templates","t","console","log","amount","newIndex","varOpts","optName","activeSelections","selEntry","getOptVal","varNames","join","optVals","optVal","watch","handler","deep","component","__file","func","millis","timeout","args","clearTimeout","setTimeout","apply","content","__esModule","default","locals","exports"],"mappings":"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","file":"whyis_vue_bundle.4.js","sourcesContent":["export * from \"-!../../../../../node_modules/vue-style-loader/index.js!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/resolve-url-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sparql-template-page.vue?vue&type=style&index=0&id=f1f1c9dc&lang=scss&scoped=true&\"","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".sparql-template-page[data-v-f1f1c9dc]{max-width:960px;margin:auto}.display[data-v-f1f1c9dc]{display:flex;flex-direction:row;justify-content:space-between;align-items:center;height:18em}.display .template-next[data-v-f1f1c9dc]{order:1}.display .display-text[data-v-f1f1c9dc]{max-height:calc(100% - 60px);overflow:auto;margin:30px;font-size:16px;line-height:40px}.display-count-indicator[data-v-f1f1c9dc]{text-align:center;margin-bottom:20px;font-weight:500}.accordion[data-v-f1f1c9dc]{margin-bottom:20px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./sparql-template-page.vue\"],\"names\":[],\"mappings\":\"AA8QA,uCACE,eAAA,CACA,WAAA,CAEF,0BACE,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,kBAAA,CACA,WAAA,CACA,yCACE,OAAA,CAEF,wCACE,4BAAA,CACA,aAAA,CACA,WAAA,CACA,cAAA,CACA,gBAAA,CAGJ,0CACE,iBAAA,CACA,kBAAA,CACA,eAAA,CAEF,4BACE,kBAAA\",\"sourcesContent\":[\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n.sparql-template-page {\\n  max-width: 960px;\\n  margin: auto;\\n}\\n.display {\\n  display: flex;\\n  flex-direction: row;\\n  justify-content: space-between;\\n  align-items: center;\\n  height: 18em;\\n  .template-next {\\n    order: 1;\\n  }\\n  .display-text {\\n    max-height: calc(100% - 60px);\\n    overflow: auto;\\n    margin: 30px;\\n    font-size: 16px;\\n    line-height: 40px;\\n  }\\n}\\n.display-count-indicator {\\n  text-align: center;\\n  margin-bottom: 20px;\\n  font-weight: 500;\\n}\\n.accordion {\\n  margin-bottom: 20px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"sparql-template-page\" }, [\n    _vm.loadingTemplates\n      ? _c(\n          \"div\",\n          [\n            _c(\"md-progress-spinner\", { attrs: { \"md-mode\": \"indeterminate\" } })\n          ],\n          1\n        )\n      : _vm.totalTemplateCount === 0\n      ? _c(\"div\", [_c(\"p\", [_vm._v(\"No templates were loaded\")])])\n      : _c(\n          \"div\",\n          [\n            _c(\"div\", { staticClass: \"button-row\" }, [\n              _c(\n                \"div\",\n                [\n                  _c(\n                    \"md-button\",\n                    {\n                      staticClass: \"md-icon-button\",\n                      nativeOn: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          return _vm.selectQueryForVizEditor()\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"md-tooltip\",\n                        {\n                          staticClass: \"utility-bckg\",\n                          attrs: { \"md-direction\": \"bottom\" }\n                        },\n                        [\n                          _vm._v(\n                            \"\\n            Select current query and return to Viz Editor\\n          \"\n                          )\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"md-icon\", [_vm._v(\"check\")])\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"md-button\",\n                    {\n                      staticClass: \"md-icon-button\",\n                      nativeOn: {\n                        click: function($event) {\n                          $event.preventDefault()\n                          return _vm.toVizEditor()\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"md-tooltip\",\n                        {\n                          staticClass: \"utility-bckg\",\n                          attrs: { \"md-direction\": \"bottom\" }\n                        },\n                        [_vm._v(\" Return to viz editor \")]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"md-icon\", [_vm._v(\"arrow_back\")])\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"md-toolbar\", [\n              _c(\"h3\", { staticClass: \"md-title\" }, [_vm._v(\"Query Template\")])\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"display\" },\n              [\n                _c(\n                  \"md-button\",\n                  {\n                    staticClass: \"template-back\",\n                    on: {\n                      click: function($event) {\n                        return _vm.shiftTemplate(-1)\n                      }\n                    }\n                  },\n                  [_c(\"md-icon\", [_vm._v(\"chevron_left\")])],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"md-button\",\n                  {\n                    staticClass: \"template-next\",\n                    on: {\n                      click: function($event) {\n                        return _vm.shiftTemplate(1)\n                      }\n                    }\n                  },\n                  [_c(\"md-icon\", [_vm._v(\"chevron_right\")])],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"p\",\n                  { staticClass: \"display-text\" },\n                  _vm._l(_vm.selectedTemplate.displaySegments, function(\n                    segment,\n                    index\n                  ) {\n                    return _c(\"span\", { key: index }, [\n                      segment.type == _vm.TextSegmentType.TEXT\n                        ? _c(\"span\", {\n                            domProps: { innerHTML: _vm._s(segment.text) }\n                          })\n                        : _c(\"span\", [\n                            _c(\n                              \"select\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.varSelections[segment.varName],\n                                    expression: \"varSelections[segment.varName]\"\n                                  }\n                                ],\n                                attrs: {\n                                  id: segment.varName,\n                                  name: segment.varName\n                                },\n                                on: {\n                                  change: function($event) {\n                                    var $$selectedVal = Array.prototype.filter\n                                      .call($event.target.options, function(o) {\n                                        return o.selected\n                                      })\n                                      .map(function(o) {\n                                        var val =\n                                          \"_value\" in o ? o._value : o.value\n                                        return val\n                                      })\n                                    _vm.$set(\n                                      _vm.varSelections,\n                                      segment.varName,\n                                      $event.target.multiple\n                                        ? $$selectedVal\n                                        : $$selectedVal[0]\n                                    )\n                                  }\n                                }\n                              },\n                              _vm._l(\n                                _vm.selectedTemplate.options[segment.varName],\n                                function(value, name) {\n                                  return _c(\n                                    \"option\",\n                                    { key: name, domProps: { value: name } },\n                                    [\n                                      _vm._v(\n                                        \"\\n                \" +\n                                          _vm._s(name) +\n                                          \"\\n              \"\n                                      )\n                                    ]\n                                  )\n                                }\n                              ),\n                              0\n                            )\n                          ])\n                    ])\n                  }),\n                  0\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"display-count-indicator\" }, [\n              _c(\"p\", [\n                _vm._v(\n                  \"Query template \" +\n                    _vm._s(_vm.currentIndex + 1) +\n                    \" of \" +\n                    _vm._s(_vm.totalTemplateCount)\n                )\n              ])\n            ]),\n            _vm._v(\" \"),\n            _vm.query\n              ? _c(\n                  \"div\",\n                  { staticClass: \"query\" },\n                  [\n                    _c(\n                      \"accordion\",\n                      { attrs: { startOpen: false, title: \"SPARQL Query\" } },\n                      [\n                        _c(\"yasqe\", {\n                          attrs: { value: _vm.query, readonly: \"true\" }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"results\" },\n              [\n                _c(\n                  \"accordion\",\n                  { attrs: { startOpen: true, title: \"SPARQL Results\" } },\n                  [\n                    _vm.results\n                      ? _c(\n                          \"div\",\n                          [_c(\"yasr\", { attrs: { results: _vm.results } })],\n                          1\n                        )\n                      : _c(\"md-progress-spinner\", {\n                          attrs: {\n                            \"md-diameter\": 30,\n                            \"md-stroke\": 3,\n                            \"md-mode\": \"indeterminate\"\n                          }\n                        })\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","\n// TODO: add more prefixes as needed\nexport const RDF =  \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\nexport const RDFS = \"http://www.w3.org/2000/01/rdf-schema#\"\nexport const WHYIS = \"http://vocab.rpi.edu/whyis/\"\nexport const SCHEMA = \"http://schema.org/\"\n","import { literal, namedNode } from '@rdfjs/data-model'\nimport { fromRdf } from 'rdf-literal'\nimport { querySparql } from \"../../../utilities/sparql\";\nimport loadSparqlTemplatesQuery from './load-sparql-templates.rq'\nimport {RDF, RDFS, SCHEMA} from '../../../utilities/common-namespaces'\n\nconst SP = 'http://spinrdf.org/sp'\nconst SPIN = `${SP}in#`\n\nconst templateType = 'http://vocab.rpi.edu/whyis/SparqlTemplate'\nconst typePred = RDF + 'type'\n\nexport async function loadSparqlTemplates() {\n  const queryResponse = await querySparql(loadSparqlTemplatesQuery, {accept: \"application/rdf+json\"})\n\n  // Generate map data structure of {subject: {predicate: (set of objects) }}\n  // TODO: this step could have been simplified by requesting json-ld  - \"Accept: application/ld+json'\"\n  const subjectMap = {}\n  const templateUris = []\n  queryResponse.results.bindings.forEach(b => {\n    const subject = b.subject.value\n    const predicate = b.predicate.value\n    let object = b.object.value\n    if (b.object.type === \"literal\" && b.object.datatype) {\n      object = fromRdf(literal(object, namedNode(b.object.datatype)))\n    }\n\n    // Identify template uris\n    if (predicate === typePred && object === templateType) {\n      templateUris.push(subject)\n    }\n\n    let predicateMap = subjectMap[subject]\n    if (!predicateMap) {\n      predicateMap = {}\n      subjectMap[subject] = predicateMap\n    }\n    let objectSet = predicateMap[predicate]\n    if (!objectSet) {\n      objectSet = new Set()\n      predicateMap[predicate] = objectSet\n    }\n    objectSet.add(object)\n  })\n\n  // Use a recursive function to form objects from triples\n  const resolvedTemplates = templateUris.map((templateUri) => resolveUri(templateUri))\n\n  // Transform objects so that they are usable in the query templates page\n  const transformedTemplates = resolvedTemplates.map(transformTemplate)\n  transformedTemplates.sort((a, b) => a.id > b.id ? 1 : -1)\n  return transformedTemplates\n\n  function resolveUri(uri, visited) {\n    visited = visited || new Set()\n    if (visited.has(uri) || !subjectMap.hasOwnProperty(uri)) {\n      return uri\n    }\n    visited.add(uri)\n    const predMap = subjectMap[uri]\n    const obj = {uri}\n    Object.entries(predMap)\n      .forEach(([pred, values]) => {\n        const resolvedVals = [...values].map(vUri => resolveUri(vUri, visited))\n        obj[pred] = resolvedVals\n      })\n    return obj\n  }\n}\n\n/**\n * Identifies segments of display text as being variables or text\n */\nexport const TextSegmentType = Object.freeze({\n  VAR: \"var\",\n  TEXT: \"text\"\n});\n\n/**\n * Enumeration of types of query parameter option values.\n */\nexport const OptValueType = Object.freeze({\n  ANY: \"any\",\n  LITERAL: \"literal\",\n  IDENTIFIER: \"identifier\"\n})\n\n/**\n * Transforms rdf proto-template into a usable template\n */\nfunction transformTemplate(template) {\n  const displayText = template[`${SPIN}labelTemplate`][0]\n  return {\n    id: template.uri,\n    display: displayText,\n    displaySegments: parseDisplayText(displayText),\n    SPARQL: template[`${SP}text`][0],\n    options: transformTemplateParams(template[`${SPIN}constraint`])\n  }\n}\n\nfunction transformTemplateParams(params) {\n  return Object.fromEntries(\n    params.map(param => [\n      param[`${SP}varName`][0],\n      transformParamOpts(param[`${SCHEMA}option`])\n    ])\n  )\n}\n\nfunction transformParamOpts(opts) {\n  return Object.fromEntries(\n    opts.map(opt => [\n        opt[`${RDFS}label`][0],\n        getOptValue(opt),\n        opt[`${SCHEMA}position`][0],\n    ])\n    .sort((e1, e2) => (e1[2] > e2[2]) ? 1: -1)\n  )\n}\n\nfunction getOptValue(opt) {\n  let value = {\n    type: OptValueType.ANY\n  }\n  if (opt[`${SCHEMA}value`]) {\n    const rawVal = opt[`${SCHEMA}value`]\n    value = {\n      type: OptValueType.LITERAL,\n      value: opt[`${SCHEMA}value`][0]\n    }\n  } else if (opt[`${SCHEMA}identifier`]) {\n    value = {\n      type: OptValueType.IDENTIFIER,\n      value: opt[`${SCHEMA}identifier`][0]\n    }\n  }\n  return value\n}\n\n// Matches query variables in display text\nconst qVarRegex = /{\\?([^}]+)}/g\n// Matches query variables or the text between query variables\nconst segmentRegex = new RegExp(`${qVarRegex.source}|[^{]+`, \"g\")\n\nfunction parseDisplayText(displayText) {\n  return displayText.match(segmentRegex).map(token => {\n    let displaySegment;\n    const match = qVarRegex.exec(token)\n    if (match) {\n      displaySegment = {\n        type: TextSegmentType.VAR,\n        varName: match[1]\n      };\n    } else {\n      displaySegment = {\n        type: TextSegmentType.TEXT,\n        text: token\n      };\n    }\n    return displaySegment;\n  });\n}\n","export default \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\nPREFIX schema: <http://schema.org/>\\nPREFIX sp: <http://spinrdf.org/sp>\\nPREFIX spin: <http://spinrdf.org/spin#>\\nPREFIX spl: <http://spinrdf.org/spin#>\\nPREFIX whyis: <http://vocab.rpi.edu/whyis/>\\nPREFIX nanomine_templates: <http://nanomine.org/query/>\\n\\nCONSTRUCT {\\n    ?template a whyis:SparqlTemplate  ;\\n        spin:labelTemplate ?labelTemplate ;\\n        sp:text ?query ;\\n        spin:constraint ?constraint .\\n    ?constraint sp:varName ?varName ;\\n        schema:option ?option .\\n    ?option rdfs:label ?optLabel ;\\n        schema:value ?optValue ;\\n        schema:identifier ?optId ;\\n        schema:position ?optPosition .\\n}\\nWHERE {\\n    ?template a whyis:SparqlTemplate  ;\\n        spin:labelTemplate ?labelTemplate ;\\n        sp:text ?query ;\\n        spin:constraint ?constraint .\\n    ?constraint sp:varName ?varName ;\\n        schema:option ?option .\\n    ?option rdfs:label ?optLabel ;\\n        schema:position ?optPosition .\\n    OPTIONAL { ?option schema:value ?optValue } .\\n    OPTIONAL { ?option schema:identifier ?optId } .\\n}\\n\"","<template>\n  <div class=\"sparql-template-page\">\n    <div v-if=\"loadingTemplates\">\n      <md-progress-spinner md-mode=\"indeterminate\" />\n    </div>\n    <div v-else-if=\"totalTemplateCount === 0\">\n      <p>No templates were loaded</p>\n    </div>\n    <div v-else>\n      <div class=\"button-row\">\n        <div>\n          <md-button\n            class=\"md-icon-button\"\n            @click.native.prevent=\"selectQueryForVizEditor()\"\n          >\n            <md-tooltip\n              class=\"utility-bckg\"\n              md-direction=\"bottom\"\n            >\n              Select current query and return to Viz Editor\n            </md-tooltip>\n            <md-icon>check</md-icon>\n          </md-button>\n          <md-button\n            class=\"md-icon-button\"\n            @click.native.prevent=\"toVizEditor()\"\n          >\n            <md-tooltip\n              class=\"utility-bckg\"\n              md-direction=\"bottom\"\n            > Return to viz editor </md-tooltip>\n            <md-icon>arrow_back</md-icon>\n          </md-button>\n        </div>\n      </div>\n      <md-toolbar>\n        <h3 class=\"md-title\">Query Template</h3>\n      </md-toolbar>\n      <div class=\"display\">\n        <md-button\n          class=\"template-back\"\n          @click=\"shiftTemplate(-1)\"\n        >\n          <md-icon>chevron_left</md-icon>\n        </md-button>\n        <md-button\n          class=\"template-next\"\n          @click=\"shiftTemplate(1)\"\n        >\n          <md-icon>chevron_right</md-icon>\n        </md-button>\n        <p class=\"display-text\">\n          <span\n            v-for=\"(segment, index) in selectedTemplate.displaySegments\"\n            :key=\"index\"\n          >\n            <span\n              v-if=\"segment.type == TextSegmentType.TEXT\"\n              v-html=\"segment.text\"\n            ></span>\n            <span v-else>\n              <select\n                v-model=\"varSelections[segment.varName]\"\n                :id=\"segment.varName\"\n                :name=\"segment.varName\"\n              >\n                <option\n                  v-for=\"(value, name) in selectedTemplate.options[segment.varName]\"\n                  :key=\"name\"\n                  :value=\"name\"\n                >\n                  {{name}}\n                </option>\n              </select>\n            </span>\n          </span>\n        </p>\n      </div>\n      <div class=\"display-count-indicator\">\n        <p>Query template {{currentIndex + 1}} of {{totalTemplateCount}}</p>\n      </div>\n      <div\n        class=\"query\"\n        v-if=\"query\"\n      >\n        <accordion\n          :startOpen=\"false\"\n          title=\"SPARQL Query\"\n        >\n          <yasqe\n            :value=\"query\"\n            readonly=\"true\"\n          ></yasqe>\n        </accordion>\n      </div>\n      <div class=\"results\">\n        <accordion\n          :startOpen=\"true\"\n          title=\"SPARQL Results\"\n        >\n          <div v-if=\"results\">\n            <yasr :results=\"results\"></yasr>\n          </div>\n          <md-progress-spinner\n            v-else\n            :md-diameter=\"30\"\n            :md-stroke=\"3\"\n            md-mode=\"indeterminate\"\n          ></md-progress-spinner>\n        </accordion>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapMutations } from \"vuex\";\nimport { querySparql } from \"../../../utilities/sparql\";\nimport { goToView, VIEW_URIS, DEFAULT_VIEWS } from \"../../../utilities/views\";\nimport { loadSparqlTemplates, TextSegmentType, OptValueType } from \"./load-sparql-templates\";\nimport debounce from \"../../../utilities/debounce\";\n\n\nconst stripQVarFormatting = formatted =>\n  formatted\n    .replace(/^{{/, \"\")\n    .replace(/}}$/, \"\")\n    .trim();\nconst qVarRegex = /({{[^{}]+}})/g;\n\n\nexport default {\n  data() {\n    return {\n      loadingTemplates: true,\n      queryTemplates: {},\n      TextSegmentType,\n      selTemplateId: null,\n      query: \"\",\n      varSelections: {},\n      results: null,\n      execQueryDebounced: debounce(this.execQuery, 300)\n    };\n  },\n  computed: {\n    templateIds() {\n      return Object.keys(this.queryTemplates);\n    },\n    selectedTemplate() {\n      return this.queryTemplates[this.selTemplateId];\n    },\n    currentIndex() {\n      return this.templateIds.indexOf(this.selTemplateId);\n    },\n    totalTemplateCount() {\n      return this.templateIds.length;\n    },\n  },\n  methods: {\n    ...mapMutations(\"vizEditor\", [\"setQuery\"]),\n    selectQueryForVizEditor() {\n      this.setQuery(this.query);\n      this.toVizEditor();\n    },\n    toVizEditor() {\n      goToView(VIEW_URIS.CHART_EDITOR, DEFAULT_VIEWS.NEW);\n    },\n    async loadSparqlTemplates() {\n      this.loadingTemplates = true;\n      try {\n        const templates = await loadSparqlTemplates();\n        this.queryTemplates = {}\n        templates.forEach(t => this.queryTemplates[t.id] = t)\n        console.log('qtemps', this.queryTemplates)\n        this.selTemplateId = templates.length > 0 ? templates[0].id : null\n      } finally {\n        this.loadingTemplates = false;\n      }\n    },\n    shiftTemplate(amount) {\n      let newIndex = this.currentIndex + amount;\n      while (newIndex >= this.totalTemplateCount) {\n        newIndex -= this.totalTemplateCount;\n      }\n      while (newIndex < 0) {\n        newIndex += this.totalTemplateCount;\n      }\n      this.selTemplateId = this.templateIds[newIndex];\n      console.log(\"shifted\", newIndex, this.selTemplateId, this.templateIds);\n    },\n    populateSelections() {\n      if (!this.selectedTemplate) {\n        return;\n      }\n      this.varSelections = Object.fromEntries(\n        Object.entries(\n          this.selectedTemplate.options\n        ).map(([varName, varOpts]) => [varName, Object.keys(varOpts)[0]])\n      );\n    },\n    getOptVal(varName, optName) {\n      return this.selectedTemplate.options[varName][optName]\n    },\n    buildQuery() {\n      if (!this.selectedTemplate) {\n        return;\n      }\n      this.query = this.selectedTemplate.SPARQL\n\n      this.selectedTemplate.options\n\n      // append VALUES clause to query if there are any active selections\n      const activeSelections = Object.fromEntries(\n        Object.entries(this.varSelections)\n          .filter(selEntry => this.getOptVal(...selEntry).type !== OptValueType.ANY)\n      )\n      if (Object.keys(activeSelections).length > 0) {\n        const varNames = Object.keys(activeSelections)\n          .map(varName => `?${varName}`)\n          .join(\" \")\n\n        const optVals = Object.entries(activeSelections)\n          .map( selEntry => {\n            const optVal = this.getOptVal(...selEntry)\n            let value\n            if (optVal.type === OptValueType.LITERAL) {\n              value = optVal.value\n              if (typeof value !== \"number\") {\n                value = `\"${value}\"`\n              }\n            } else if (optVal.type === OptValueType.IDENTIFIER) {\n              value = `<${optVal.value}>`\n            } else {\n              throw `Unknown option value type: ${optVal.type}`\n            }\n            return value\n          })\n          .join(\" \")\n\n        this.query += `\\nVALUES (${varNames}) {\\n  (${optVals})\\n}\\n`\n      }\n    },\n    async execQuery() {\n      console.log(\"querying....\");\n      this.results = null;\n      this.results = await querySparql(this.query);\n      console.log(\"done\", this.results);\n    }\n  },\n  created() {\n    this.loadSparqlTemplates();\n  },\n  watch: {\n    // The following reactive watchers are used due to limitations of not being\n    // able to deep watch dependencies of computed methods.\n    selectedTemplate: {\n      handler: \"populateSelections\"\n    },\n    varSelections: {\n      handler: \"buildQuery\",\n      deep: true\n    },\n    query: {\n      handler: \"execQueryDebounced\"\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.sparql-template-page {\n  max-width: 960px;\n  margin: auto;\n}\n.display {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  height: 18em;\n  .template-next {\n    order: 1;\n  }\n  .display-text {\n    max-height: calc(100% - 60px);\n    overflow: auto;\n    margin: 30px;\n    font-size: 16px;\n    line-height: 40px;\n  }\n}\n.display-count-indicator {\n  text-align: center;\n  margin-bottom: 20px;\n  font-weight: 500;\n}\n.accordion {\n  margin-bottom: 20px;\n}\n</style>\n","import mod from \"-!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sparql-template-page.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sparql-template-page.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./sparql-template-page.vue?vue&type=template&id=f1f1c9dc&scoped=true&\"\nimport script from \"./sparql-template-page.vue?vue&type=script&lang=js&\"\nexport * from \"./sparql-template-page.vue?vue&type=script&lang=js&\"\nimport style0 from \"./sparql-template-page.vue?vue&type=style&index=0&id=f1f1c9dc&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f1f1c9dc\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/jamie/src/whyis/whyis/static/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('f1f1c9dc')) {\n      api.createRecord('f1f1c9dc', component.options)\n    } else {\n      api.reload('f1f1c9dc', component.options)\n    }\n    module.hot.accept(\"./sparql-template-page.vue?vue&type=template&id=f1f1c9dc&scoped=true&\", function () {\n      api.rerender('f1f1c9dc', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"js/whyis_vue/components/pages/sparql-templates/sparql-template-page.vue\"\nexport default component.exports","\nexport default function debounce (func, millis) {\n  let timeout\n  return function (...args) {\n    const functionCall = () => func.apply(this, args)\n    clearTimeout(timeout)\n    timeout = setTimeout(functionCall, millis)\n  }\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/resolve-url-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sparql-template-page.vue?vue&type=style&index=0&id=f1f1c9dc&lang=scss&scoped=true&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"18114352\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/resolve-url-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sparql-template-page.vue?vue&type=style&index=0&id=f1f1c9dc&lang=scss&scoped=true&\", function() {\n     var newContent = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/resolve-url-loader/index.js!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sparql-template-page.vue?vue&type=style&index=0&id=f1f1c9dc&lang=scss&scoped=true&\");\n     if(newContent.__esModule) newContent = newContent.default;\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}