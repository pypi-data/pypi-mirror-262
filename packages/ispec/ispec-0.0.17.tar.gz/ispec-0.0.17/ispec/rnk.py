# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/11_rnk.ipynb.

# %% auto 0
__all__ = ['rankattr', 'rankattrs']

# %% ../nbs/11_rnk.ipynb 4
from quac import anyq, strq, boolq, listq
from ropts import ropts

# %% ../nbs/11_rnk.ipynb 5
from .types import AttrPrefQ, TypeQ
from .enums import AttrSrc, AttrPref
from ispec.preps import (
    prep__attr, prep__objcls, prep__pref, prep__hush, 
    prep__verb, prep__keys, prep__all
)
from .kws import allkeys
from .src import srcdict

# %% ../nbs/11_rnk.ipynb 6
def rankattr(
    __o: anyq = None,      # obj
    __a: strq = None,      # attr 
    __c: TypeQ = None,     # cls
    __p: AttrPrefQ = None, # pref
    __h: boolq = False,    # hush (don't raise exceptions)
    __v: boolq = False,    # verbose (print)
    **kwargs
) -> anyq:
    obj, attr, cls, pref, hush, verb, kwargs = prep__all(__o, __a, __c, __p, __h, __v, **kwargs)
    kwargs.update(dict(__o=obj, __a=attr, __c=cls, __p=pref, __h=hush, __v=verb))
    vals = srcdict(**kwargs)
    if vals is None: return None
    opts = pref
    if isinstance(pref, AttrPref):
        opts = [p.value for p in pref]
    # result = ropts(AttrSrc.values()).get(**kwargs, **vals)
    result = ropts(pref).get(**kwargs, **vals)
    return result

# %% ../nbs/11_rnk.ipynb 7
def rankattrs(
    __o: anyq = None,      # obj
    __c: TypeQ = None,     # cls
    __p: AttrPrefQ = None, # pref
    __k: listq = None,     # keys
    **kwargs
) -> dict:
    obj, cls = prep__objcls(__o, __c, **kwargs)
    keys, pref = prep__keys(__k, **kwargs), prep__pref(__p, **kwargs)
    hush, verb = prep__hush(**kwargs), prep__verb(**kwargs)
    kwargs.update(dict(__o=obj, __c=cls, __p=pref, __h=hush, __v=verb))
    
    vals = dict()
    for akey in allkeys(obj, keys):
        attr = prep__attr(akey, **kwargs)
        aval = rankattr(__a=attr, **kwargs)
        vals[akey] = aval
    return vals
