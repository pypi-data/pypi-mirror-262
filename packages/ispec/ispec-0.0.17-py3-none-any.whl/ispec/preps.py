# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/03_preps.ipynb.

# %% auto 0
__all__ = ['prep__obj', 'prep__attr', 'prep__clc', 'prep__objcls', 'prep__pref', 'prep__hush', 'prep__verb', 'prep__key',
           'prep__keys', 'prep__def', 'prep__all']

# %% ../nbs/03_preps.ipynb 4
import inspect
from typing import Tuple

from quac import anyq, strq, boolq, listq
from .utils import key1st
from .types import (TypeQ, AttrSrcsQ, AttrPrefQ)
from .enums import (AttrPref)

# %% ../nbs/03_preps.ipynb 5
def prep__obj(__o: anyq = None, **kwargs) -> anyq:
    obj = __o or key1st(kwargs, keys=['obj', '__o']) or None
    return obj

def prep__attr(__a: anyq = None, **kwargs) -> str:
    attr = __a or key1st(kwargs, keys=['attr', 'arg', '__a']) or ''
    return attr

def prep__clc(__c: TypeQ = None, **kwargs) -> TypeQ:
    cls = __c or key1st(kwargs, keys=['cls', '__c']) or None
    return cls

def prep__objcls(__o: anyq = None, __c: TypeQ = None, **kwargs) -> Tuple[anyq, TypeQ]:
    obj = prep__obj(__o, **kwargs)
    cls = prep__clc(__c, **kwargs)
    cls = cls or (obj if inspect.isclass(obj) else type(obj))
    return obj, cls,

def prep__pref(__p: AttrPrefQ = None, **kwargs) -> AttrPrefQ:
    pref = __p or key1st(kwargs, keys=['pref', '__p']) or None
    pref = pref or AttrPref.OKC
    return pref

def prep__hush(__h: boolq = None, **kwargs) -> boolq:
    hush = __h or key1st(kwargs, keys=['hush', 'quiet', 'raise', 'failq', '__h']) or False 
    return hush

def prep__verb(__v: boolq = None, **kwargs) -> boolq:
    verb = __v or key1st(kwargs, keys=['verbose', 'verb', 'print', '__v']) or False
    return verb

def prep__key(__k: str = None, **kwargs) -> strq:
    key = __k or key1st(kwargs, keys=['__key', '__k', ]) or ''
    return key

def prep__keys(__k: listq = None, **kwargs) -> listq:
    keys = __k or key1st(kwargs, keys=['__keys', '__ks', '__k', 'keys']) or []
    return keys

def prep__def(__d: anyq = None, **kwargs) -> anyq:
    keys = ['default', 'defval', f'{prep__key(**kwargs)}val', f'{__d}val', 'def', '__d', ]
    return __d or key1st(kwargs, keys) or None    
    # return kwargs.get('default', kwargs.get('defval', kwargs.get(f'{key}val', None)))

# %% ../nbs/03_preps.ipynb 6
def prep__all(
    __o: anyq = None,      # obj
    __a: strq = None,      # attr 
    __c: TypeQ = None,     # cls
    __p: AttrPrefQ = None, # pref
    __h: boolq = False,    # hush (don't raise exceptions)
    __v: boolq = False,    # verbose (print)
    **kwargs
) -> Tuple[anyq, strq, TypeQ, AttrSrcsQ, boolq, boolq, dict]:
    obj, cls = prep__objcls(__o, __c, **kwargs)
    attr = prep__attr(__a, **kwargs)
    pref = prep__pref(__p, **kwargs)
    hush = prep__hush(__h, **kwargs)
    verb = prep__verb(__v, **kwargs)    
    return obj, attr, cls, pref, hush, verb, kwargs

