[tool.poetry]
name = "Flunt"
version = "2.3.0"
description = "Python implementation of Domain Notification Pattern inspired by Flunt (.NET)"
authors = ["Emerson Delatorre <38289677+Delatorrea@users.noreply.github.com>"]
repository = "https://github.com/Delatorrea/PyFlunt"
homepage = "https://github.com/Delatorrea/PyFlunt"
documentation = "https://github.com/Delatorrea/PyFlunt"
license = "MIT"
keywords = [
  "notifications",
  "python",
  "ddd",
  "python3",
  "validations",
  "notification",
  "ddd-patterns",
  "ddd-architecture",
  "validation-library",
  "class-validator",
  "fluentvalidation",
  "class-validation",
  "flunt",
  "domain-notification",
  "class-validator-cpf"
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Office/Business",
  "Topic :: Utilities",
  "Topic :: Software Development",
  "Topic :: Software Development :: Internationalization",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Natural Language :: English",
  "Natural Language :: Portuguese",
  "Natural Language :: Portuguese (Brazilian)"
]
readme = "./README.md"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = ">=3.9 <4.0"
poetry = "^1.7.1"
typing-extensions = "^4.9.0"
deprecated = "^1.2.14"

[tool.poetry.group.dev.dependencies]
faker = "^23.1.0"
pytest = "^8.0.1"
pytest-cov = "^4.1.0"
ruff = "^0.2.1"
pre-commit = "^3.6.1"
pre-commit-hooks = "^4.5.0"
mypy = "^1.8.0"
tox = "*"
poethepoet = "^0.25.0"

[tool.poetry.group.doc.dependencies]
mkdocs-material = "^9.5.9"
mkdocstrings = "^0.24.0"
mkdocstrings-python = "^1.8.0"

[tool.poetry.scripts]
sample = "samples.flunt_sample:main"

[tool.pytest.ini_options]
python_files = "test*.py"
python_classes = "Test"
python_functions = "test"
addopts = "--tb=native"
console_output_style = "classic"
junit_duration_report = "call"
filterwarnings = "ignore::RuntimeWarning"

[tool.ruff]
line-length = 88
indent-width = 4
extend-exclude = ["tests"]

[tool.ruff.format]
quote-style = "single"
indent-style = "tab"
docstring-code-format = false
docstring-code-line-length = 30

[tool.ruff.lint]
extend-select = [
  "D",   # pydocstyle,
  "I",   # isort
  "B",   # flake8-bugbear
]
ignore = [
  "D100",
  "D104",
  "D203",
  "D206",
  "D212",
  "D417",
  "E501"
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
ignore_missing_imports = true

[tool.poe]
poetry_command = ""

[tool.poe.tasks]
test = "pytest"
test-verbose = "pytest -vv"
test-cov = "pytest --cov=flunt --cov-report=html"
tox = "tox -e py"
pre-commit-install = "pre-commit install"
pre-commit-run = "pre-commit run --all-files --show-diff-on-failure"
lint = ["_ruff-check", "lint-check", "_ruff-format", "_mypy"]
lint-check = "ruff check"
export-dev = "poetry export -f requirements.txt --output requirements_dev.txt  --with dev"

_ruff-check = "poetry run ruff check --select I --fix ."
_ruff-format = "poetry run ruff format ."
_mypy = "poetry run mypy flunt tests"
