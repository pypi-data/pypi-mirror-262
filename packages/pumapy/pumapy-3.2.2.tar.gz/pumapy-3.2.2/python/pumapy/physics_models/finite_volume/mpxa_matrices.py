"""
matrices used in MPFA and MPSA functions
"""
import numpy as np


# MPFA functions
def create_mpfa_indices():  # indices for A, B, C, D
    Aind = np.array([[0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 10, 10, 10, 11, 11, 11],
                     [0, 4, 8, 1, 4, 10, 2, 6, 8, 3, 6, 10, 0, 4, 8, 0, 5, 9, 2, 6, 8, 2, 7, 9, 0, 4, 8, 0, 5, 9, 1, 4, 10, 1, 5, 11]])
    Bind = np.array([[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],
                     [0, 2, 4, 6, 0, 1, 4, 5, 0, 1, 2, 3]])
    Cind = np.array([[0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6,
                      7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11],
                     [0, 4, 5, 8, 9, 1, 4, 5, 10, 11, 2, 6, 7, 8, 9, 3, 6, 7, 10, 11, 0, 1, 4, 8, 10, 0, 1, 5, 9, 11, 2, 3, 6, 8, 10,
                      2, 3, 7, 9, 11, 0, 2, 4, 6, 8, 0, 2, 5, 7, 9, 1, 3, 4, 6, 10, 1, 3, 5, 7, 11]])
    Dind = np.array([[0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11],
                     [0, 1, 2, 3, 4, 5, 6, 7, 0, 2, 1, 3, 4, 6, 5, 7, 0, 4, 1, 5, 2, 6, 3, 7]])
    return Aind, Bind, Cind, Dind


def fill_Ampfa(k, ndx, ndy, ndz):
    return np.array([k[0] * ndx[1], k[3] * ndy[2], k[4] * ndz[4],
                     k[12] * ndx[3], -k[15] * ndy[0], k[16] * ndz[6],
                     k[24] * ndx[5], k[27] * ndy[6], -k[28] * ndz[0],
                     k[36] * ndx[7], -k[39] * ndy[4], -k[40] * ndz[2],
                     k[3] * ndx[1], k[1] * ndy[2], k[5] * ndz[4],
                     -k[9] * ndx[0], k[7] * ndy[3], k[11] * ndz[5],
                     k[27] * ndx[5], k[25] * ndy[6], -k[29] * ndz[0],
                     -k[33] * ndx[4], k[31] * ndy[7], -k[35] * ndz[1],
                     k[4] * ndx[1], k[5] * ndy[2], k[2] * ndz[4],
                     -k[10] * ndx[0], k[11] * ndy[3], k[8] * ndz[5],
                     k[16] * ndx[3], -k[17] * ndy[0], k[14] * ndz[6],
                     -k[22] * ndx[2], -k[23] * ndy[1], k[20] * ndz[7]]).transpose((1, 2, 0))


def fill_Bmpfa(k):
    return np.array([-k[0] - k[3] - k[4],
                     -k[12] + k[15] - k[16],
                     -k[24] - k[27] + k[28],
                     -k[36] + k[39] + k[40],
                     -k[1] - k[3] - k[5],
                     -k[11] - k[7] + k[9],
                     -k[25] - k[27] + k[29],
                     -k[31] + k[33] + k[35],
                     -k[2] - k[4] - k[5],
                     k[10] - k[11] - k[8],
                     -k[14] - k[16] + k[17],
                     -k[20] + k[22] + k[23]]).transpose((1, 2, 0))


def fill_Cmpfa(k, ndx, ndy, ndz):
    return np.array([k[0]*ndx[1] + k[6]*ndx[0], k[3]*ndy[2], -k[9]*ndy[3], k[4]*ndz[4], -k[10]*ndz[5],
                     k[12]*ndx[3] + k[18]*ndx[2], -k[15]*ndy[0], k[21]*ndy[1], k[16]*ndz[6], -k[22]*ndz[7],
                     k[24]*ndx[5] + k[30]*ndx[4], k[27]*ndy[6], -k[33]*ndy[7], -k[28]*ndz[0], k[34]*ndz[1],
                     k[36]*ndx[7] + k[42]*ndx[6], -k[39]*ndy[4], k[45]*ndy[5], -k[40]*ndz[2], k[46]*ndz[3],
                     k[3]*ndx[1], -k[15]*ndx[3], k[1]*ndy[2] + k[13]*ndy[0], k[5]*ndz[4], -k[17]*ndz[6],
                     -k[9]*ndx[0], k[21]*ndx[2], k[19]*ndy[1] + k[7]*ndy[3], k[11]*ndz[5], -k[23]*ndz[7],
                     k[27]*ndx[5], -k[39]*ndx[7], k[25]*ndy[6] + k[37]*ndy[4], -k[29]*ndz[0], k[41]*ndz[2],
                     -k[33]*ndx[4], k[45]*ndx[6], k[31]*ndy[7] + k[43]*ndy[5], -k[35]*ndz[1], k[47]*ndz[3],
                     k[4]*ndx[1], -k[28]*ndx[5], k[5]*ndy[2], -k[29]*ndy[6], k[2]*ndz[4] + k[26]*ndz[0],
                     -k[10]*ndx[0], k[34]*ndx[4], k[11]*ndy[3], -k[35]*ndy[7], k[32]*ndz[1] + k[8]*ndz[5],
                     k[16]*ndx[3], -k[40]*ndx[7], -k[17]*ndy[0], k[41]*ndy[4], k[14]*ndz[6] + k[38]*ndz[2],
                     -k[22]*ndx[2], k[46]*ndx[6], -k[23]*ndy[1], k[47]*ndy[5], k[20]*ndz[7] + k[44]*ndz[3]]).transpose((1, 2, 0))


def fill_Dmpfa(k):
    return np.array([k[0] + k[3] + k[4], -k[10] + k[6] - k[9],
                     k[12] - k[15] + k[16], k[18] + k[21] - k[22],
                     k[24] + k[27] - k[28], k[30] - k[33] + k[34],
                     k[36] - k[39] - k[40], k[42] + k[45] + k[46],
                     k[1] + k[3] + k[5], k[13] - k[15] - k[17],
                     k[11] + k[7] - k[9], k[19] + k[21] - k[23],
                     k[25] + k[27] - k[29], k[37] - k[39] + k[41],
                     k[31] - k[33] - k[35], k[43] + k[45] + k[47],
                     k[2] + k[4] + k[5], k[26] - k[28] - k[29],
                     -k[10] + k[11] + k[8], k[32] + k[34] - k[35],
                     k[14] + k[16] - k[17], k[38] - k[40] + k[41],
                     k[20] - k[22] - k[23], k[44] + k[46] + k[47]])


def create_d1_mpfa(k, d):
    return np.array([[-k[0]*d[0] + k[10]*d[9] - k[3]*d[4] - k[4]*d[8] - k[6]*d[0] + k[9]*d[5]],
                     [-k[12]*d[1] + k[15]*d[4] - k[16]*d[10] - k[18]*d[1] - k[21]*d[5] + k[22]*d[11]],
                     [-k[24]*d[2] - k[27]*d[6] + k[28]*d[8] - k[30]*d[2] + k[33]*d[7] - k[34]*d[9]],
                     [-k[36]*d[3] + k[39]*d[6] + k[40]*d[10] - k[42]*d[3] - k[45]*d[7] - k[46]*d[11]],
                     [-k[1]*d[4] - k[13]*d[4] + k[15]*d[1] + k[17]*d[10] - k[3]*d[0] - k[5]*d[8]],
                     [-k[11]*d[9] - k[19]*d[5] - k[21]*d[1] + k[23]*d[11] - k[7]*d[5] + k[9]*d[0]],
                     [-k[25]*d[6] - k[27]*d[2] + k[29]*d[8] - k[37]*d[6] + k[39]*d[3] - k[41]*d[10]],
                     [-k[31]*d[7] + k[33]*d[2] + k[35]*d[9] - k[43]*d[7] - k[45]*d[3] - k[47]*d[11]],
                     [-k[2]*d[8] - k[26]*d[8] + k[28]*d[2] + k[29]*d[6] - k[4]*d[0] - k[5]*d[4]],
                     [k[10]*d[0] - k[11]*d[5] - k[32]*d[9] - k[34]*d[2] + k[35]*d[7] - k[8]*d[9]],
                     [-k[14]*d[10] - k[16]*d[1] + k[17]*d[4] - k[38]*d[10] + k[40]*d[3] - k[41]*d[6]],
                     [-k[20]*d[11] + k[22]*d[1] + k[23]*d[5] - k[44]*d[11] - k[46]*d[3] - k[47]*d[7]]]).transpose((2, 3, 0, 1))


def create_d2_mpfa(k, d):
    return np.array([[k[0]*d[0] + k[3]*d[4] + k[4]*d[8]],
                     [k[12]*d[1] - k[15]*d[4] + k[16]*d[10]],
                     [k[24]*d[2] + k[27]*d[6] - k[28]*d[8]],
                     [k[36]*d[3] - k[39]*d[6] - k[40]*d[10]],
                     [k[1]*d[4] + k[3]*d[0] + k[5]*d[8]],
                     [k[11]*d[9] + k[7]*d[5] - k[9]*d[0]],
                     [k[25]*d[6] + k[27]*d[2] - k[29]*d[8]],
                     [k[31]*d[7] - k[33]*d[2] - k[35]*d[9]],
                     [k[2]*d[8] + k[4]*d[0] + k[5]*d[4]],
                     [-k[10]*d[0] + k[11]*d[5] + k[8]*d[9]],
                     [k[14]*d[10] + k[16]*d[1] - k[17]*d[4]],
                     [k[20]*d[11] - k[22]*d[1] - k[23]*d[5]]]).transpose((2, 3, 0, 1))


def div_Ed_mpfa(q_sw, q_se, q_nw, q_ne, q_tsw, q_tse, q_tnw, q_tne):
    # divergence for b vector with BCs
    return np.array(((q_se[:, :, 3] + q_ne[:, :, 2] + q_tse[:, :, 1] + q_tne[:, :, 0]) - (q_sw[:, :, 3] + q_nw[:, :, 2] + q_tsw[:, :, 1] + q_tnw[:, :, 0]) +
                     (q_nw[:, :, 7] + q_ne[:, :, 6] + q_tnw[:, :, 5] + q_tne[:, :, 4]) - (q_sw[:, :, 7] + q_se[:, :, 6] + q_tsw[:, :, 5] + q_tse[:, :, 4]) +
                     (q_tsw[:, :, 11] + q_tse[:, :, 10] + q_tnw[:, :, 9] + q_tne[:, :, 8]) - (q_sw[:, :, 11] +  q_se[:, :, 10] +  q_nw[:, :, 9] +  q_ne[:, :, 8])))


def div_Eu_mpfa(E_sw, E_se, E_nw, E_ne, E_tsw, E_tse, E_tnw, E_tne):
    return np.array([-E_sw[:, :, 3, 0] - E_sw[:, :, 7, 0] - E_sw[:, :, 11, 0],
                     E_se[:, :, 3, 0] - E_se[:, :, 6, 0] - E_se[:, :, 10, 0] - E_sw[:, :, 3, 1] - E_sw[:, :, 7, 1] - E_sw[:, :, 11, 1],
                     E_se[:, :, 3, 1] - E_se[:, :, 6, 1] - E_se[:, :, 10, 1],
                     -E_nw[:, :, 2, 0] + E_nw[:, :, 7, 0] - E_nw[:, :, 9, 0] - E_sw[:, :, 3, 2] - E_sw[:, :, 7, 2] - E_sw[:, :, 11, 2],
                     E_ne[:, :, 2, 0] + E_ne[:, :, 6, 0] - E_ne[:, :, 8, 0] - E_nw[:, :, 2, 1] + E_nw[:, :, 7, 1] - E_nw[:, :, 9, 1] + E_se[:, :, 3, 2] - E_se[:, :, 6, 2] - E_se[:, :, 10, 2] - E_sw[:, :, 3, 3] - E_sw[:, :, 7, 3] - E_sw[:, :, 11, 3],
                     E_ne[:, :, 2, 1] + E_ne[:, :, 6, 1] - E_ne[:, :, 8, 1] + E_se[:, :, 3, 3] - E_se[:, :, 6, 3] - E_se[:, :, 10, 3],
                     -E_nw[:, :, 2, 2] + E_nw[:, :, 7, 2] - E_nw[:, :, 9, 2],
                     E_ne[:, :, 2, 2] + E_ne[:, :, 6, 2] - E_ne[:, :, 8, 2] - E_nw[:, :, 2, 3] + E_nw[:, :, 7, 3] - E_nw[:, :, 9, 3],
                     E_ne[:, :, 2, 3] + E_ne[:, :, 6, 3] - E_ne[:, :, 8, 3],
                     -E_sw[:, :, 3, 4] - E_sw[:, :, 7, 4] - E_sw[:, :, 11, 4] - E_tsw[:, :, 1, 0] - E_tsw[:, :, 5, 0] + E_tsw[:, :, 11, 0],
                     E_se[:, :, 3, 4] - E_se[:, :, 6, 4] - E_se[:, :, 10, 4] - E_sw[:, :, 3, 5] - E_sw[:, :, 7, 5] - E_sw[:, :, 11, 5] + E_tse[:, :, 1, 0] - E_tse[:, :, 4, 0] + E_tse[:, :, 10, 0] - E_tsw[:, :, 1, 1] - E_tsw[:, :, 5, 1] + E_tsw[:, :, 11, 1],
                     E_se[:, :, 3, 5] - E_se[:, :, 6, 5] - E_se[:, :, 10, 5] + E_tse[:, :, 1, 1] - E_tse[:, :, 4, 1] + E_tse[:, :, 10, 1],
                     -E_nw[:, :, 2, 4] + E_nw[:, :, 7, 4] - E_nw[:, :, 9, 4] - E_sw[:, :, 3, 6] - E_sw[:, :, 7, 6] - E_sw[:, :, 11, 6] - E_tnw[:, :, 0, 0] + E_tnw[:, :, 5, 0] + E_tnw[:, :, 9, 0] - E_tsw[:, :, 1, 2] - E_tsw[:, :, 5, 2] + E_tsw[:, :, 11, 2],
                     E_ne[:, :, 2, 4] + E_ne[:, :, 6, 4] - E_ne[:, :, 8, 4] - E_nw[:, :, 2, 5] + E_nw[:, :, 7, 5] - E_nw[:, :, 9, 5] + E_se[:, :, 3, 6] - E_se[:, :, 6, 6] - E_se[:, :, 10, 6] - E_sw[:, :, 3, 7] - E_sw[:, :, 7, 7] - E_sw[:, :, 11, 7] + E_tne[:, :, 0, 0] + E_tne[:, :, 4, 0] + E_tne[:, :, 8, 0] - E_tnw[:, :, 0, 1] + E_tnw[:, :, 5, 1] + E_tnw[:, :, 9, 1] + E_tse[:, :, 1, 2] - E_tse[:, :, 4, 2] + E_tse[:, :, 10, 2] - E_tsw[:, :, 1, 3] - E_tsw[:, :, 5, 3] + E_tsw[:, :, 11, 3],
                     E_ne[:, :, 2, 5] + E_ne[:, :, 6, 5] - E_ne[:, :, 8, 5] + E_se[:, :, 3, 7] - E_se[:, :, 6, 7] - E_se[:, :, 10, 7] + E_tne[:, :, 0, 1] + E_tne[:, :, 4, 1] + E_tne[:, :, 8, 1] + E_tse[:, :, 1, 3] - E_tse[:, :, 4, 3] + E_tse[:, :, 10, 3],
                     -E_nw[:, :, 2, 6] + E_nw[:, :, 7, 6] - E_nw[:, :, 9, 6] - E_tnw[:, :, 0, 2] + E_tnw[:, :, 5, 2] + E_tnw[:, :, 9, 2],
                     E_ne[:, :, 2, 6] + E_ne[:, :, 6, 6] - E_ne[:, :, 8, 6] - E_nw[:, :, 2, 7] + E_nw[:, :, 7, 7] - E_nw[:, :, 9, 7] + E_tne[:, :, 0, 2] + E_tne[:, :, 4, 2] + E_tne[:, :, 8, 2] - E_tnw[:, :, 0, 3] + E_tnw[:, :, 5, 3] + E_tnw[:, :, 9, 3],
                     E_ne[:, :, 2, 7] + E_ne[:, :, 6, 7] - E_ne[:, :, 8, 7] + E_tne[:, :, 0, 3] + E_tne[:, :, 4, 3] + E_tne[:, :, 8, 3],
                     -E_tsw[:, :, 1, 4] - E_tsw[:, :, 5, 4] + E_tsw[:, :, 11, 4],
                     E_tse[:, :, 1, 4] - E_tse[:, :, 4, 4] + E_tse[:, :, 10, 4] - E_tsw[:, :, 1, 5] - E_tsw[:, :, 5, 5] + E_tsw[:, :, 11, 5],
                     E_tse[:, :, 1, 5] - E_tse[:, :, 4, 5] + E_tse[:, :, 10, 5],
                     -E_tnw[:, :, 0, 4] + E_tnw[:, :, 5, 4] + E_tnw[:, :, 9, 4] - E_tsw[:, :, 1, 6] - E_tsw[:, :, 5, 6] + E_tsw[:, :, 11, 6],
                     E_tne[:, :, 0, 4] + E_tne[:, :, 4, 4] + E_tne[:, :, 8, 4] - E_tnw[:, :, 0, 5] + E_tnw[:, :, 5, 5] + E_tnw[:, :, 9, 5] + E_tse[:, :, 1, 6] - E_tse[:, :, 4, 6] + E_tse[:, :, 10, 6] - E_tsw[:, :, 1, 7] - E_tsw[:, :, 5, 7] + E_tsw[:, :, 11, 7],
                     E_tne[:, :, 0, 5] + E_tne[:, :, 4, 5] + E_tne[:, :, 8, 5] + E_tse[:, :, 1, 7] - E_tse[:, :, 4, 7] + E_tse[:, :, 10, 7],
                     -E_tnw[:, :, 0, 6] + E_tnw[:, :, 5, 6] + E_tnw[:, :, 9, 6],
                     E_tne[:, :, 0, 6] + E_tne[:, :, 4, 6] + E_tne[:, :, 8, 6] - E_tnw[:, :, 0, 7] + E_tnw[:, :, 5, 7] + E_tnw[:, :, 9, 7],
                     E_tne[:, :, 0, 7] + E_tne[:, :, 4, 7] + E_tne[:, :, 8, 7]])


# MPSA functions
def create_mpsa_indices():
    Aind = np.array([[ 0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,
                       1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
                       1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
                       2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  3,
                       3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4,  4,  4,
                       4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
                       4,  4,  4,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
                       5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  6,  6,
                       6,  6,  6,  6,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,
                       7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,
                       7,  7,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
                       8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  9,  9,  9,
                       9,  9,  9,  9,  9,  9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                       10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                       10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
                       11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12,
                       12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13,
                       13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
                       14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15,
                       15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16,
                       16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17,
                       17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
                       17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                       18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20,
                       20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
                       20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
                       21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23,
                       23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
                       23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24,
                       24, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25,
                       25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27,
                       27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28, 28,
                       28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29,
                       29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                       30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
                       31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 33,
                       33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34,
                       34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 35, 35,
                       35, 35, 35, 35],
                     [ 0,  1,  2, 12, 13, 14, 24, 25, 26,  0,  1,  2,  4,  5,  7,  8,
                       10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28,
                       30, 31, 33, 34,  0,  1,  2,  4,  5,  7,  8, 10, 11, 12, 13, 14,
                       15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34,  3,
                       4,  5, 12, 13, 14, 30, 31, 32,  1,  2,  3,  4,  5,  7,  8, 10,
                       11, 12, 13, 14, 15, 17, 18, 20, 21, 23, 24, 25, 27, 28, 30, 31,
                       32, 33, 34,  1,  2,  3,  4,  5,  7,  8, 10, 11, 12, 13, 14, 15,
                       17, 18, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34,  6,  7,
                       8, 18, 19, 20, 24, 25, 26,  1,  2,  4,  5,  6,  7,  8, 10, 11,
                       12, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31,
                       33, 34,  1,  2,  4,  5,  6,  7,  8, 10, 11, 12, 14, 15, 17, 18,
                       19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34,  9, 10, 11,
                       18, 19, 20, 30, 31, 32,  1,  2,  4,  5,  7,  8,  9, 10, 11, 12,
                       14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33,
                       34,  1,  2,  4,  5,  7,  8,  9, 10, 11, 12, 14, 15, 17, 18, 19,
                       20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34,  0,  1,  2,  4,
                       7, 10, 12, 13, 14, 15, 18, 21, 24, 25, 26,  0,  1,  2, 12, 13,
                       14, 24, 25, 26,  0,  1,  2,  4,  5,  7,  8, 10, 11, 12, 13, 14,
                       15, 17, 18, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34,  0,
                       1,  2,  4,  7, 10, 12, 15, 16, 17, 18, 21, 27, 28, 29,  0,  1,
                       2, 15, 16, 17, 27, 28, 29,  0,  1,  2,  4,  5,  7,  8, 10, 11,
                       12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31,
                       33, 34,  1,  4,  6,  7,  8, 10, 12, 15, 18, 19, 20, 21, 24, 25,
                       26,  6,  7,  8, 18, 19, 20, 24, 25, 26,  1,  2,  4,  5,  6,  7,
                       8, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27,
                       28, 30, 31, 33, 34,  1,  4,  6,  7,  8, 10, 12, 15, 18, 21, 22,
                       23, 27, 28, 29,  6,  7,  8, 21, 22, 23, 27, 28, 29,  1,  2,  4,
                       5,  6,  7,  8, 10, 11, 12, 14, 15, 17, 18, 20, 21, 22, 23, 24,
                       25, 27, 28, 29, 30, 31, 33, 34,  0,  1,  2,  5,  8, 11, 12, 13,
                       14, 24, 25, 26, 27, 30, 33,  0,  1,  2, 12, 13, 14, 17, 20, 23,
                       24, 25, 26, 28, 31, 34,  0,  1,  2, 12, 13, 14, 24, 25, 26,  0,
                       1,  2,  5,  8, 11, 15, 16, 17, 24, 27, 28, 29, 30, 33,  0,  1,
                       2, 14, 15, 16, 17, 20, 23, 25, 27, 28, 29, 31, 34,  0,  1,  2,
                       15, 16, 17, 27, 28, 29,  2,  3,  4,  5,  8, 11, 12, 13, 14, 24,
                       27, 30, 31, 32, 33,  3,  4,  5, 12, 13, 14, 17, 20, 23, 25, 28,
                       30, 31, 32, 34,  3,  4,  5, 12, 13, 14, 30, 31, 32,  2,  3,  4,
                       5,  8, 11, 15, 16, 17, 24, 27, 30, 33, 34, 35,  3,  4,  5, 14,
                       15, 16, 17, 20, 23, 25, 28, 31, 33, 34, 35,  3,  4,  5, 15, 16,
                       17, 33, 34, 35]])

    Bind = np.array([[ 0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
                       1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,
                       2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
                       2,  2,  2,  3,  3,  3,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
                       4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  5,  5,
                       5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,  5,
                       5,  5,  5,  5,  5,  5,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,
                       7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,
                       7,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,  8,
                       8,  8,  8,  8,  8,  8,  8,  8,  8,  9,  9,  9, 10, 10, 10, 10,
                       10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
                       10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
                       11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12,
                       12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13,
                       14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
                       14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15,
                       15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 17, 17, 17, 17,
                       17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
                       17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                       18, 18, 18, 18, 18, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20,
                       20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
                       21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
                       21, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
                       23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24,
                       24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25,
                       25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26,
                       26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
                       27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
                       28, 28, 28, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
                       30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 31, 31,
                       31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 33, 33, 33, 33, 33,
                       33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34,
                       34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35],
                     [ 0,  8, 16,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,
                       13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,  0,  1,  2,  3,  4,
                       5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                       21, 22, 23,  2, 10, 18,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9,
                       10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,  0,  1,
                       2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,
                       18, 19, 20, 21, 22, 23,  4, 12, 20,  0,  1,  2,  3,  4,  5,  6,
                       7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
                       23,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14,
                       15, 16, 17, 18, 19, 20, 21, 22, 23,  6, 14, 22,  0,  1,  2,  3,
                       4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                       20, 21, 22, 23,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11,
                       12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,  0,  1,  2,  3,
                       4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,  0,  8, 16,
                       0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
                       16, 17, 18, 19, 20, 21, 22, 23,  0,  1,  2,  3,  4,  5,  6,  7,
                       8,  9, 10, 11, 12, 13, 14, 15, 17,  1,  9, 17,  0,  1,  2,  3,
                       4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
                       20, 21, 22, 23,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11,
                       12, 13, 14, 15, 20,  4, 12, 20,  0,  1,  2,  3,  4,  5,  6,  7,
                       8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
                       0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
                       21,  5, 13, 21,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11,
                       12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,  0,  1,  2,  3,
                       4,  5,  6,  7,  8, 16, 17, 18, 19, 20, 21, 22, 23,  0,  8,  9,
                       10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,  0,  8,
                       16,  0,  1,  2,  3,  4,  5,  6,  7,  9, 16, 17, 18, 19, 20, 21,
                       22, 23,  1,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                       21, 22, 23,  1,  9, 17,  0,  1,  2,  3,  4,  5,  6,  7, 10, 16,
                       17, 18, 19, 20, 21, 22, 23,  2,  8,  9, 10, 11, 12, 13, 14, 15,
                       16, 17, 18, 19, 20, 21, 22, 23,  2, 10, 18,  0,  1,  2,  3,  4,
                       5,  6,  7, 11, 16, 17, 18, 19, 20, 21, 22, 23,  3,  8,  9, 10,
                       11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,  3, 11, 19]])

    Cind = np.array([[ 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,
                       1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,
                       2,  2,  2,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,
                       3,  3,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  5,  5,  5,  5,
                       5,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  6,  6,  6,  6,  6,
                       6,  6,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,  7,  7,  7,  8,
                       8,  8,  8,  8,  8,  8,  8,  8,  8,  9,  9,  9,  9,  9,  9,  9,
                       9,  9,  9,  9,  9,  9,  9,  9, 10, 10, 10, 10, 10, 10, 10, 10,
                       10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12,
                       12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13,
                       13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14,
                       14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16,
                       16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17,
                       17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
                       18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
                       19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21,
                       21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22,
                       22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23,
                       24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 25, 25, 25,
                       25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26,
                       26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27,
                       27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
                       28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
                       29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31,
                       31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32,
                       32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33,
                       33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 34,
                       34, 34, 34, 34, 34, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
                       35, 35, 35, 35],
                     [ 0,  1,  2, 12, 13, 14, 15, 16, 17, 24, 25, 26, 27, 28, 29,  0,
                       1, 13, 16, 24, 25, 26, 27, 28, 29,  0,  2, 12, 13, 15, 16, 25,
                       26, 28, 29,  3,  4,  5, 12, 13, 14, 15, 16, 17, 30, 31, 32, 33,
                       34, 35,  3,  4, 13, 16, 30, 31, 32, 33, 34, 35,  3,  5, 12, 13,
                       15, 16, 31, 32, 34, 35,  6,  7,  8, 18, 19, 20, 21, 22, 23, 24,
                       25, 26, 27, 28, 29,  6,  7, 19, 22, 24, 25, 26, 27, 28, 29,  6,
                       8, 18, 19, 21, 22, 25, 26, 28, 29,  9, 10, 11, 18, 19, 20, 21,
                       22, 23, 30, 31, 32, 33, 34, 35,  9, 10, 19, 22, 30, 31, 32, 33,
                       34, 35,  9, 11, 18, 19, 21, 22, 31, 32, 34, 35,  0,  2,  3,  5,
                       12, 13, 14, 24, 25, 26, 30, 31, 32,  0,  1,  2,  3,  4,  5, 12,
                       13, 14, 24, 25, 26, 30, 31, 32,  0,  3, 12, 13, 14, 24, 26, 30,
                       32,  0,  2,  3,  5, 15, 16, 17, 27, 28, 29, 33, 34, 35,  0,  1,
                       2,  3,  4,  5, 15, 16, 17, 27, 28, 29, 33, 34, 35,  0,  3, 15,
                       16, 17, 27, 29, 33, 35,  6,  8,  9, 11, 18, 19, 20, 24, 25, 26,
                       30, 31, 32,  6,  7,  8,  9, 10, 11, 18, 19, 20, 24, 25, 26, 30,
                       31, 32,  6,  9, 18, 19, 20, 24, 26, 30, 32,  6,  8,  9, 11, 21,
                       22, 23, 27, 28, 29, 33, 34, 35,  6,  7,  8,  9, 10, 11, 21, 22,
                       23, 27, 28, 29, 33, 34, 35,  6,  9, 21, 22, 23, 27, 29, 33, 35,
                       0,  1,  6,  7, 12, 13, 14, 18, 19, 20, 24, 25, 26,  0,  1,  2,
                       6,  7,  8, 12, 13, 18, 19, 24, 25, 26,  0,  1,  2,  6,  7,  8,
                       12, 13, 14, 18, 19, 20, 24, 25, 26,  0,  1,  6,  7, 15, 16, 17,
                       21, 22, 23, 27, 28, 29,  0,  1,  2,  6,  7,  8, 15, 16, 21, 22,
                       27, 28, 29,  0,  1,  2,  6,  7,  8, 15, 16, 17, 21, 22, 23, 27,
                       28, 29,  3,  4,  9, 10, 12, 13, 14, 18, 19, 20, 30, 31, 32,  3,
                       4,  5,  9, 10, 11, 12, 13, 18, 19, 30, 31, 32,  3,  4,  5,  9,
                       10, 11, 12, 13, 14, 18, 19, 20, 30, 31, 32,  3,  4,  9, 10, 15,
                       16, 17, 21, 22, 23, 33, 34, 35,  3,  4,  5,  9, 10, 11, 15, 16,
                       21, 22, 33, 34, 35,  3,  4,  5,  9, 10, 11, 15, 16, 17, 21, 22,
                       23, 33, 34, 35]])

    Dind = np.array([[ 0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,
                       2,  2,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  4,  5,  5,
                       5,  5,  5,  5,  6,  6,  6,  6,  6,  6,  7,  7,  7,  7,  7,  7,
                       8,  8,  8,  8,  8,  8,  9,  9,  9,  9,  9,  9, 10, 10, 10, 10,
                       10, 10, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13,
                       13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15,
                       16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18,
                       18, 18, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 21, 21,
                       21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23,
                       24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26,
                       26, 26, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 29, 29,
                       29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31,
                       32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34,
                       34, 34, 35, 35, 35, 35, 35, 35],
                     [ 0,  1,  8,  9, 16, 17,  0,  1,  8,  9, 16, 17,  0,  1,  8,  9,
                       16, 17,  2,  3, 10, 11, 18, 19,  2,  3, 10, 11, 18, 19,  2,  3,
                       10, 11, 18, 19,  4,  5, 12, 13, 20, 21,  4,  5, 12, 13, 20, 21,
                       4,  5, 12, 13, 20, 21,  6,  7, 14, 15, 22, 23,  6,  7, 14, 15,
                       22, 23,  6,  7, 14, 15, 22, 23,  0,  2,  8, 10, 16, 18,  0,  2,
                       8, 10, 16, 18,  0,  2,  8, 10, 16, 18,  1,  3,  9, 11, 17, 19,
                       1,  3,  9, 11, 17, 19,  1,  3,  9, 11, 17, 19,  4,  6, 12, 14,
                       20, 22,  4,  6, 12, 14, 20, 22,  4,  6, 12, 14, 20, 22,  5,  7,
                       13, 15, 21, 23,  5,  7, 13, 15, 21, 23,  5,  7, 13, 15, 21, 23,
                       0,  4,  8, 12, 16, 20,  0,  4,  8, 12, 16, 20,  0,  4,  8, 12,
                       16, 20,  1,  5,  9, 13, 17, 21,  1,  5,  9, 13, 17, 21,  1,  5,
                       9, 13, 17, 21,  2,  6, 10, 14, 18, 22,  2,  6, 10, 14, 18, 22,
                       2,  6, 10, 14, 18, 22,  3,  7, 11, 15, 19, 23,  3,  7, 11, 15,
                       19, 23,  3,  7, 11, 15, 19, 23]])

    return Aind, Bind, Cind, Dind


def fill_Ampsa(c, ndx, ndy, ndz):
    return np.array([2*c[0]*ndx[1], 2*c[5]*ndx[9], 2*c[4]*ndx[17], 2*c[5]*ndy[2], 2*c[1]*ndy[10], 2*c[3]*ndy[18], 2*c[4]*ndz[4], 2*c[3]*ndz[12], 2*c[2]*ndz[20],
                     2*c[5]*ndx[1], 1.875*c[20]*ndx[9] + 0.125*c[41]*ndx[8], 0.125*c[19]*ndx[17] - 0.125*c[40]*ndx[16], -0.125*c[62]*ndx[11] + 0.125*c[83]*ndx[10], 0.125*c[61]*ndx[19] - 0.125*c[82]*ndx[18], -0.125*c[104]*ndx[13] + 0.125*c[125]*ndx[12], 0.125*c[103]*ndx[21] - 0.125*c[124]*ndx[20], -0.125*c[146]*ndx[15] + 0.125*c[167]*ndx[14], 0.125*c[145]*ndx[23] - 0.125*c[166]*ndx[22], 0.125*c[20]*ndy[2] - 0.125*c[62]*ndy[0], 2*c[10]*ndy[10], 0.125*c[17]*ndy[18] - 0.125*c[59]*ndy[16], 0.125*c[41]*ndy[3] - 0.125*c[83]*ndy[1], 0.125*c[38]*ndy[19] - 0.125*c[80]*ndy[17], 0.125*c[104]*ndy[6] - 0.125*c[146]*ndy[4], 0.125*c[101]*ndy[22] - 0.125*c[143]*ndy[20], 0.125*c[125]*ndy[7] - 0.125*c[167]*ndy[5], 0.125*c[122]*ndy[23] - 0.125*c[164]*ndy[21], 0.125*c[103]*ndz[0] + 1.875*c[19]*ndz[4], 0.125*c[101]*ndz[8] + 1.875*c[17]*ndz[12], 2*c[14]*ndz[20], 0.125*c[124]*ndz[1] - 0.125*c[40]*ndz[5], 0.125*c[122]*ndz[9] - 0.125*c[38]*ndz[13], 0.125*c[145]*ndz[2] - 0.125*c[61]*ndz[6], 0.125*c[143]*ndz[10] - 0.125*c[59]*ndz[14], 0.125*c[166]*ndz[3] - 0.125*c[82]*ndz[7], 0.125*c[164]*ndz[11] - 0.125*c[80]*ndz[15],
                     2*c[4]*ndx[1], 0.125*c[19]*ndx[9] - 0.125*c[40]*ndx[8], 1.875*c[18]*ndx[17] + 0.125*c[39]*ndx[16], 0.125*c[61]*ndx[11] - 0.125*c[82]*ndx[10], -0.125*c[60]*ndx[19] + 0.125*c[81]*ndx[18], 0.125*c[103]*ndx[13] - 0.125*c[124]*ndx[12], -0.125*c[102]*ndx[21] + 0.125*c[123]*ndx[20], 0.125*c[145]*ndx[15] - 0.125*c[166]*ndx[14], -0.125*c[144]*ndx[23] + 0.125*c[165]*ndx[22], 1.875*c[19]*ndy[2] + 0.125*c[61]*ndy[0], 2*c[9]*ndy[10], 0.125*c[16]*ndy[18] - 0.125*c[58]*ndy[16], -0.125*c[40]*ndy[3] + 0.125*c[82]*ndy[1], 0.125*c[37]*ndy[19] - 0.125*c[79]*ndy[17], -0.125*c[103]*ndy[6] + 0.125*c[145]*ndy[4], 0.125*c[100]*ndy[22] - 0.125*c[142]*ndy[20], -0.125*c[124]*ndy[7] + 0.125*c[166]*ndy[5], 0.125*c[121]*ndy[23] - 0.125*c[163]*ndy[21], -0.125*c[102]*ndz[0] + 0.125*c[18]*ndz[4], 0.125*c[100]*ndz[8] + 1.875*c[16]*ndz[12], 2*c[13]*ndz[20], -0.125*c[123]*ndz[1] + 0.125*c[39]*ndz[5], 0.125*c[121]*ndz[9] - 0.125*c[37]*ndz[13], -0.125*c[144]*ndz[2] + 0.125*c[60]*ndz[6], 0.125*c[142]*ndz[10] - 0.125*c[58]*ndz[14], -0.125*c[165]*ndz[3] + 0.125*c[81]*ndz[7], 0.125*c[163]*ndz[11] - 0.125*c[79]*ndz[15],
                     2*c[42]*ndx[3], 2*c[47]*ndx[11], 2*c[46]*ndx[19], -2*c[47]*ndy[0], -2*c[43]*ndy[8], -2*c[45]*ndy[16], 2*c[46]*ndz[6], 2*c[45]*ndz[14], 2*c[44]*ndz[22],
                     -0.125*c[20]*ndx[9] + 0.125*c[41]*ndx[8], 0.125*c[19]*ndx[17] - 0.125*c[40]*ndx[16], 2*c[47]*ndx[3], 1.875*c[62]*ndx[11] + 0.125*c[83]*ndx[10], 0.125*c[61]*ndx[19] - 0.125*c[82]*ndx[18], -0.125*c[104]*ndx[13] + 0.125*c[125]*ndx[12], 0.125*c[103]*ndx[21] - 0.125*c[124]*ndx[20], -0.125*c[146]*ndx[15] + 0.125*c[167]*ndx[14], 0.125*c[145]*ndx[23] - 0.125*c[166]*ndx[22], 0.125*c[20]*ndy[2] - 0.125*c[62]*ndy[0], -2*c[52]*ndy[8], 0.125*c[17]*ndy[18] - 0.125*c[59]*ndy[16], 0.125*c[41]*ndy[3] - 0.125*c[83]*ndy[1], 0.125*c[38]*ndy[19] - 0.125*c[80]*ndy[17], 0.125*c[104]*ndy[6] - 0.125*c[146]*ndy[4], 0.125*c[101]*ndy[22] - 0.125*c[143]*ndy[20], 0.125*c[125]*ndy[7] - 0.125*c[167]*ndy[5], 0.125*c[122]*ndy[23] - 0.125*c[164]*ndy[21], 0.125*c[103]*ndz[0] - 0.125*c[19]*ndz[4], 0.125*c[101]*ndz[8] - 0.125*c[17]*ndz[12], 0.125*c[124]*ndz[1] - 0.125*c[40]*ndz[5], 0.125*c[122]*ndz[9] - 0.125*c[38]*ndz[13], 0.125*c[145]*ndz[2] + 1.875*c[61]*ndz[6], 0.125*c[143]*ndz[10] + 1.875*c[59]*ndz[14], 2*c[56]*ndz[22], 0.125*c[166]*ndz[3] - 0.125*c[82]*ndz[7], 0.125*c[164]*ndz[11] - 0.125*c[80]*ndz[15],
                     0.125*c[19]*ndx[9] - 0.125*c[40]*ndx[8], -0.125*c[18]*ndx[17] + 0.125*c[39]*ndx[16], 2*c[46]*ndx[3], 0.125*c[61]*ndx[11] - 0.125*c[82]*ndx[10], 1.875*c[60]*ndx[19] + 0.125*c[81]*ndx[18], 0.125*c[103]*ndx[13] - 0.125*c[124]*ndx[12], -0.125*c[102]*ndx[21] + 0.125*c[123]*ndx[20], 0.125*c[145]*ndx[15] - 0.125*c[166]*ndx[14], -0.125*c[144]*ndx[23] + 0.125*c[165]*ndx[22], -0.125*c[19]*ndy[2] - 1.875*c[61]*ndy[0], -2*c[51]*ndy[8], 0.125*c[16]*ndy[18] - 0.125*c[58]*ndy[16], -0.125*c[40]*ndy[3] + 0.125*c[82]*ndy[1], 0.125*c[37]*ndy[19] - 0.125*c[79]*ndy[17], -0.125*c[103]*ndy[6] + 0.125*c[145]*ndy[4], 0.125*c[100]*ndy[22] - 0.125*c[142]*ndy[20], -0.125*c[124]*ndy[7] + 0.125*c[166]*ndy[5], 0.125*c[121]*ndy[23] - 0.125*c[163]*ndy[21], -0.125*c[102]*ndz[0] + 0.125*c[18]*ndz[4], 0.125*c[100]*ndz[8] - 0.125*c[16]*ndz[12], -0.125*c[123]*ndz[1] + 0.125*c[39]*ndz[5], 0.125*c[121]*ndz[9] - 0.125*c[37]*ndz[13], -0.125*c[144]*ndz[2] + 0.125*c[60]*ndz[6], 0.125*c[142]*ndz[10] + 1.875*c[58]*ndz[14], 2*c[55]*ndz[22], -0.125*c[165]*ndz[3] + 0.125*c[81]*ndz[7], 0.125*c[163]*ndz[11] - 0.125*c[79]*ndz[15],
                     2*c[84]*ndx[5], 2*c[89]*ndx[13], 2*c[88]*ndx[21], 2*c[89]*ndy[6], 2*c[85]*ndy[14], 2*c[87]*ndy[22], -2*c[88]*ndz[0], -2*c[87]*ndz[8], -2*c[86]*ndz[16],
                     -0.125*c[20]*ndx[9] + 0.125*c[41]*ndx[8], 0.125*c[19]*ndx[17] - 0.125*c[40]*ndx[16], -0.125*c[62]*ndx[11] + 0.125*c[83]*ndx[10], 0.125*c[61]*ndx[19] - 0.125*c[82]*ndx[18], 2*c[89]*ndx[5], 1.875*c[104]*ndx[13] + 0.125*c[125]*ndx[12], 0.125*c[103]*ndx[21] - 0.125*c[124]*ndx[20], -0.125*c[146]*ndx[15] + 0.125*c[167]*ndx[14], 0.125*c[145]*ndx[23] - 0.125*c[166]*ndx[22], 0.125*c[20]*ndy[2] - 0.125*c[62]*ndy[0], 0.125*c[17]*ndy[18] - 0.125*c[59]*ndy[16], 0.125*c[41]*ndy[3] - 0.125*c[83]*ndy[1], 0.125*c[38]*ndy[19] - 0.125*c[80]*ndy[17], 0.125*c[104]*ndy[6] - 0.125*c[146]*ndy[4], 2*c[94]*ndy[14], 0.125*c[101]*ndy[22] - 0.125*c[143]*ndy[20], 0.125*c[125]*ndy[7] - 0.125*c[167]*ndy[5], 0.125*c[122]*ndy[23] - 0.125*c[164]*ndy[21], -1.875*c[103]*ndz[0] - 0.125*c[19]*ndz[4], -1.875*c[101]*ndz[8] - 0.125*c[17]*ndz[12], -2*c[98]*ndz[16], 0.125*c[124]*ndz[1] - 0.125*c[40]*ndz[5], 0.125*c[122]*ndz[9] - 0.125*c[38]*ndz[13], 0.125*c[145]*ndz[2] - 0.125*c[61]*ndz[6], 0.125*c[143]*ndz[10] - 0.125*c[59]*ndz[14], 0.125*c[166]*ndz[3] - 0.125*c[82]*ndz[7], 0.125*c[164]*ndz[11] - 0.125*c[80]*ndz[15],
                     0.125*c[19]*ndx[9] - 0.125*c[40]*ndx[8], -0.125*c[18]*ndx[17] + 0.125*c[39]*ndx[16], 0.125*c[61]*ndx[11] - 0.125*c[82]*ndx[10], -0.125*c[60]*ndx[19] + 0.125*c[81]*ndx[18], 2*c[88]*ndx[5], 0.125*c[103]*ndx[13] - 0.125*c[124]*ndx[12], 1.875*c[102]*ndx[21] + 0.125*c[123]*ndx[20], 0.125*c[145]*ndx[15] - 0.125*c[166]*ndx[14], -0.125*c[144]*ndx[23] + 0.125*c[165]*ndx[22], -0.125*c[19]*ndy[2] + 0.125*c[61]*ndy[0], 0.125*c[16]*ndy[18] - 0.125*c[58]*ndy[16], -0.125*c[40]*ndy[3] + 0.125*c[82]*ndy[1], 0.125*c[37]*ndy[19] - 0.125*c[79]*ndy[17], 1.875*c[103]*ndy[6] + 0.125*c[145]*ndy[4], 2*c[93]*ndy[14], 0.125*c[100]*ndy[22] - 0.125*c[142]*ndy[20], -0.125*c[124]*ndy[7] + 0.125*c[166]*ndy[5], 0.125*c[121]*ndy[23] - 0.125*c[163]*ndy[21], -0.125*c[102]*ndz[0] + 0.125*c[18]*ndz[4], -1.875*c[100]*ndz[8] - 0.125*c[16]*ndz[12], -2*c[97]*ndz[16], -0.125*c[123]*ndz[1] + 0.125*c[39]*ndz[5], 0.125*c[121]*ndz[9] - 0.125*c[37]*ndz[13], -0.125*c[144]*ndz[2] + 0.125*c[60]*ndz[6], 0.125*c[142]*ndz[10] - 0.125*c[58]*ndz[14], -0.125*c[165]*ndz[3] + 0.125*c[81]*ndz[7], 0.125*c[163]*ndz[11] - 0.125*c[79]*ndz[15],
                     2*c[126]*ndx[7], 2*c[131]*ndx[15], 2*c[130]*ndx[23], -2*c[131]*ndy[4], -2*c[127]*ndy[12], -2*c[129]*ndy[20], -2*c[130]*ndz[2], -2*c[129]*ndz[10], -2*c[128]*ndz[18],
                     -0.125*c[20]*ndx[9] + 0.125*c[41]*ndx[8], 0.125*c[19]*ndx[17] - 0.125*c[40]*ndx[16], -0.125*c[62]*ndx[11] + 0.125*c[83]*ndx[10], 0.125*c[61]*ndx[19] - 0.125*c[82]*ndx[18], -0.125*c[104]*ndx[13] + 0.125*c[125]*ndx[12], 0.125*c[103]*ndx[21] - 0.125*c[124]*ndx[20], 2*c[131]*ndx[7], 1.875*c[146]*ndx[15] + 0.125*c[167]*ndx[14], 0.125*c[145]*ndx[23] - 0.125*c[166]*ndx[22], 0.125*c[20]*ndy[2] - 0.125*c[62]*ndy[0], 0.125*c[17]*ndy[18] - 0.125*c[59]*ndy[16], 0.125*c[41]*ndy[3] - 0.125*c[83]*ndy[1], 0.125*c[38]*ndy[19] - 0.125*c[80]*ndy[17], 0.125*c[104]*ndy[6] - 0.125*c[146]*ndy[4], -2*c[136]*ndy[12], 0.125*c[101]*ndy[22] - 0.125*c[143]*ndy[20], 0.125*c[125]*ndy[7] - 0.125*c[167]*ndy[5], 0.125*c[122]*ndy[23] - 0.125*c[164]*ndy[21], 0.125*c[103]*ndz[0] - 0.125*c[19]*ndz[4], 0.125*c[101]*ndz[8] - 0.125*c[17]*ndz[12], 0.125*c[124]*ndz[1] - 0.125*c[40]*ndz[5], 0.125*c[122]*ndz[9] - 0.125*c[38]*ndz[13], -1.875*c[145]*ndz[2] - 0.125*c[61]*ndz[6], -1.875*c[143]*ndz[10] - 0.125*c[59]*ndz[14], -2*c[140]*ndz[18], 0.125*c[166]*ndz[3] - 0.125*c[82]*ndz[7], 0.125*c[164]*ndz[11] - 0.125*c[80]*ndz[15],
                     0.125*c[19]*ndx[9] - 0.125*c[40]*ndx[8], -0.125*c[18]*ndx[17] + 0.125*c[39]*ndx[16], 0.125*c[61]*ndx[11] - 0.125*c[82]*ndx[10], -0.125*c[60]*ndx[19] + 0.125*c[81]*ndx[18], 0.125*c[103]*ndx[13] - 0.125*c[124]*ndx[12], -0.125*c[102]*ndx[21] + 0.125*c[123]*ndx[20], 2*c[130]*ndx[7], 0.125*c[145]*ndx[15] - 0.125*c[166]*ndx[14], 1.875*c[144]*ndx[23] + 0.125*c[165]*ndx[22], -0.125*c[19]*ndy[2] + 0.125*c[61]*ndy[0], 0.125*c[16]*ndy[18] - 0.125*c[58]*ndy[16], -0.125*c[40]*ndy[3] + 0.125*c[82]*ndy[1], 0.125*c[37]*ndy[19] - 0.125*c[79]*ndy[17], -0.125*c[103]*ndy[6] - 1.875*c[145]*ndy[4], -2*c[135]*ndy[12], 0.125*c[100]*ndy[22] - 0.125*c[142]*ndy[20], -0.125*c[124]*ndy[7] + 0.125*c[166]*ndy[5], 0.125*c[121]*ndy[23] - 0.125*c[163]*ndy[21], -0.125*c[102]*ndz[0] + 0.125*c[18]*ndz[4], 0.125*c[100]*ndz[8] - 0.125*c[16]*ndz[12], -0.125*c[123]*ndz[1] + 0.125*c[39]*ndz[5], 0.125*c[121]*ndz[9] - 0.125*c[37]*ndz[13], -0.125*c[144]*ndz[2] + 0.125*c[60]*ndz[6], -1.875*c[142]*ndz[10] - 0.125*c[58]*ndz[14], -2*c[139]*ndz[18], -0.125*c[165]*ndz[3] + 0.125*c[81]*ndz[7], 0.125*c[163]*ndz[11] - 0.125*c[79]*ndz[15],
                     2*c[5]*ndx[1], 0.125*c[20]*ndx[9] - 0.125*c[41]*ndx[8], 2*c[19]*ndx[17], 0.125*c[62]*ndx[11] - 0.125*c[83]*ndx[10], 0.125*c[104]*ndx[13] - 0.125*c[125]*ndx[12], 0.125*c[146]*ndx[15] - 0.125*c[167]*ndx[14], 1.875*c[20]*ndy[2] + 0.125*c[62]*ndy[0], 2*c[10]*ndy[10], 2*c[17]*ndy[18], -0.125*c[41]*ndy[3] + 0.125*c[83]*ndy[1], -0.125*c[104]*ndy[6] + 0.125*c[146]*ndy[4], -0.125*c[125]*ndy[7] + 0.125*c[167]*ndy[5], 2*c[19]*ndz[4], 2*c[17]*ndz[12], 2*c[14]*ndz[20],
                     2*c[1]*ndx[1], 2*c[10]*ndx[9], 2*c[9]*ndx[17], 2*c[10]*ndy[2], 2*c[6]*ndy[10], 2*c[8]*ndy[18], 2*c[9]*ndz[4], 2*c[8]*ndz[12], 2*c[7]*ndz[20],
                     2*c[3]*ndx[1], 0.125*c[17]*ndx[9] - 0.125*c[38]*ndx[8], 0.125*c[16]*ndx[17] - 0.125*c[37]*ndx[16], 0.125*c[59]*ndx[11] - 0.125*c[80]*ndx[10], 0.125*c[58]*ndx[19] - 0.125*c[79]*ndx[18], 0.125*c[101]*ndx[13] - 0.125*c[122]*ndx[12], 0.125*c[100]*ndx[21] - 0.125*c[121]*ndx[20], 0.125*c[143]*ndx[15] - 0.125*c[164]*ndx[14], 0.125*c[142]*ndx[23] - 0.125*c[163]*ndx[22], 1.875*c[17]*ndy[2] + 0.125*c[59]*ndy[0], 2*c[8]*ndy[10], 1.875*c[15]*ndy[18] + 0.125*c[57]*ndy[16], -0.125*c[38]*ndy[3] + 0.125*c[80]*ndy[1], -0.125*c[36]*ndy[19] + 0.125*c[78]*ndy[17], -0.125*c[101]*ndy[6] + 0.125*c[143]*ndy[4], 0.125*c[141]*ndy[20] - 0.125*c[99]*ndy[22], -0.125*c[122]*ndy[7] + 0.125*c[164]*ndy[5], -0.125*c[120]*ndy[23] + 0.125*c[162]*ndy[21], 0.125*c[100]*ndz[0] + 1.875*c[16]*ndz[4], 0.125*c[15]*ndz[12] - 0.125*c[99]*ndz[8], 2*c[12]*ndz[20], 0.125*c[121]*ndz[1] - 0.125*c[37]*ndz[5], -0.125*c[120]*ndz[9] + 0.125*c[36]*ndz[13], 0.125*c[142]*ndz[2] - 0.125*c[58]*ndz[6], -0.125*c[141]*ndz[10] + 0.125*c[57]*ndz[14], 0.125*c[163]*ndz[3] - 0.125*c[79]*ndz[7], -0.125*c[162]*ndz[11] + 0.125*c[78]*ndz[15],
                     -2*c[26]*ndx[0], 0.125*c[20]*ndx[9] - 0.125*c[41]*ndx[8], -2*c[40]*ndx[16], 0.125*c[62]*ndx[11] - 0.125*c[83]*ndx[10], 0.125*c[104]*ndx[13] - 0.125*c[125]*ndx[12], 0.125*c[146]*ndx[15] - 0.125*c[167]*ndx[14], -0.125*c[20]*ndy[2] + 0.125*c[62]*ndy[0], 1.875*c[41]*ndy[3] + 0.125*c[83]*ndy[1], 2*c[31]*ndy[11], 2*c[38]*ndy[19], -0.125*c[104]*ndy[6] + 0.125*c[146]*ndy[4], -0.125*c[125]*ndy[7] + 0.125*c[167]*ndy[5], 2*c[40]*ndz[5], 2*c[38]*ndz[13], 2*c[35]*ndz[21],
                     -2*c[22]*ndx[0], -2*c[31]*ndx[8], -2*c[30]*ndx[16], 2*c[31]*ndy[3], 2*c[27]*ndy[11], 2*c[29]*ndy[19], 2*c[30]*ndz[5], 2*c[29]*ndz[13], 2*c[28]*ndz[21],
                     -2*c[24]*ndx[0], 0.125*c[17]*ndx[9] - 0.125*c[38]*ndx[8], 0.125*c[16]*ndx[17] - 0.125*c[37]*ndx[16], 0.125*c[59]*ndx[11] - 0.125*c[80]*ndx[10], 0.125*c[58]*ndx[19] - 0.125*c[79]*ndx[18], 0.125*c[101]*ndx[13] - 0.125*c[122]*ndx[12], 0.125*c[100]*ndx[21] - 0.125*c[121]*ndx[20], 0.125*c[143]*ndx[15] - 0.125*c[164]*ndx[14], 0.125*c[142]*ndx[23] - 0.125*c[163]*ndx[22], -0.125*c[17]*ndy[2] + 0.125*c[59]*ndy[0], -0.125*c[15]*ndy[18] + 0.125*c[57]*ndy[16], 1.875*c[38]*ndy[3] + 0.125*c[80]*ndy[1], 2*c[29]*ndy[11], 1.875*c[36]*ndy[19] + 0.125*c[78]*ndy[17], -0.125*c[101]*ndy[6] + 0.125*c[143]*ndy[4], 0.125*c[141]*ndy[20] - 0.125*c[99]*ndy[22], -0.125*c[122]*ndy[7] + 0.125*c[164]*ndy[5], -0.125*c[120]*ndy[23] + 0.125*c[162]*ndy[21], 0.125*c[100]*ndz[0] - 0.125*c[16]*ndz[4], 0.125*c[15]*ndz[12] - 0.125*c[99]*ndz[8], 0.125*c[121]*ndz[1] + 1.875*c[37]*ndz[5], -0.125*c[120]*ndz[9] + 0.125*c[36]*ndz[13], 2*c[33]*ndz[21], 0.125*c[142]*ndz[2] - 0.125*c[58]*ndz[6], -0.125*c[141]*ndz[10] + 0.125*c[57]*ndz[14], 0.125*c[163]*ndz[3] - 0.125*c[79]*ndz[7], -0.125*c[162]*ndz[11] + 0.125*c[78]*ndz[15],
                     0.125*c[20]*ndx[9] - 0.125*c[41]*ndx[8], 0.125*c[62]*ndx[11] - 0.125*c[83]*ndx[10], 2*c[89]*ndx[5], 0.125*c[104]*ndx[13] - 0.125*c[125]*ndx[12], 2*c[103]*ndx[21], 0.125*c[146]*ndx[15] - 0.125*c[167]*ndx[14], -0.125*c[20]*ndy[2] + 0.125*c[62]*ndy[0], -0.125*c[41]*ndy[3] + 0.125*c[83]*ndy[1], 1.875*c[104]*ndy[6] + 0.125*c[146]*ndy[4], 2*c[94]*ndy[14], 2*c[101]*ndy[22], -0.125*c[125]*ndy[7] + 0.125*c[167]*ndy[5], -2*c[103]*ndz[0], -2*c[101]*ndz[8], -2*c[98]*ndz[16],
                     2*c[85]*ndx[5], 2*c[94]*ndx[13], 2*c[93]*ndx[21], 2*c[94]*ndy[6], 2*c[90]*ndy[14], 2*c[92]*ndy[22], -2*c[93]*ndz[0], -2*c[92]*ndz[8], -2*c[91]*ndz[16],
                     0.125*c[17]*ndx[9] - 0.125*c[38]*ndx[8], 0.125*c[16]*ndx[17] - 0.125*c[37]*ndx[16], 0.125*c[59]*ndx[11] - 0.125*c[80]*ndx[10], 0.125*c[58]*ndx[19] - 0.125*c[79]*ndx[18], 2*c[87]*ndx[5], 0.125*c[101]*ndx[13] - 0.125*c[122]*ndx[12], 0.125*c[100]*ndx[21] - 0.125*c[121]*ndx[20], 0.125*c[143]*ndx[15] - 0.125*c[164]*ndx[14], 0.125*c[142]*ndx[23] - 0.125*c[163]*ndx[22], -0.125*c[17]*ndy[2] + 0.125*c[59]*ndy[0], -0.125*c[15]*ndy[18] + 0.125*c[57]*ndy[16], -0.125*c[38]*ndy[3] + 0.125*c[80]*ndy[1], -0.125*c[36]*ndy[19] + 0.125*c[78]*ndy[17], 1.875*c[101]*ndy[6] + 0.125*c[143]*ndy[4], 2*c[92]*ndy[14], 0.125*c[141]*ndy[20] + 1.875*c[99]*ndy[22], -0.125*c[122]*ndy[7] + 0.125*c[164]*ndy[5], -0.125*c[120]*ndy[23] + 0.125*c[162]*ndy[21], -1.875*c[100]*ndz[0] - 0.125*c[16]*ndz[4], 0.125*c[15]*ndz[12] - 0.125*c[99]*ndz[8], -2*c[96]*ndz[16], 0.125*c[121]*ndz[1] - 0.125*c[37]*ndz[5], -0.125*c[120]*ndz[9] + 0.125*c[36]*ndz[13], 0.125*c[142]*ndz[2] - 0.125*c[58]*ndz[6], -0.125*c[141]*ndz[10] + 0.125*c[57]*ndz[14], 0.125*c[163]*ndz[3] - 0.125*c[79]*ndz[7], -0.125*c[162]*ndz[11] + 0.125*c[78]*ndz[15],
                     0.125*c[20]*ndx[9] - 0.125*c[41]*ndx[8], 0.125*c[62]*ndx[11] - 0.125*c[83]*ndx[10], -2*c[110]*ndx[4], 0.125*c[104]*ndx[13] - 0.125*c[125]*ndx[12], -2*c[124]*ndx[20], 0.125*c[146]*ndx[15] - 0.125*c[167]*ndx[14], -0.125*c[20]*ndy[2] + 0.125*c[62]*ndy[0], -0.125*c[41]*ndy[3] + 0.125*c[83]*ndy[1], -0.125*c[104]*ndy[6] + 0.125*c[146]*ndy[4], 1.875*c[125]*ndy[7] + 0.125*c[167]*ndy[5], 2*c[115]*ndy[15], 2*c[122]*ndy[23], -2*c[124]*ndz[1], -2*c[122]*ndz[9], -2*c[119]*ndz[17],
                     -2*c[106]*ndx[4], -2*c[115]*ndx[12], -2*c[114]*ndx[20], 2*c[115]*ndy[7], 2*c[111]*ndy[15], 2*c[113]*ndy[23], -2*c[114]*ndz[1], -2*c[113]*ndz[9], -2*c[112]*ndz[17],
                     0.125*c[17]*ndx[9] - 0.125*c[38]*ndx[8], 0.125*c[16]*ndx[17] - 0.125*c[37]*ndx[16], 0.125*c[59]*ndx[11] - 0.125*c[80]*ndx[10], 0.125*c[58]*ndx[19] - 0.125*c[79]*ndx[18], -2*c[108]*ndx[4], 0.125*c[101]*ndx[13] - 0.125*c[122]*ndx[12], 0.125*c[100]*ndx[21] - 0.125*c[121]*ndx[20], 0.125*c[143]*ndx[15] - 0.125*c[164]*ndx[14], 0.125*c[142]*ndx[23] - 0.125*c[163]*ndx[22], -0.125*c[17]*ndy[2] + 0.125*c[59]*ndy[0], -0.125*c[15]*ndy[18] + 0.125*c[57]*ndy[16], -0.125*c[38]*ndy[3] + 0.125*c[80]*ndy[1], -0.125*c[36]*ndy[19] + 0.125*c[78]*ndy[17], -0.125*c[101]*ndy[6] + 0.125*c[143]*ndy[4], 0.125*c[141]*ndy[20] - 0.125*c[99]*ndy[22], 1.875*c[122]*ndy[7] + 0.125*c[164]*ndy[5], 2*c[113]*ndy[15], 1.875*c[120]*ndy[23] + 0.125*c[162]*ndy[21], 0.125*c[100]*ndz[0] - 0.125*c[16]*ndz[4], 0.125*c[15]*ndz[12] - 0.125*c[99]*ndz[8], -1.875*c[121]*ndz[1] - 0.125*c[37]*ndz[5], -0.125*c[120]*ndz[9] + 0.125*c[36]*ndz[13], -2*c[117]*ndz[17], 0.125*c[142]*ndz[2] - 0.125*c[58]*ndz[6], -0.125*c[141]*ndz[10] + 0.125*c[57]*ndz[14], 0.125*c[163]*ndz[3] - 0.125*c[79]*ndz[7], -0.125*c[162]*ndz[11] + 0.125*c[78]*ndz[15],
                     2*c[4]*ndx[1], 2*c[19]*ndx[9], 0.125*c[18]*ndx[17] - 0.125*c[39]*ndx[16], 0.125*c[60]*ndx[19] - 0.125*c[81]*ndx[18], 0.125*c[102]*ndx[21] - 0.125*c[123]*ndx[20], 0.125*c[144]*ndx[23] - 0.125*c[165]*ndx[22], 2*c[19]*ndy[2], 2*c[9]*ndy[10], 2*c[16]*ndy[18], 0.125*c[102]*ndz[0] + 1.875*c[18]*ndz[4], 2*c[16]*ndz[12], 2*c[13]*ndz[20], 0.125*c[123]*ndz[1] - 0.125*c[39]*ndz[5], 0.125*c[144]*ndz[2] - 0.125*c[60]*ndz[6], 0.125*c[165]*ndz[3] - 0.125*c[81]*ndz[7],
                     2*c[3]*ndx[1], 2*c[17]*ndx[9], 2*c[16]*ndx[17], 2*c[17]*ndy[2], 2*c[8]*ndy[10], 0.125*c[15]*ndy[18] - 0.125*c[57]*ndy[16], 0.125*c[36]*ndy[19] - 0.125*c[78]*ndy[17], -0.125*c[141]*ndy[20] + 0.125*c[99]*ndy[22], 0.125*c[120]*ndy[23] - 0.125*c[162]*ndy[21], 2*c[16]*ndz[4], 1.875*c[15]*ndz[12] + 0.125*c[99]*ndz[8], 2*c[12]*ndz[20], 0.125*c[120]*ndz[9] - 0.125*c[36]*ndz[13], 0.125*c[141]*ndz[10] - 0.125*c[57]*ndz[14], 0.125*c[162]*ndz[11] - 0.125*c[78]*ndz[15],
                     2*c[2]*ndx[1], 2*c[14]*ndx[9], 2*c[13]*ndx[17], 2*c[14]*ndy[2], 2*c[7]*ndy[10], 2*c[12]*ndy[18], 2*c[13]*ndz[4], 2*c[12]*ndz[12], 2*c[11]*ndz[20],
                     -2*c[25]*ndx[0], -2*c[40]*ndx[8], 0.125*c[18]*ndx[17] - 0.125*c[39]*ndx[16], 0.125*c[60]*ndx[19] - 0.125*c[81]*ndx[18], 0.125*c[102]*ndx[21] - 0.125*c[123]*ndx[20], 0.125*c[144]*ndx[23] - 0.125*c[165]*ndx[22], 2*c[40]*ndy[3], 2*c[30]*ndy[11], 2*c[37]*ndy[19], 0.125*c[102]*ndz[0] - 0.125*c[18]*ndz[4], 0.125*c[123]*ndz[1] + 1.875*c[39]*ndz[5], 2*c[37]*ndz[13], 2*c[34]*ndz[21], 0.125*c[144]*ndz[2] - 0.125*c[60]*ndz[6], 0.125*c[165]*ndz[3] - 0.125*c[81]*ndz[7],
                     -2*c[24]*ndx[0], -2*c[38]*ndx[8], -2*c[37]*ndx[16], 0.125*c[15]*ndy[18] - 0.125*c[57]*ndy[16], 2*c[38]*ndy[3], 2*c[29]*ndy[11], 0.125*c[36]*ndy[19] - 0.125*c[78]*ndy[17], -0.125*c[141]*ndy[20] + 0.125*c[99]*ndy[22], 0.125*c[120]*ndy[23] - 0.125*c[162]*ndy[21], -0.125*c[15]*ndz[12] + 0.125*c[99]*ndz[8], 2*c[37]*ndz[5], 0.125*c[120]*ndz[9] + 1.875*c[36]*ndz[13], 2*c[33]*ndz[21], 0.125*c[141]*ndz[10] - 0.125*c[57]*ndz[14], 0.125*c[162]*ndz[11] - 0.125*c[78]*ndz[15],
                     -2*c[23]*ndx[0], -2*c[35]*ndx[8], -2*c[34]*ndx[16], 2*c[35]*ndy[3], 2*c[28]*ndy[11], 2*c[33]*ndy[19], 2*c[34]*ndz[5], 2*c[33]*ndz[13], 2*c[32]*ndz[21],
                     0.125*c[18]*ndx[17] - 0.125*c[39]*ndx[16], 2*c[46]*ndx[3], 2*c[61]*ndx[11], 0.125*c[60]*ndx[19] - 0.125*c[81]*ndx[18], 0.125*c[102]*ndx[21] - 0.125*c[123]*ndx[20], 0.125*c[144]*ndx[23] - 0.125*c[165]*ndx[22], -2*c[61]*ndy[0], -2*c[51]*ndy[8], -2*c[58]*ndy[16], 0.125*c[102]*ndz[0] - 0.125*c[18]*ndz[4], 0.125*c[123]*ndz[1] - 0.125*c[39]*ndz[5], 0.125*c[144]*ndz[2] + 1.875*c[60]*ndz[6], 2*c[58]*ndz[14], 2*c[55]*ndz[22], 0.125*c[165]*ndz[3] - 0.125*c[81]*ndz[7],
                     2*c[45]*ndx[3], 2*c[59]*ndx[11], 2*c[58]*ndx[19], -2*c[59]*ndy[0], -2*c[50]*ndy[8], 0.125*c[15]*ndy[18] - 0.125*c[57]*ndy[16], 0.125*c[36]*ndy[19] - 0.125*c[78]*ndy[17], -0.125*c[141]*ndy[20] + 0.125*c[99]*ndy[22], 0.125*c[120]*ndy[23] - 0.125*c[162]*ndy[21], -0.125*c[15]*ndz[12] + 0.125*c[99]*ndz[8], 0.125*c[120]*ndz[9] - 0.125*c[36]*ndz[13], 2*c[58]*ndz[6], 0.125*c[141]*ndz[10] + 1.875*c[57]*ndz[14], 2*c[54]*ndz[22], 0.125*c[162]*ndz[11] - 0.125*c[78]*ndz[15],
                     2*c[44]*ndx[3], 2*c[56]*ndx[11], 2*c[55]*ndx[19], -2*c[56]*ndy[0], -2*c[49]*ndy[8], -2*c[54]*ndy[16], 2*c[55]*ndz[6], 2*c[54]*ndz[14], 2*c[53]*ndz[22],
                     0.125*c[18]*ndx[17] - 0.125*c[39]*ndx[16], -2*c[67]*ndx[2], -2*c[82]*ndx[10], 0.125*c[60]*ndx[19] - 0.125*c[81]*ndx[18], 0.125*c[102]*ndx[21] - 0.125*c[123]*ndx[20], 0.125*c[144]*ndx[23] - 0.125*c[165]*ndx[22], -2*c[82]*ndy[1], -2*c[72]*ndy[9], -2*c[79]*ndy[17], 0.125*c[102]*ndz[0] - 0.125*c[18]*ndz[4], 0.125*c[123]*ndz[1] - 0.125*c[39]*ndz[5], 0.125*c[144]*ndz[2] - 0.125*c[60]*ndz[6], 0.125*c[165]*ndz[3] + 1.875*c[81]*ndz[7], 2*c[79]*ndz[15], 2*c[76]*ndz[23],
                     -2*c[66]*ndx[2], -2*c[80]*ndx[10], -2*c[79]*ndx[18], 0.125*c[15]*ndy[18] - 0.125*c[57]*ndy[16], -2*c[80]*ndy[1], -2*c[71]*ndy[9], 0.125*c[36]*ndy[19] - 0.125*c[78]*ndy[17], -0.125*c[141]*ndy[20] + 0.125*c[99]*ndy[22], 0.125*c[120]*ndy[23] - 0.125*c[162]*ndy[21], -0.125*c[15]*ndz[12] + 0.125*c[99]*ndz[8], 0.125*c[120]*ndz[9] - 0.125*c[36]*ndz[13], 0.125*c[141]*ndz[10] - 0.125*c[57]*ndz[14], 2*c[79]*ndz[7], 0.125*c[162]*ndz[11] + 1.875*c[78]*ndz[15], 2*c[75]*ndz[23],
                     -2*c[65]*ndx[2], -2*c[77]*ndx[10], -2*c[76]*ndx[18], -2*c[77]*ndy[1], -2*c[70]*ndy[9], -2*c[75]*ndy[17], 2*c[76]*ndz[7], 2*c[75]*ndz[15], 2*c[74]*ndz[23]]).transpose((1, 2, 0))


def fill_Bmpsa(c):
    return np.array([-2*c[0] - 2*c[4] - 2*c[5], -2*c[1] - 2*c[3] - 2*c[5], -2*c[2] - 2*c[3] - 2*c[4],
                     -1.875*c[19] - 0.125*c[20] - 2*c[5], 0.125*c[40] - 0.125*c[41], 0.125*c[61] + 0.125*c[62], 0.125*c[82] + 0.125*c[83], -0.125*c[103] - 0.125*c[104], -0.125*c[124] - 0.125*c[125], -0.125*c[145] + 0.125*c[146], -0.125*c[166] + 0.125*c[167], -2*c[10] - 1.875*c[17] - 1.875*c[20], 0.125*c[38] - 0.125*c[41], 0.125*c[59] + 0.125*c[62], 0.125*c[80] - 0.125*c[83], -0.125*c[101] + 0.125*c[104], -0.125*c[122] - 0.125*c[125], -0.125*c[143] + 0.125*c[146], -0.125*c[164] - 0.125*c[167], -2*c[14] - 0.125*c[17] - 0.125*c[19], -0.125*c[38] + 0.125*c[40], 0.125*c[59] - 0.125*c[61], 0.125*c[80] + 0.125*c[82], -0.125*c[101] - 0.125*c[103], -0.125*c[122] + 0.125*c[124], 0.125*c[143] - 0.125*c[145], 0.125*c[164] + 0.125*c[166],
                     -0.125*c[18] - 1.875*c[19] - 2*c[4], -0.125*c[39] + 0.125*c[40], -0.125*c[60] - 0.125*c[61], -0.125*c[81] - 0.125*c[82], 0.125*c[102] + 0.125*c[103], 0.125*c[123] + 0.125*c[124], 0.125*c[144] - 0.125*c[145], 0.125*c[165] - 0.125*c[166], -1.875*c[16] - 0.125*c[19] - 2*c[9], 0.125*c[37] + 0.125*c[40], 0.125*c[58] - 0.125*c[61], 0.125*c[79] + 0.125*c[82], -0.125*c[100] - 0.125*c[103], -0.125*c[121] + 0.125*c[124], -0.125*c[142] - 0.125*c[145], -0.125*c[163] + 0.125*c[166], -2*c[13] - 0.125*c[16] - 1.875*c[18], -0.125*c[37] - 0.125*c[39], 0.125*c[58] + 0.125*c[60], 0.125*c[79] - 0.125*c[81], -0.125*c[100] + 0.125*c[102], -0.125*c[121] - 0.125*c[123], 0.125*c[142] + 0.125*c[144], 0.125*c[163] - 0.125*c[165],
                     -2*c[42] - 2*c[46] + 2*c[47], 2*c[43] - 2*c[45] - 2*c[47], -2*c[44] + 2*c[45] - 2*c[46],
                     0.125*c[19] - 0.125*c[20], 0.125*c[40] - 0.125*c[41], -2*c[47] - 1.875*c[61] + 0.125*c[62], 0.125*c[82] + 0.125*c[83], -0.125*c[103] - 0.125*c[104], -0.125*c[124] - 0.125*c[125], -0.125*c[145] + 0.125*c[146], -0.125*c[166] + 0.125*c[167], 0.125*c[17] + 0.125*c[20], 0.125*c[38] - 0.125*c[41], 2*c[52] - 1.875*c[59] - 1.875*c[62], 0.125*c[80] - 0.125*c[83], -0.125*c[101] + 0.125*c[104], -0.125*c[122] - 0.125*c[125], -0.125*c[143] + 0.125*c[146], -0.125*c[164] - 0.125*c[167], -0.125*c[17] - 0.125*c[19], -0.125*c[38] + 0.125*c[40], -2*c[56] + 0.125*c[59] - 0.125*c[61], 0.125*c[80] + 0.125*c[82], -0.125*c[101] - 0.125*c[103], -0.125*c[122] + 0.125*c[124], 0.125*c[143] - 0.125*c[145], 0.125*c[164] + 0.125*c[166],
                     -0.125*c[18] + 0.125*c[19], -0.125*c[39] + 0.125*c[40], -2*c[46] - 0.125*c[60] + 1.875*c[61], -0.125*c[81] - 0.125*c[82], 0.125*c[102] + 0.125*c[103], 0.125*c[123] + 0.125*c[124], 0.125*c[144] - 0.125*c[145], 0.125*c[165] - 0.125*c[166], 0.125*c[16] - 0.125*c[19], 0.125*c[37] + 0.125*c[40], 2*c[51] - 1.875*c[58] - 0.125*c[61], 0.125*c[79] + 0.125*c[82], -0.125*c[100] - 0.125*c[103], -0.125*c[121] + 0.125*c[124], -0.125*c[142] - 0.125*c[145], -0.125*c[163] + 0.125*c[166], -0.125*c[16] + 0.125*c[18], -0.125*c[37] - 0.125*c[39], -2*c[55] + 0.125*c[58] - 1.875*c[60], 0.125*c[79] - 0.125*c[81], -0.125*c[100] + 0.125*c[102], -0.125*c[121] - 0.125*c[123], 0.125*c[142] + 0.125*c[144], 0.125*c[163] - 0.125*c[165],
                     -2*c[84] + 2*c[88] - 2*c[89], -2*c[85] + 2*c[87] - 2*c[89], 2*c[86] - 2*c[87] - 2*c[88],
                     0.125*c[19] - 0.125*c[20], 0.125*c[40] - 0.125*c[41], 0.125*c[61] + 0.125*c[62], 0.125*c[82] + 0.125*c[83], 1.875*c[103] - 0.125*c[104] - 2*c[89], -0.125*c[124] - 0.125*c[125], -0.125*c[145] + 0.125*c[146], -0.125*c[166] + 0.125*c[167], 0.125*c[17] + 0.125*c[20], 0.125*c[38] - 0.125*c[41], 0.125*c[59] + 0.125*c[62], 0.125*c[80] - 0.125*c[83], 1.875*c[101] - 1.875*c[104] - 2*c[94], -0.125*c[122] - 0.125*c[125], -0.125*c[143] + 0.125*c[146], -0.125*c[164] - 0.125*c[167], -0.125*c[17] - 0.125*c[19], -0.125*c[38] + 0.125*c[40], 0.125*c[59] - 0.125*c[61], 0.125*c[80] + 0.125*c[82], -0.125*c[101] - 0.125*c[103] + 2*c[98], -0.125*c[122] + 0.125*c[124], 0.125*c[143] - 0.125*c[145], 0.125*c[164] + 0.125*c[166],
                     -0.125*c[18] + 0.125*c[19], -0.125*c[39] + 0.125*c[40], -0.125*c[60] - 0.125*c[61], -0.125*c[81] - 0.125*c[82], 0.125*c[102] - 1.875*c[103] - 2*c[88], 0.125*c[123] + 0.125*c[124], 0.125*c[144] - 0.125*c[145], 0.125*c[165] - 0.125*c[166], 0.125*c[16] - 0.125*c[19], 0.125*c[37] + 0.125*c[40], 0.125*c[58] - 0.125*c[61], 0.125*c[79] + 0.125*c[82], 1.875*c[100] - 0.125*c[103] - 2*c[93], -0.125*c[121] + 0.125*c[124], -0.125*c[142] - 0.125*c[145], -0.125*c[163] + 0.125*c[166], -0.125*c[16] + 0.125*c[18], -0.125*c[37] - 0.125*c[39], 0.125*c[58] + 0.125*c[60], 0.125*c[79] - 0.125*c[81], -0.125*c[100] - 1.875*c[102] + 2*c[97], -0.125*c[121] - 0.125*c[123], 0.125*c[142] + 0.125*c[144], 0.125*c[163] - 0.125*c[165],
                     -2*c[126] + 2*c[130] + 2*c[131], 2*c[127] + 2*c[129] - 2*c[131], 2*c[128] + 2*c[129] - 2*c[130],
                     0.125*c[19] - 0.125*c[20], 0.125*c[40] - 0.125*c[41], 0.125*c[61] + 0.125*c[62], 0.125*c[82] + 0.125*c[83], -0.125*c[103] - 0.125*c[104], -0.125*c[124] - 0.125*c[125], -2*c[131] + 1.875*c[145] + 0.125*c[146], -0.125*c[166] + 0.125*c[167], 0.125*c[17] + 0.125*c[20], 0.125*c[38] - 0.125*c[41], 0.125*c[59] + 0.125*c[62], 0.125*c[80] - 0.125*c[83], -0.125*c[101] + 0.125*c[104], -0.125*c[122] - 0.125*c[125], 2*c[136] + 1.875*c[143] - 1.875*c[146], -0.125*c[164] - 0.125*c[167], -0.125*c[17] - 0.125*c[19], -0.125*c[38] + 0.125*c[40], 0.125*c[59] - 0.125*c[61], 0.125*c[80] + 0.125*c[82], -0.125*c[101] - 0.125*c[103], -0.125*c[122] + 0.125*c[124], 2*c[140] + 0.125*c[143] - 0.125*c[145], 0.125*c[164] + 0.125*c[166],
                     -0.125*c[18] + 0.125*c[19], -0.125*c[39] + 0.125*c[40], -0.125*c[60] - 0.125*c[61], -0.125*c[81] - 0.125*c[82], 0.125*c[102] + 0.125*c[103], 0.125*c[123] + 0.125*c[124], -2*c[130] + 0.125*c[144] + 1.875*c[145], 0.125*c[165] - 0.125*c[166], 0.125*c[16] - 0.125*c[19], 0.125*c[37] + 0.125*c[40], 0.125*c[58] - 0.125*c[61], 0.125*c[79] + 0.125*c[82], -0.125*c[100] - 0.125*c[103], -0.125*c[121] + 0.125*c[124], 2*c[135] + 1.875*c[142] - 0.125*c[145], -0.125*c[163] + 0.125*c[166], -0.125*c[16] + 0.125*c[18], -0.125*c[37] - 0.125*c[39], 0.125*c[58] + 0.125*c[60], 0.125*c[79] - 0.125*c[81], -0.125*c[100] + 0.125*c[102], -0.125*c[121] - 0.125*c[123], 2*c[139] + 0.125*c[142] - 1.875*c[144], 0.125*c[163] - 0.125*c[165],
                     -2*c[19] - 1.875*c[20] - 2*c[5], 0.125*c[41], -0.125*c[62], -0.125*c[83], 0.125*c[104], 0.125*c[125], -0.125*c[146], -0.125*c[167], -2*c[10] - 2*c[17] - 0.125*c[20], 0.125*c[41], -0.125*c[62], 0.125*c[83], -0.125*c[104], 0.125*c[125], -0.125*c[146], 0.125*c[167], -2*c[14] - 2*c[17] - 2*c[19],
                     -2*c[1] - 2*c[10] - 2*c[9], -2*c[10] - 2*c[6] - 2*c[8], -2*c[7] - 2*c[8] - 2*c[9],
                     -1.875*c[16] - 1.875*c[17] - 2*c[3], 0.125*c[37] + 0.125*c[38], 0.125*c[58] - 0.125*c[59], 0.125*c[79] - 0.125*c[80], -0.125*c[100] + 0.125*c[101], -0.125*c[121] + 0.125*c[122], -0.125*c[142] - 0.125*c[143], -0.125*c[163] - 0.125*c[164], -0.125*c[15] - 0.125*c[17] - 2*c[8], -0.125*c[36] + 0.125*c[38], -0.125*c[57] - 0.125*c[59], -0.125*c[78] + 0.125*c[80], -0.125*c[101] + 0.125*c[99], 0.125*c[120] + 0.125*c[122], 0.125*c[141] - 0.125*c[143], 0.125*c[162] + 0.125*c[164], -2*c[12] - 1.875*c[15] - 0.125*c[16], 0.125*c[36] + 0.125*c[37], -0.125*c[57] - 0.125*c[58], -0.125*c[78] + 0.125*c[79], -0.125*c[100] + 0.125*c[99], 0.125*c[120] + 0.125*c[121], -0.125*c[141] - 0.125*c[142], -0.125*c[162] + 0.125*c[163],
                     0.125*c[20], 2*c[26] - 2*c[40] - 1.875*c[41], -0.125*c[62], -0.125*c[83], 0.125*c[104], 0.125*c[125], -0.125*c[146], -0.125*c[167], -0.125*c[20], -2*c[31] - 2*c[38] + 0.125*c[41], -0.125*c[62], 0.125*c[83], -0.125*c[104], 0.125*c[125], -0.125*c[146], 0.125*c[167], -2*c[35] - 2*c[38] + 2*c[40],
                     2*c[22] - 2*c[30] - 2*c[31], -2*c[27] - 2*c[29] + 2*c[31], -2*c[28] - 2*c[29] + 2*c[30],
                     0.125*c[16] + 0.125*c[17], 2*c[24] - 1.875*c[37] - 1.875*c[38], 0.125*c[58] - 0.125*c[59], 0.125*c[79] - 0.125*c[80], -0.125*c[100] + 0.125*c[101], -0.125*c[121] + 0.125*c[122], -0.125*c[142] - 0.125*c[143], -0.125*c[163] - 0.125*c[164], -0.125*c[15] - 0.125*c[17], -2*c[29] - 0.125*c[36] + 0.125*c[38], -0.125*c[57] - 0.125*c[59], -0.125*c[78] + 0.125*c[80], -0.125*c[101] + 0.125*c[99], 0.125*c[120] + 0.125*c[122], 0.125*c[141] - 0.125*c[143], 0.125*c[162] + 0.125*c[164], 0.125*c[15] - 0.125*c[16], -2*c[33] - 1.875*c[36] + 0.125*c[37], -0.125*c[57] - 0.125*c[58], -0.125*c[78] + 0.125*c[79], -0.125*c[100] + 0.125*c[99], 0.125*c[120] + 0.125*c[121], -0.125*c[141] - 0.125*c[142], -0.125*c[162] + 0.125*c[163],
                     0.125*c[20], 0.125*c[41], -0.125*c[62], -0.125*c[83], 2*c[103] - 1.875*c[104] - 2*c[89], 0.125*c[125], -0.125*c[146], -0.125*c[167], -0.125*c[20], 0.125*c[41], -0.125*c[62], 0.125*c[83], 2*c[101] - 0.125*c[104] - 2*c[94], 0.125*c[125], -0.125*c[146], 0.125*c[167], -2*c[101] - 2*c[103] + 2*c[98],
                     -2*c[85] + 2*c[93] - 2*c[94], -2*c[90] + 2*c[92] - 2*c[94], 2*c[91] - 2*c[92] - 2*c[93],
                     0.125*c[16] + 0.125*c[17], 0.125*c[37] + 0.125*c[38], 0.125*c[58] - 0.125*c[59], 0.125*c[79] - 0.125*c[80], 1.875*c[100] - 1.875*c[101] - 2*c[87], -0.125*c[121] + 0.125*c[122], -0.125*c[142] - 0.125*c[143], -0.125*c[163] - 0.125*c[164], -0.125*c[15] - 0.125*c[17], -0.125*c[36] + 0.125*c[38], -0.125*c[57] - 0.125*c[59], -0.125*c[78] + 0.125*c[80], -0.125*c[101] - 2*c[92] + 0.125*c[99], 0.125*c[120] + 0.125*c[122], 0.125*c[141] - 0.125*c[143], 0.125*c[162] + 0.125*c[164], 0.125*c[15] - 0.125*c[16], 0.125*c[36] + 0.125*c[37], -0.125*c[57] - 0.125*c[58], -0.125*c[78] + 0.125*c[79], -0.125*c[100] + 2*c[96] - 1.875*c[99], 0.125*c[120] + 0.125*c[121], -0.125*c[141] - 0.125*c[142], -0.125*c[162] + 0.125*c[163],
                     0.125*c[20], 0.125*c[41], -0.125*c[62], -0.125*c[83], 0.125*c[104], 2*c[110] + 2*c[124] - 1.875*c[125], -0.125*c[146], -0.125*c[167], -0.125*c[20], 0.125*c[41], -0.125*c[62], 0.125*c[83], -0.125*c[104], -2*c[115] + 2*c[122] + 0.125*c[125], -0.125*c[146], 0.125*c[167], 2*c[119] - 2*c[122] + 2*c[124],
                     2*c[106] + 2*c[114] - 2*c[115], -2*c[111] + 2*c[113] + 2*c[115], 2*c[112] - 2*c[113] + 2*c[114],
                     0.125*c[16] + 0.125*c[17], 0.125*c[37] + 0.125*c[38], 0.125*c[58] - 0.125*c[59], 0.125*c[79] - 0.125*c[80], -0.125*c[100] + 0.125*c[101], 2*c[108] + 1.875*c[121] - 1.875*c[122], -0.125*c[142] - 0.125*c[143], -0.125*c[163] - 0.125*c[164], -0.125*c[15] - 0.125*c[17], -0.125*c[36] + 0.125*c[38], -0.125*c[57] - 0.125*c[59], -0.125*c[78] + 0.125*c[80], -0.125*c[101] + 0.125*c[99], -2*c[113] + 0.125*c[120] + 0.125*c[122], 0.125*c[141] - 0.125*c[143], 0.125*c[162] + 0.125*c[164], 0.125*c[15] - 0.125*c[16], 0.125*c[36] + 0.125*c[37], -0.125*c[57] - 0.125*c[58], -0.125*c[78] + 0.125*c[79], -0.125*c[100] + 0.125*c[99], 2*c[117] - 1.875*c[120] + 0.125*c[121], -0.125*c[141] - 0.125*c[142], -0.125*c[162] + 0.125*c[163],
                     -1.875*c[18] - 2*c[19] - 2*c[4], 0.125*c[39], 0.125*c[60], 0.125*c[81], -0.125*c[102], -0.125*c[123], -0.125*c[144], -0.125*c[165], -2*c[16] - 2*c[19] - 2*c[9], -2*c[13] - 2*c[16] - 0.125*c[18], 0.125*c[39], -0.125*c[60], 0.125*c[81], -0.125*c[102], 0.125*c[123], -0.125*c[144], 0.125*c[165],
                     -2*c[16] - 2*c[17] - 2*c[3], -1.875*c[15] - 2*c[17] - 2*c[8], 0.125*c[36], 0.125*c[57], 0.125*c[78], -0.125*c[99], -0.125*c[120], -0.125*c[141], -0.125*c[162], -2*c[12] - 0.125*c[15] - 2*c[16], -0.125*c[36], 0.125*c[57], 0.125*c[78], -0.125*c[99], -0.125*c[120], 0.125*c[141], 0.125*c[162],
                     -2*c[13] - 2*c[14] - 2*c[2], -2*c[12] - 2*c[14] - 2*c[7], -2*c[11] - 2*c[12] - 2*c[13],
                     0.125*c[18], 2*c[25] - 1.875*c[39] - 2*c[40], 0.125*c[60], 0.125*c[81], -0.125*c[102], -0.125*c[123], -0.125*c[144], -0.125*c[165], -2*c[30] - 2*c[37] + 2*c[40], -0.125*c[18], -2*c[34] - 2*c[37] + 0.125*c[39], -0.125*c[60], 0.125*c[81], -0.125*c[102], 0.125*c[123], -0.125*c[144], 0.125*c[165],
                     2*c[24] - 2*c[37] - 2*c[38], 0.125*c[15], -2*c[29] - 1.875*c[36] + 2*c[38], 0.125*c[57], 0.125*c[78], -0.125*c[99], -0.125*c[120], -0.125*c[141], -0.125*c[162], -0.125*c[15], -2*c[33] - 0.125*c[36] + 2*c[37], 0.125*c[57], 0.125*c[78], -0.125*c[99], -0.125*c[120], 0.125*c[141], 0.125*c[162],
                     2*c[23] - 2*c[34] - 2*c[35], -2*c[28] - 2*c[33] + 2*c[35], -2*c[32] - 2*c[33] + 2*c[34],
                     0.125*c[18], 0.125*c[39], -2*c[46] - 1.875*c[60] + 2*c[61], 0.125*c[81], -0.125*c[102], -0.125*c[123], -0.125*c[144], -0.125*c[165], 2*c[51] - 2*c[58] - 2*c[61], -0.125*c[18], 0.125*c[39], -2*c[55] + 2*c[58] - 0.125*c[60], 0.125*c[81], -0.125*c[102], 0.125*c[123], -0.125*c[144], 0.125*c[165],
                     -2*c[45] - 2*c[58] + 2*c[59], 0.125*c[15], 0.125*c[36], 2*c[50] - 1.875*c[57] - 2*c[59], 0.125*c[78], -0.125*c[99], -0.125*c[120], -0.125*c[141], -0.125*c[162], -0.125*c[15], -0.125*c[36], -2*c[54] + 0.125*c[57] - 2*c[58], 0.125*c[78], -0.125*c[99], -0.125*c[120], 0.125*c[141], 0.125*c[162],
                     -2*c[44] - 2*c[55] + 2*c[56], 2*c[49] - 2*c[54] - 2*c[56], -2*c[53] + 2*c[54] - 2*c[55],
                     0.125*c[18], 0.125*c[39], 0.125*c[60], 2*c[67] - 1.875*c[81] + 2*c[82], -0.125*c[102], -0.125*c[123], -0.125*c[144], -0.125*c[165], 2*c[72] - 2*c[79] + 2*c[82], -0.125*c[18], 0.125*c[39], -0.125*c[60], -2*c[76] + 2*c[79] + 0.125*c[81], -0.125*c[102], 0.125*c[123], -0.125*c[144], 0.125*c[165],
                     2*c[66] - 2*c[79] + 2*c[80], 0.125*c[15], 0.125*c[36], 0.125*c[57], 2*c[71] - 1.875*c[78] + 2*c[80], -0.125*c[99], -0.125*c[120], -0.125*c[141], -0.125*c[162], -0.125*c[15], -0.125*c[36], 0.125*c[57], -2*c[75] + 0.125*c[78] + 2*c[79], -0.125*c[99], -0.125*c[120], 0.125*c[141], 0.125*c[162],
                     2*c[65] - 2*c[76] + 2*c[77], 2*c[70] - 2*c[75] + 2*c[77], -2*c[74] + 2*c[75] + 2*c[76]]).transpose((1, 2, 0))


def fill_Cmpsa(c, ndx, ndy, ndz):
    return 2 * np.array([c[0]*ndx[1] + c[21]*ndx[0], c[26]*ndx[8] + c[5]*ndx[9], c[25]*ndx[16] + c[4]*ndx[17], c[5]*ndy[2], c[1]*ndy[10], c[3]*ndy[18], -c[26]*ndy[3], -c[22]*ndy[11], -c[24]*ndy[19], c[4]*ndz[4], c[3]*ndz[12], c[2]*ndz[20], -c[25]*ndz[5], -c[24]*ndz[13], -c[23]*ndz[21],
                         c[26]*ndx[0] + c[5]*ndx[1], c[20]*ndx[9] + c[41]*ndx[8], c[10]*ndy[10], -c[31]*ndy[11], c[19]*ndz[4], c[17]*ndz[12], c[14]*ndz[20], -c[40]*ndz[5], -c[38]*ndz[13], -c[35]*ndz[21],
                         c[25]*ndx[0] + c[4]*ndx[1], c[18]*ndx[17] + c[39]*ndx[16], c[19]*ndy[2], c[9]*ndy[10], -c[40]*ndy[3], -c[30]*ndy[11], c[16]*ndz[12], c[13]*ndz[20], -c[37]*ndz[13], -c[34]*ndz[21],
                         c[42]*ndx[3] + c[63]*ndx[2], c[47]*ndx[11] + c[68]*ndx[10], c[46]*ndx[19] + c[67]*ndx[18], -c[47]*ndy[0], -c[43]*ndy[8], -c[45]*ndy[16], c[68]*ndy[1], c[64]*ndy[9], c[66]*ndy[17], c[46]*ndz[6], c[45]*ndz[14], c[44]*ndz[22], -c[67]*ndz[7], -c[66]*ndz[15], -c[65]*ndz[23],
                         c[47]*ndx[3] + c[68]*ndx[2], c[62]*ndx[11] + c[83]*ndx[10], -c[52]*ndy[8], c[73]*ndy[9], c[61]*ndz[6], c[59]*ndz[14], c[56]*ndz[22], -c[82]*ndz[7], -c[80]*ndz[15], -c[77]*ndz[23],
                         c[46]*ndx[3] + c[67]*ndx[2], c[60]*ndx[19] + c[81]*ndx[18], -c[61]*ndy[0], -c[51]*ndy[8], c[82]*ndy[1], c[72]*ndy[9], c[58]*ndz[14], c[55]*ndz[22], -c[79]*ndz[15], -c[76]*ndz[23],
                         c[105]*ndx[4] + c[84]*ndx[5], c[110]*ndx[12] + c[89]*ndx[13], c[109]*ndx[20] + c[88]*ndx[21], c[89]*ndy[6], c[85]*ndy[14], c[87]*ndy[22], -c[110]*ndy[7], -c[106]*ndy[15], -c[108]*ndy[23], -c[88]*ndz[0], -c[87]*ndz[8], -c[86]*ndz[16], c[109]*ndz[1], c[108]*ndz[9], c[107]*ndz[17],
                         c[110]*ndx[4] + c[89]*ndx[5], c[104]*ndx[13] + c[125]*ndx[12], c[94]*ndy[14], -c[115]*ndy[15], -c[103]*ndz[0], -c[101]*ndz[8], -c[98]*ndz[16], c[124]*ndz[1], c[122]*ndz[9], c[119]*ndz[17],
                         c[109]*ndx[4] + c[88]*ndx[5], c[102]*ndx[21] + c[123]*ndx[20], c[103]*ndy[6], c[93]*ndy[14], -c[124]*ndy[7], -c[114]*ndy[15], -c[100]*ndz[8], -c[97]*ndz[16], c[121]*ndz[9], c[118]*ndz[17],
                         c[126]*ndx[7] + c[147]*ndx[6], c[131]*ndx[15] + c[152]*ndx[14], c[130]*ndx[23] + c[151]*ndx[22], -c[131]*ndy[4], -c[127]*ndy[12], -c[129]*ndy[20], c[152]*ndy[5], c[148]*ndy[13], c[150]*ndy[21], -c[130]*ndz[2], -c[129]*ndz[10], -c[128]*ndz[18], c[151]*ndz[3], c[150]*ndz[11], c[149]*ndz[19],
                         c[131]*ndx[7] + c[152]*ndx[6], c[146]*ndx[15] + c[167]*ndx[14], -c[136]*ndy[12], c[157]*ndy[13], -c[145]*ndz[2], -c[143]*ndz[10], -c[140]*ndz[18], c[166]*ndz[3], c[164]*ndz[11], c[161]*ndz[19],
                         c[130]*ndx[7] + c[151]*ndx[6], c[144]*ndx[23] + c[165]*ndx[22], -c[145]*ndy[4], -c[135]*ndy[12], c[166]*ndy[5], c[156]*ndy[13], -c[142]*ndz[10], -c[139]*ndz[18], c[163]*ndz[11], c[160]*ndz[19],
                         c[5]*ndx[1], c[19]*ndx[17], -c[47]*ndx[3], -c[61]*ndx[19], c[20]*ndy[2] + c[62]*ndy[0], c[10]*ndy[10] + c[52]*ndy[8], c[17]*ndy[18] + c[59]*ndy[16], c[19]*ndz[4], c[17]*ndz[12], c[14]*ndz[20], -c[61]*ndz[6], -c[59]*ndz[14], -c[56]*ndz[22],
                         c[1]*ndx[1], c[10]*ndx[9], c[9]*ndx[17], -c[43]*ndx[3], -c[52]*ndx[11], -c[51]*ndx[19], c[10]*ndy[2] + c[52]*ndy[0], c[48]*ndy[8] + c[6]*ndy[10], c[50]*ndy[16] + c[8]*ndy[18], c[9]*ndz[4], c[8]*ndz[12], c[7]*ndz[20], -c[51]*ndz[6], -c[50]*ndz[14], -c[49]*ndz[22],
                         c[3]*ndx[1], -c[45]*ndx[3], c[17]*ndy[2] + c[59]*ndy[0], c[50]*ndy[8] + c[8]*ndy[10], c[15]*ndy[18] + c[57]*ndy[16], c[16]*ndz[4], c[12]*ndz[20], -c[58]*ndz[6], -c[54]*ndz[22],
                         -c[26]*ndx[0], -c[40]*ndx[16], c[68]*ndx[2], c[82]*ndx[18], c[41]*ndy[3] + c[83]*ndy[1], c[31]*ndy[11] + c[73]*ndy[9], c[38]*ndy[19] + c[80]*ndy[17], c[40]*ndz[5], c[38]*ndz[13], c[35]*ndz[21], -c[82]*ndz[7], -c[80]*ndz[15], -c[77]*ndz[23],
                         -c[22]*ndx[0], -c[31]*ndx[8], -c[30]*ndx[16], c[64]*ndx[2], c[73]*ndx[10], c[72]*ndx[18], c[31]*ndy[3] + c[73]*ndy[1], c[27]*ndy[11] + c[69]*ndy[9], c[29]*ndy[19] + c[71]*ndy[17], c[30]*ndz[5], c[29]*ndz[13], c[28]*ndz[21], -c[72]*ndz[7], -c[71]*ndz[15], -c[70]*ndz[23],
                         -c[24]*ndx[0], c[66]*ndx[2], c[38]*ndy[3] + c[80]*ndy[1], c[29]*ndy[11] + c[71]*ndy[9], c[36]*ndy[19] + c[78]*ndy[17], c[37]*ndz[5], c[33]*ndz[21], -c[79]*ndz[7], -c[75]*ndz[23],
                         c[89]*ndx[5], c[103]*ndx[21], -c[131]*ndx[7], -c[145]*ndx[23], c[104]*ndy[6] + c[146]*ndy[4], c[136]*ndy[12] + c[94]*ndy[14], c[101]*ndy[22] + c[143]*ndy[20], -c[103]*ndz[0], -c[101]*ndz[8], -c[98]*ndz[16], c[145]*ndz[2], c[143]*ndz[10], c[140]*ndz[18],
                         c[85]*ndx[5], c[94]*ndx[13], c[93]*ndx[21], -c[127]*ndx[7], -c[136]*ndx[15], -c[135]*ndx[23], c[136]*ndy[4] + c[94]*ndy[6], c[132]*ndy[12] + c[90]*ndy[14], c[134]*ndy[20] + c[92]*ndy[22], -c[93]*ndz[0], -c[92]*ndz[8], -c[91]*ndz[16], c[135]*ndz[2], c[134]*ndz[10], c[133]*ndz[18],
                         c[87]*ndx[5], -c[129]*ndx[7], c[101]*ndy[6] + c[143]*ndy[4], c[134]*ndy[12] + c[92]*ndy[14], c[141]*ndy[20] + c[99]*ndy[22], -c[100]*ndz[0], -c[96]*ndz[16], c[142]*ndz[2], c[138]*ndz[18],
                         -c[110]*ndx[4], -c[124]*ndx[20], c[152]*ndx[6], c[166]*ndx[22], c[125]*ndy[7] + c[167]*ndy[5], c[115]*ndy[15] + c[157]*ndy[13], c[122]*ndy[23] + c[164]*ndy[21], -c[124]*ndz[1], -c[122]*ndz[9], -c[119]*ndz[17], c[166]*ndz[3], c[164]*ndz[11], c[161]*ndz[19],
                         -c[106]*ndx[4], -c[115]*ndx[12], -c[114]*ndx[20], c[148]*ndx[6], c[157]*ndx[14], c[156]*ndx[22], c[115]*ndy[7] + c[157]*ndy[5], c[111]*ndy[15] + c[153]*ndy[13], c[113]*ndy[23] + c[155]*ndy[21], -c[114]*ndz[1], -c[113]*ndz[9], -c[112]*ndz[17], c[156]*ndz[3], c[155]*ndz[11], c[154]*ndz[19],
                         -c[108]*ndx[4], c[150]*ndx[6], c[122]*ndy[7] + c[164]*ndy[5], c[113]*ndy[15] + c[155]*ndy[13], c[120]*ndy[23] + c[162]*ndy[21], -c[121]*ndz[1], -c[117]*ndz[17], c[163]*ndz[3], c[159]*ndz[19],
                         c[4]*ndx[1], c[19]*ndx[9], -c[88]*ndx[5], -c[103]*ndx[13], c[19]*ndy[2], c[9]*ndy[10], c[16]*ndy[18], -c[103]*ndy[6], -c[93]*ndy[14], -c[100]*ndy[22], c[102]*ndz[0] + c[18]*ndz[4], c[100]*ndz[8] + c[16]*ndz[12], c[13]*ndz[20] + c[97]*ndz[16],
                         c[3]*ndx[1], c[17]*ndx[9], c[16]*ndx[17], -c[87]*ndx[5], -c[101]*ndx[13], -c[100]*ndx[21], c[17]*ndy[2], c[8]*ndy[10], -c[101]*ndy[6], -c[92]*ndy[14], c[100]*ndz[0] + c[16]*ndz[4], c[15]*ndz[12] + c[99]*ndz[8], c[12]*ndz[20] + c[96]*ndz[16],
                         c[2]*ndx[1], c[14]*ndx[9], c[13]*ndx[17], -c[86]*ndx[5], -c[98]*ndx[13], -c[97]*ndx[21], c[14]*ndy[2], c[7]*ndy[10], c[12]*ndy[18], -c[98]*ndy[6], -c[91]*ndy[14], -c[96]*ndy[22], c[13]*ndz[4] + c[97]*ndz[0], c[12]*ndz[12] + c[96]*ndz[8], c[11]*ndz[20] + c[95]*ndz[16],
                         -c[25]*ndx[0], -c[40]*ndx[8], c[109]*ndx[4], c[124]*ndx[12], c[40]*ndy[3], c[30]*ndy[11], c[37]*ndy[19], -c[124]*ndy[7], -c[114]*ndy[15], -c[121]*ndy[23], c[123]*ndz[1] + c[39]*ndz[5], c[121]*ndz[9] + c[37]*ndz[13], c[118]*ndz[17] + c[34]*ndz[21],
                         -c[24]*ndx[0], -c[38]*ndx[8], -c[37]*ndx[16], c[108]*ndx[4], c[122]*ndx[12], c[121]*ndx[20], c[38]*ndy[3], c[29]*ndy[11], -c[122]*ndy[7], -c[113]*ndy[15], c[121]*ndz[1] + c[37]*ndz[5], c[120]*ndz[9] + c[36]*ndz[13], c[117]*ndz[17] + c[33]*ndz[21],
                         -c[23]*ndx[0], -c[35]*ndx[8], -c[34]*ndx[16], c[107]*ndx[4], c[119]*ndx[12], c[118]*ndx[20], c[35]*ndy[3], c[28]*ndy[11], c[33]*ndy[19], -c[119]*ndy[7], -c[112]*ndy[15], -c[117]*ndy[23], c[118]*ndz[1] + c[34]*ndz[5], c[117]*ndz[9] + c[33]*ndz[13], c[116]*ndz[17] + c[32]*ndz[21],
                         c[46]*ndx[3], c[61]*ndx[11], -c[130]*ndx[7], -c[145]*ndx[15], -c[61]*ndy[0], -c[51]*ndy[8], -c[58]*ndy[16], c[145]*ndy[4], c[135]*ndy[12], c[142]*ndy[20], c[144]*ndz[2] + c[60]*ndz[6], c[142]*ndz[10] + c[58]*ndz[14], c[139]*ndz[18] + c[55]*ndz[22],
                         c[45]*ndx[3], c[59]*ndx[11], c[58]*ndx[19], -c[129]*ndx[7], -c[143]*ndx[15], -c[142]*ndx[23], -c[59]*ndy[0], -c[50]*ndy[8], c[143]*ndy[4], c[134]*ndy[12], c[142]*ndz[2] + c[58]*ndz[6], c[141]*ndz[10] + c[57]*ndz[14], c[138]*ndz[18] + c[54]*ndz[22],
                         c[44]*ndx[3], c[56]*ndx[11], c[55]*ndx[19], -c[128]*ndx[7], -c[140]*ndx[15], -c[139]*ndx[23], -c[56]*ndy[0], -c[49]*ndy[8], -c[54]*ndy[16], c[140]*ndy[4], c[133]*ndy[12], c[138]*ndy[20], c[139]*ndz[2] + c[55]*ndz[6], c[138]*ndz[10] + c[54]*ndz[14], c[137]*ndz[18] + c[53]*ndz[22],
                         -c[67]*ndx[2], -c[82]*ndx[10], c[151]*ndx[6], c[166]*ndx[14], -c[82]*ndy[1], -c[72]*ndy[9], -c[79]*ndy[17], c[166]*ndy[5], c[156]*ndy[13], c[163]*ndy[21], c[165]*ndz[3] + c[81]*ndz[7], c[163]*ndz[11] + c[79]*ndz[15], c[160]*ndz[19] + c[76]*ndz[23],
                         -c[66]*ndx[2], -c[80]*ndx[10], -c[79]*ndx[18], c[150]*ndx[6], c[164]*ndx[14], c[163]*ndx[22], -c[80]*ndy[1], -c[71]*ndy[9], c[164]*ndy[5], c[155]*ndy[13], c[163]*ndz[3] + c[79]*ndz[7], c[162]*ndz[11] + c[78]*ndz[15], c[159]*ndz[19] + c[75]*ndz[23],
                         -c[65]*ndx[2], -c[77]*ndx[10], -c[76]*ndx[18], c[149]*ndx[6], c[161]*ndx[14], c[160]*ndx[22], -c[77]*ndy[1], -c[70]*ndy[9], -c[75]*ndy[17], c[161]*ndy[5], c[154]*ndy[13], c[159]*ndy[21], c[160]*ndz[3] + c[76]*ndz[7], c[159]*ndz[11] + c[75]*ndz[15], c[158]*ndz[19] + c[74]*ndz[23]]).transpose((1, 2, 0))


def fill_Dmpsa(c):
    return 2 * np.array([c[0] + c[4] + c[5], c[21] - c[25] - c[26], c[1] + c[3] + c[5], -c[22] - c[24] + c[26], c[2] + c[3] + c[4], -c[23] - c[24] + c[25],
                         c[19] + c[5], c[26] - c[40], c[10] + c[17] + c[20], -c[31] - c[38] + c[41], c[14], -c[35],
                         c[19] + c[4], c[25] - c[40], c[16] + c[9], -c[30] - c[37], c[13] + c[18], -c[34] + c[39],
                         c[42] + c[46] - c[47], c[63] - c[67] + c[68], -c[43] + c[45] + c[47], c[64] - c[66] + c[68], c[44] - c[45] + c[46], -c[65] + c[66] + c[67],
                         c[47] + c[61], c[68] - c[82], -c[52] + c[59] + c[62], c[73] - c[80] + c[83], c[56], -c[77],
                         c[46] - c[61], c[67] + c[82], -c[51] + c[58], c[72] - c[79], c[55] + c[60], -c[76] + c[81],
                         c[84] - c[88] + c[89], c[105] + c[109] - c[110], c[85] - c[87] + c[89], -c[106] + c[108] + c[110], -c[86] + c[87] + c[88], c[107] - c[108] + c[109],
                         -c[103] + c[89], c[110] + c[124], -c[101] + c[104] + c[94], -c[115] + c[122] + c[125], -c[98], c[119],
                         c[103] + c[88], c[109] - c[124], -c[100] + c[93], -c[114] + c[121], c[102] - c[97], c[118] + c[123],
                         c[126] - c[130] - c[131], c[147] + c[151] + c[152], -c[127] - c[129] + c[131], c[148] + c[150] + c[152], -c[128] - c[129] + c[130], c[149] + c[150] + c[151],
                         c[131] - c[145], c[152] + c[166], -c[136] - c[143] + c[146], c[157] + c[164] + c[167], -c[140], c[161],
                         c[130] - c[145], c[151] + c[166], -c[135] - c[142], c[156] + c[163], -c[139] + c[144], c[160] + c[165],
                         c[19] + c[20] + c[5], -c[47] - c[61] + c[62], c[10] + c[17], c[52] - c[59], c[14] + c[17] + c[19], -c[56] + c[59] - c[61],
                         c[1] + c[10] + c[9], -c[43] - c[51] + c[52], c[10] + c[6] + c[8], c[48] - c[50] - c[52], c[7] + c[8] + c[9], -c[49] + c[50] - c[51],
                         c[16] + c[17] + c[3], -c[45] - c[58] + c[59], c[8], c[50], c[12] + c[15], -c[54] + c[57],
                         -c[26] + c[40] + c[41], c[68] - c[82] + c[83], c[31] + c[38], c[73] - c[80], c[35] + c[38] - c[40], -c[77] + c[80] + c[82],
                         -c[22] + c[30] + c[31], c[64] - c[72] + c[73], c[27] + c[29] - c[31], c[69] - c[71] + c[73], c[28] + c[29] - c[30], -c[70] + c[71] + c[72],
                         -c[24] + c[37] + c[38], c[66] - c[79] + c[80], c[29], c[71], c[33] + c[36], -c[75] + c[78],
                         -c[103] + c[104] + c[89], -c[131] + c[145] + c[146], -c[101] + c[94], c[136] + c[143], c[101] + c[103] - c[98], c[140] + c[143] - c[145],
                         c[85] - c[93] + c[94], -c[127] + c[135] + c[136], c[90] - c[92] + c[94], c[132] + c[134] - c[136], -c[91] + c[92] + c[93], c[133] + c[134] - c[135],
                         -c[100] + c[101] + c[87], -c[129] + c[142] + c[143], c[92], c[134], -c[96] + c[99], c[138] + c[141],
                         -c[110] - c[124] + c[125], c[152] + c[166] + c[167], c[115] - c[122], c[157] + c[164], -c[119] + c[122] - c[124], c[161] + c[164] + c[166],
                         -c[106] - c[114] + c[115], c[148] + c[156] + c[157], c[111] - c[113] - c[115], c[153] + c[155] + c[157], -c[112] + c[113] - c[114], c[154] + c[155] + c[156],
                         -c[108] - c[121] + c[122], c[150] + c[163] + c[164], c[113], c[155], -c[117] + c[120], c[159] + c[162],
                         c[18] + c[19] + c[4], c[102] - c[103] - c[88], c[16] + c[19] + c[9], c[100] - c[103] - c[93], c[13] + c[16], -c[100] + c[97],
                         c[16] + c[17] + c[3], c[100] - c[101] - c[87], c[15] + c[17] + c[8], -c[101] - c[92] + c[99], c[12] + c[16], -c[100] + c[96],
                         c[13] + c[14] + c[2], -c[86] + c[97] - c[98], c[12] + c[14] + c[7], -c[91] + c[96] - c[98], c[11] + c[12] + c[13], c[95] - c[96] - c[97],
                         -c[25] + c[39] + c[40], c[109] + c[123] - c[124], c[30] + c[37] - c[40], -c[114] + c[121] + c[124], c[34] + c[37], c[118] - c[121],
                         -c[24] + c[37] + c[38], c[108] + c[121] - c[122], c[29] + c[36] - c[38], -c[113] + c[120] + c[122], c[33] - c[37], c[117] + c[121],
                         -c[23] + c[34] + c[35], c[107] + c[118] - c[119], c[28] + c[33] - c[35], -c[112] + c[117] + c[119], c[32] + c[33] - c[34], c[116] - c[117] + c[118],
                         c[46] + c[60] - c[61], -c[130] + c[144] + c[145], -c[51] + c[58] + c[61], c[135] + c[142] - c[145], c[55] - c[58], c[139] + c[142],
                         c[45] + c[58] - c[59], -c[129] + c[142] + c[143], -c[50] + c[57] + c[59], c[134] + c[141] - c[143], c[54] + c[58], c[138] - c[142],
                         c[44] + c[55] - c[56], -c[128] + c[139] + c[140], -c[49] + c[54] + c[56], c[133] + c[138] - c[140], c[53] - c[54] + c[55], c[137] + c[138] - c[139],
                         -c[67] + c[81] - c[82], c[151] + c[165] + c[166], -c[72] + c[79] - c[82], c[156] + c[163] + c[166], c[76] - c[79], c[160] + c[163],
                         -c[66] + c[79] - c[80], c[150] + c[163] + c[164], -c[71] + c[78] - c[80], c[155] + c[162] + c[164], c[75] - c[79], c[159] + c[163],
                         -c[65] + c[76] - c[77], c[149] + c[160] + c[161], -c[70] + c[75] - c[77], c[154] + c[159] + c[161], c[74] - c[75] - c[76], c[158] + c[159] + c[160]])

def create_d1_mpsa(c, d):
    return 2 * np.array([[-c[0]*d[0] - c[1]*d[13] - c[2]*d[26] - c[21]*d[0] + c[22]*d[16] + c[23]*d[29] + c[24]*d[28] + c[24]*d[17] + c[25]*d[27] - c[25]*d[2] + c[26]*d[15] - c[26]*d[1] - c[3]*d[25] - c[3]*d[14] - c[4]*d[24] - c[4]*d[2] - c[5]*d[12] - c[5]*d[1]],
                         [-c[10]*d[13] - c[14]*d[26] - c[17]*d[25] - c[19]*d[24] - c[20]*d[1] - c[26]*d[0] + c[31]*d[16] + c[35]*d[29] + c[38]*d[28] + c[40]*d[27] - c[41]*d[1] - c[5]*d[0]],
                         [-c[13]*d[26] - c[16]*d[25] - c[18]*d[2] - c[19]*d[12] - c[25]*d[0] + c[30]*d[16] + c[34]*d[29] + c[37]*d[28] - c[39]*d[2] - c[4]*d[0] + c[40]*d[15] - c[9]*d[13]],
                         [-c[42]*d[3] + c[43]*d[13] - c[44]*d[32] - c[45]*d[31] + c[45]*d[14] - c[46]*d[30] - c[46]*d[5] + c[47]*d[12] - c[47]*d[4] - c[63]*d[3] - c[64]*d[16] + c[65]*d[35] + c[66]*d[34] - c[66]*d[17] + c[67]*d[33] - c[67]*d[5] - c[68]*d[15] - c[68]*d[4]],
                         [-c[47]*d[3] + c[52]*d[13] - c[56]*d[32] - c[59]*d[31] - c[61]*d[30] - c[62]*d[4] - c[68]*d[3] - c[73]*d[16] + c[77]*d[35] + c[80]*d[34] + c[82]*d[33] - c[83]*d[4]],
                         [-c[46]*d[3] + c[51]*d[13] - c[55]*d[32] - c[58]*d[31] - c[60]*d[5] + c[61]*d[12] - c[67]*d[3] - c[72]*d[16] + c[76]*d[35] + c[79]*d[34] - c[81]*d[5] - c[82]*d[15]],
                         [-c[105]*d[6] + c[106]*d[22] - c[107]*d[29] - c[108]*d[28] + c[108]*d[23] - c[109]*d[27] - c[109]*d[8] + c[110]*d[21] - c[110]*d[7] - c[84]*d[6] - c[85]*d[19] + c[86]*d[26] + c[87]*d[25] - c[87]*d[20] + c[88]*d[24] - c[88]*d[8] - c[89]*d[18] - c[89]*d[7]],
                         [c[101]*d[25] + c[103]*d[24] - c[104]*d[7] - c[110]*d[6] + c[115]*d[22] - c[119]*d[29] - c[122]*d[28] - c[124]*d[27] - c[125]*d[7] - c[89]*d[6] - c[94]*d[19] + c[98]*d[26]],
                         [c[100]*d[25] - c[102]*d[8] - c[103]*d[18] - c[109]*d[6] + c[114]*d[22] - c[118]*d[29] - c[121]*d[28] - c[123]*d[8] + c[124]*d[21] - c[88]*d[6] - c[93]*d[19] + c[97]*d[26]],
                         [-c[126]*d[9] + c[127]*d[19] + c[128]*d[32] + c[129]*d[31] + c[129]*d[20] + c[130]*d[30] - c[130]*d[11] + c[131]*d[18] - c[131]*d[10] - c[147]*d[9] - c[148]*d[22] - c[149]*d[35] - c[150]*d[34] - c[150]*d[23] - c[151]*d[33] - c[151]*d[11] - c[152]*d[21] - c[152]*d[10]],
                         [-c[131]*d[9] + c[136]*d[19] + c[140]*d[32] + c[143]*d[31] + c[145]*d[30] - c[146]*d[10] - c[152]*d[9] - c[157]*d[22] - c[161]*d[35] - c[164]*d[34] - c[166]*d[33] - c[167]*d[10]],
                         [-c[130]*d[9] + c[135]*d[19] + c[139]*d[32] + c[142]*d[31] - c[144]*d[11] + c[145]*d[18] - c[151]*d[9] - c[156]*d[22] - c[160]*d[35] - c[163]*d[34] - c[165]*d[11] - c[166]*d[21]],
                         [-c[10]*d[13] - c[14]*d[26] - c[17]*d[25] - c[17]*d[14] - c[19]*d[24] - c[19]*d[2] - c[20]*d[12] + c[47]*d[3] - c[5]*d[0] - c[52]*d[13] + c[56]*d[32] + c[59]*d[31] - c[59]*d[14] + c[61]*d[30] + c[61]*d[5] - c[62]*d[12]],
                         [-c[1]*d[0] - c[10]*d[12] - c[10]*d[1] + c[43]*d[3] - c[48]*d[13] + c[49]*d[32] + c[50]*d[31] - c[50]*d[14] + c[51]*d[30] + c[51]*d[5] - c[52]*d[12] + c[52]*d[4] - c[6]*d[13] - c[7]*d[26] - c[8]*d[25] - c[8]*d[14] - c[9]*d[24] - c[9]*d[2]],
                         [-c[12]*d[26] - c[15]*d[14] - c[16]*d[24] - c[17]*d[12] - c[3]*d[0] + c[45]*d[3] - c[50]*d[13] + c[54]*d[32] - c[57]*d[14] + c[58]*d[30] - c[59]*d[12] - c[8]*d[13]],
                         [c[26]*d[0] - c[31]*d[16] - c[35]*d[29] - c[38]*d[28] - c[38]*d[17] - c[40]*d[27] + c[40]*d[2] - c[41]*d[15] - c[68]*d[3] - c[73]*d[16] + c[77]*d[35] + c[80]*d[34] - c[80]*d[17] + c[82]*d[33] - c[82]*d[5] - c[83]*d[15]],
                         [c[22]*d[0] - c[27]*d[16] - c[28]*d[29] - c[29]*d[28] - c[29]*d[17] - c[30]*d[27] + c[30]*d[2] - c[31]*d[15] + c[31]*d[1] - c[64]*d[3] - c[69]*d[16] + c[70]*d[35] + c[71]*d[34] - c[71]*d[17] + c[72]*d[33] - c[72]*d[5] - c[73]*d[15] - c[73]*d[4]],
                         [c[24]*d[0] - c[29]*d[16] - c[33]*d[29] - c[36]*d[17] - c[37]*d[27] - c[38]*d[15] - c[66]*d[3] - c[71]*d[16] + c[75]*d[35] - c[78]*d[17] + c[79]*d[33] - c[80]*d[15]],
                         [c[101]*d[25] - c[101]*d[20] + c[103]*d[24] - c[103]*d[8] - c[104]*d[18] + c[131]*d[9] - c[136]*d[19] - c[140]*d[32] - c[143]*d[31] - c[143]*d[20] - c[145]*d[30] + c[145]*d[11] - c[146]*d[18] - c[89]*d[6] - c[94]*d[19] + c[98]*d[26]],
                         [c[127]*d[9] - c[132]*d[19] - c[133]*d[32] - c[134]*d[31] - c[134]*d[20] - c[135]*d[30] + c[135]*d[11] - c[136]*d[18] + c[136]*d[10] - c[85]*d[6] - c[90]*d[19] + c[91]*d[26] + c[92]*d[25] - c[92]*d[20] + c[93]*d[24] - c[93]*d[8] - c[94]*d[18] - c[94]*d[7]],
                         [c[100]*d[24] - c[101]*d[18] + c[129]*d[9] - c[134]*d[19] - c[138]*d[32] - c[141]*d[20] - c[142]*d[30] - c[143]*d[18] - c[87]*d[6] - c[92]*d[19] + c[96]*d[26] - c[99]*d[20]],
                         [c[110]*d[6] - c[115]*d[22] + c[119]*d[29] + c[122]*d[28] - c[122]*d[23] + c[124]*d[27] + c[124]*d[8] - c[125]*d[21] - c[152]*d[9] - c[157]*d[22] - c[161]*d[35] - c[164]*d[34] - c[164]*d[23] - c[166]*d[33] - c[166]*d[11] - c[167]*d[21]],
                         [c[106]*d[6] - c[111]*d[22] + c[112]*d[29] + c[113]*d[28] - c[113]*d[23] + c[114]*d[27] + c[114]*d[8] - c[115]*d[21] + c[115]*d[7] - c[148]*d[9] - c[153]*d[22] - c[154]*d[35] - c[155]*d[34] - c[155]*d[23] - c[156]*d[33] - c[156]*d[11] - c[157]*d[21] - c[157]*d[10]],
                         [c[108]*d[6] - c[113]*d[22] + c[117]*d[29] - c[120]*d[23] + c[121]*d[27] - c[122]*d[21] - c[150]*d[9] - c[155]*d[22] - c[159]*d[35] - c[162]*d[23] - c[163]*d[33] - c[164]*d[21]],
                         [-c[100]*d[25] + c[100]*d[20] - c[102]*d[24] + c[103]*d[18] + c[103]*d[7] - c[13]*d[26] - c[16]*d[25] - c[16]*d[14] - c[18]*d[24] - c[19]*d[12] - c[19]*d[1] - c[4]*d[0] + c[88]*d[6] - c[9]*d[13] + c[93]*d[19] - c[97]*d[26]],
                         [-c[100]*d[24] + c[100]*d[8] + c[101]*d[18] + c[101]*d[7] - c[12]*d[26] - c[15]*d[25] - c[16]*d[24] - c[16]*d[2] - c[17]*d[12] - c[17]*d[1] - c[3]*d[0] - c[8]*d[13] + c[87]*d[6] + c[92]*d[19] - c[96]*d[26] - c[99]*d[25]],
                         [-c[11]*d[26] - c[12]*d[25] - c[12]*d[14] - c[13]*d[24] - c[13]*d[2] - c[14]*d[12] - c[14]*d[1] - c[2]*d[0] - c[7]*d[13] + c[86]*d[6] + c[91]*d[19] - c[95]*d[26] - c[96]*d[25] + c[96]*d[20] - c[97]*d[24] + c[97]*d[8] + c[98]*d[18] + c[98]*d[7]],
                         [-c[109]*d[6] + c[114]*d[22] - c[118]*d[29] - c[121]*d[28] + c[121]*d[23] - c[123]*d[27] + c[124]*d[21] - c[124]*d[7] + c[25]*d[0] - c[30]*d[16] - c[34]*d[29] - c[37]*d[28] - c[37]*d[17] - c[39]*d[27] - c[40]*d[15] + c[40]*d[1]],
                         [-c[108]*d[6] + c[113]*d[22] - c[117]*d[29] - c[120]*d[28] - c[121]*d[27] - c[121]*d[8] + c[122]*d[21] - c[122]*d[7] + c[24]*d[0] - c[29]*d[16] - c[33]*d[29] - c[36]*d[28] - c[37]*d[27] + c[37]*d[2] - c[38]*d[15] + c[38]*d[1]],
                         [-c[107]*d[6] + c[112]*d[22] - c[116]*d[29] - c[117]*d[28] + c[117]*d[23] - c[118]*d[27] - c[118]*d[8] + c[119]*d[21] - c[119]*d[7] + c[23]*d[0] - c[28]*d[16] - c[32]*d[29] - c[33]*d[28] - c[33]*d[17] - c[34]*d[27] + c[34]*d[2] - c[35]*d[15] + c[35]*d[1]],
                         [c[130]*d[9] - c[135]*d[19] - c[139]*d[32] - c[142]*d[31] - c[142]*d[20] - c[144]*d[30] - c[145]*d[18] + c[145]*d[10] - c[46]*d[3] + c[51]*d[13] - c[55]*d[32] - c[58]*d[31] + c[58]*d[14] - c[60]*d[30] + c[61]*d[12] - c[61]*d[4]],
                         [c[129]*d[9] - c[134]*d[19] - c[138]*d[32] - c[141]*d[31] - c[142]*d[30] + c[142]*d[11] - c[143]*d[18] + c[143]*d[10] - c[45]*d[3] + c[50]*d[13] - c[54]*d[32] - c[57]*d[31] - c[58]*d[30] - c[58]*d[5] + c[59]*d[12] - c[59]*d[4]],
                         [c[128]*d[9] - c[133]*d[19] - c[137]*d[32] - c[138]*d[31] - c[138]*d[20] - c[139]*d[30] + c[139]*d[11] - c[140]*d[18] + c[140]*d[10] - c[44]*d[3] + c[49]*d[13] - c[53]*d[32] - c[54]*d[31] + c[54]*d[14] - c[55]*d[30] - c[55]*d[5] + c[56]*d[12] - c[56]*d[4]],
                         [-c[151]*d[9] - c[156]*d[22] - c[160]*d[35] - c[163]*d[34] - c[163]*d[23] - c[165]*d[33] - c[166]*d[21] - c[166]*d[10] + c[67]*d[3] + c[72]*d[16] - c[76]*d[35] - c[79]*d[34] + c[79]*d[17] - c[81]*d[33] + c[82]*d[15] + c[82]*d[4]],
                         [-c[150]*d[9] - c[155]*d[22] - c[159]*d[35] - c[162]*d[34] - c[163]*d[33] - c[163]*d[11] - c[164]*d[21] - c[164]*d[10] + c[66]*d[3] + c[71]*d[16] - c[75]*d[35] - c[78]*d[34] - c[79]*d[33] + c[79]*d[5] + c[80]*d[15] + c[80]*d[4]],
                         [-c[149]*d[9] - c[154]*d[22] - c[158]*d[35] - c[159]*d[34] - c[159]*d[23] - c[160]*d[33] - c[160]*d[11] - c[161]*d[21] - c[161]*d[10] + c[65]*d[3] + c[70]*d[16] - c[74]*d[35] - c[75]*d[34] + c[75]*d[17] - c[76]*d[33] + c[76]*d[5] + c[77]*d[15] + c[77]*d[4]]]).transpose((2, 3, 0, 1))


def create_d2_mpsa(c, d):
    return np.array([[2*c[0]*d[0] + 2*c[1]*d[13] + 2*c[2]*d[26] + 2*c[3]*d[25] + 2*c[3]*d[14] + 2*c[4]*d[24] + 2*c[4]*d[2] + 2*c[5]*d[12] + 2*c[5]*d[1]],
                     [2*c[10]*d[13] + 0.125*c[101]*d[25] + 0.125*c[101]*d[20] + 0.125*c[103]*d[24] + 0.125*c[103]*d[8] + 0.125*c[104]*d[18] - 0.125*c[104]*d[7] + 0.125*c[122]*d[28] + 0.125*c[122]*d[23] + 0.125*c[124]*d[27] - 0.125*c[124]*d[8] + 0.125*c[125]*d[21] + 0.125*c[125]*d[7] + 2*c[14]*d[26] + 0.125*c[143]*d[31] - 0.125*c[143]*d[20] + 0.125*c[145]*d[30] + 0.125*c[145]*d[11] - 0.125*c[146]*d[18] - 0.125*c[146]*d[10] + 0.125*c[164]*d[34] - 0.125*c[164]*d[23] + 0.125*c[166]*d[33] - 0.125*c[166]*d[11] - 0.125*c[167]*d[21] + 0.125*c[167]*d[10] + 1.875*c[17]*d[25] + 0.125*c[17]*d[14] + 1.875*c[19]*d[24] + 0.125*c[19]*d[2] + 0.125*c[20]*d[12] + 1.875*c[20]*d[1] - 0.125*c[38]*d[28] + 0.125*c[38]*d[17] - 0.125*c[40]*d[27] - 0.125*c[40]*d[2] + 0.125*c[41]*d[15] + 0.125*c[41]*d[1] + 2*c[5]*d[0] - 0.125*c[59]*d[31] - 0.125*c[59]*d[14] - 0.125*c[61]*d[30] + 0.125*c[61]*d[5] - 0.125*c[62]*d[12] - 0.125*c[62]*d[4] - 0.125*c[80]*d[34] - 0.125*c[80]*d[17] - 0.125*c[82]*d[33] - 0.125*c[82]*d[5] - 0.125*c[83]*d[15] + 0.125*c[83]*d[4]],
                     [0.125*c[100]*d[25] + 0.125*c[100]*d[20] - 0.125*c[102]*d[24] - 0.125*c[102]*d[8] - 0.125*c[103]*d[18] + 0.125*c[103]*d[7] + 0.125*c[121]*d[28] + 0.125*c[121]*d[23] - 0.125*c[123]*d[27] + 0.125*c[123]*d[8] - 0.125*c[124]*d[21] - 0.125*c[124]*d[7] + 2*c[13]*d[26] + 0.125*c[142]*d[31] - 0.125*c[142]*d[20] - 0.125*c[144]*d[30] - 0.125*c[144]*d[11] + 0.125*c[145]*d[18] + 0.125*c[145]*d[10] + 1.875*c[16]*d[25] + 0.125*c[16]*d[14] + 0.125*c[163]*d[34] - 0.125*c[163]*d[23] - 0.125*c[165]*d[33] + 0.125*c[165]*d[11] + 0.125*c[166]*d[21] - 0.125*c[166]*d[10] + 0.125*c[18]*d[24] + 1.875*c[18]*d[2] + 1.875*c[19]*d[12] + 0.125*c[19]*d[1] - 0.125*c[37]*d[28] + 0.125*c[37]*d[17] + 0.125*c[39]*d[27] + 0.125*c[39]*d[2] + 2*c[4]*d[0] - 0.125*c[40]*d[15] - 0.125*c[40]*d[1] - 0.125*c[58]*d[31] - 0.125*c[58]*d[14] + 0.125*c[60]*d[30] - 0.125*c[60]*d[5] + 0.125*c[61]*d[12] + 0.125*c[61]*d[4] - 0.125*c[79]*d[34] - 0.125*c[79]*d[17] + 0.125*c[81]*d[33] + 0.125*c[81]*d[5] + 0.125*c[82]*d[15] - 0.125*c[82]*d[4] + 2*c[9]*d[13]],
                     [2*c[42]*d[3] - 2*c[43]*d[13] + 2*c[44]*d[32] + 2*c[45]*d[31] - 2*c[45]*d[14] + 2*c[46]*d[30] + 2*c[46]*d[5] - 2*c[47]*d[12] + 2*c[47]*d[4]],
                     [0.125*c[101]*d[25] + 0.125*c[101]*d[20] + 0.125*c[103]*d[24] + 0.125*c[103]*d[8] + 0.125*c[104]*d[18] - 0.125*c[104]*d[7] + 0.125*c[122]*d[28] + 0.125*c[122]*d[23] + 0.125*c[124]*d[27] - 0.125*c[124]*d[8] + 0.125*c[125]*d[21] + 0.125*c[125]*d[7] + 0.125*c[143]*d[31] - 0.125*c[143]*d[20] + 0.125*c[145]*d[30] + 0.125*c[145]*d[11] - 0.125*c[146]*d[18] - 0.125*c[146]*d[10] + 0.125*c[164]*d[34] - 0.125*c[164]*d[23] + 0.125*c[166]*d[33] - 0.125*c[166]*d[11] - 0.125*c[167]*d[21] + 0.125*c[167]*d[10] - 0.125*c[17]*d[25] + 0.125*c[17]*d[14] - 0.125*c[19]*d[24] + 0.125*c[19]*d[2] + 0.125*c[20]*d[12] - 0.125*c[20]*d[1] - 0.125*c[38]*d[28] + 0.125*c[38]*d[17] - 0.125*c[40]*d[27] - 0.125*c[40]*d[2] + 0.125*c[41]*d[15] + 0.125*c[41]*d[1] + 2*c[47]*d[3] - 2*c[52]*d[13] + 2*c[56]*d[32] + 1.875*c[59]*d[31] - 0.125*c[59]*d[14] + 1.875*c[61]*d[30] + 0.125*c[61]*d[5] - 0.125*c[62]*d[12] + 1.875*c[62]*d[4] - 0.125*c[80]*d[34] - 0.125*c[80]*d[17] - 0.125*c[82]*d[33] - 0.125*c[82]*d[5] - 0.125*c[83]*d[15] + 0.125*c[83]*d[4]],
                     [0.125*c[100]*d[25] + 0.125*c[100]*d[20] - 0.125*c[102]*d[24] - 0.125*c[102]*d[8] - 0.125*c[103]*d[18] + 0.125*c[103]*d[7] + 0.125*c[121]*d[28] + 0.125*c[121]*d[23] - 0.125*c[123]*d[27] + 0.125*c[123]*d[8] - 0.125*c[124]*d[21] - 0.125*c[124]*d[7] + 0.125*c[142]*d[31] - 0.125*c[142]*d[20] - 0.125*c[144]*d[30] - 0.125*c[144]*d[11] + 0.125*c[145]*d[18] + 0.125*c[145]*d[10] - 0.125*c[16]*d[25] + 0.125*c[16]*d[14] + 0.125*c[163]*d[34] - 0.125*c[163]*d[23] - 0.125*c[165]*d[33] + 0.125*c[165]*d[11] + 0.125*c[166]*d[21] - 0.125*c[166]*d[10] + 0.125*c[18]*d[24] - 0.125*c[18]*d[2] - 0.125*c[19]*d[12] + 0.125*c[19]*d[1] - 0.125*c[37]*d[28] + 0.125*c[37]*d[17] + 0.125*c[39]*d[27] + 0.125*c[39]*d[2] - 0.125*c[40]*d[15] - 0.125*c[40]*d[1] + 2*c[46]*d[3] - 2*c[51]*d[13] + 2*c[55]*d[32] + 1.875*c[58]*d[31] - 0.125*c[58]*d[14] + 0.125*c[60]*d[30] + 1.875*c[60]*d[5] - 1.875*c[61]*d[12] + 0.125*c[61]*d[4] - 0.125*c[79]*d[34] - 0.125*c[79]*d[17] + 0.125*c[81]*d[33] + 0.125*c[81]*d[5] + 0.125*c[82]*d[15] - 0.125*c[82]*d[4]],
                     [2*c[84]*d[6] + 2*c[85]*d[19] - 2*c[86]*d[26] - 2*c[87]*d[25] + 2*c[87]*d[20] - 2*c[88]*d[24] + 2*c[88]*d[8] + 2*c[89]*d[18] + 2*c[89]*d[7]],
                     [-1.875*c[101]*d[25] + 0.125*c[101]*d[20] - 1.875*c[103]*d[24] + 0.125*c[103]*d[8] + 0.125*c[104]*d[18] + 1.875*c[104]*d[7] + 0.125*c[122]*d[28] + 0.125*c[122]*d[23] + 0.125*c[124]*d[27] - 0.125*c[124]*d[8] + 0.125*c[125]*d[21] + 0.125*c[125]*d[7] + 0.125*c[143]*d[31] - 0.125*c[143]*d[20] + 0.125*c[145]*d[30] + 0.125*c[145]*d[11] - 0.125*c[146]*d[18] - 0.125*c[146]*d[10] + 0.125*c[164]*d[34] - 0.125*c[164]*d[23] + 0.125*c[166]*d[33] - 0.125*c[166]*d[11] - 0.125*c[167]*d[21] + 0.125*c[167]*d[10] - 0.125*c[17]*d[25] + 0.125*c[17]*d[14] - 0.125*c[19]*d[24] + 0.125*c[19]*d[2] + 0.125*c[20]*d[12] - 0.125*c[20]*d[1] - 0.125*c[38]*d[28] + 0.125*c[38]*d[17] - 0.125*c[40]*d[27] - 0.125*c[40]*d[2] + 0.125*c[41]*d[15] + 0.125*c[41]*d[1] - 0.125*c[59]*d[31] - 0.125*c[59]*d[14] - 0.125*c[61]*d[30] + 0.125*c[61]*d[5] - 0.125*c[62]*d[12] - 0.125*c[62]*d[4] - 0.125*c[80]*d[34] - 0.125*c[80]*d[17] - 0.125*c[82]*d[33] - 0.125*c[82]*d[5] - 0.125*c[83]*d[15] + 0.125*c[83]*d[4] + 2*c[89]*d[6] + 2*c[94]*d[19] - 2*c[98]*d[26]],
                     [-1.875*c[100]*d[25] + 0.125*c[100]*d[20] - 0.125*c[102]*d[24] + 1.875*c[102]*d[8] + 1.875*c[103]*d[18] + 0.125*c[103]*d[7] + 0.125*c[121]*d[28] + 0.125*c[121]*d[23] - 0.125*c[123]*d[27] + 0.125*c[123]*d[8] - 0.125*c[124]*d[21] - 0.125*c[124]*d[7] + 0.125*c[142]*d[31] - 0.125*c[142]*d[20] - 0.125*c[144]*d[30] - 0.125*c[144]*d[11] + 0.125*c[145]*d[18] + 0.125*c[145]*d[10] - 0.125*c[16]*d[25] + 0.125*c[16]*d[14] + 0.125*c[163]*d[34] - 0.125*c[163]*d[23] - 0.125*c[165]*d[33] + 0.125*c[165]*d[11] + 0.125*c[166]*d[21] - 0.125*c[166]*d[10] + 0.125*c[18]*d[24] - 0.125*c[18]*d[2] - 0.125*c[19]*d[12] + 0.125*c[19]*d[1] - 0.125*c[37]*d[28] + 0.125*c[37]*d[17] + 0.125*c[39]*d[27] + 0.125*c[39]*d[2] - 0.125*c[40]*d[15] - 0.125*c[40]*d[1] - 0.125*c[58]*d[31] - 0.125*c[58]*d[14] + 0.125*c[60]*d[30] - 0.125*c[60]*d[5] + 0.125*c[61]*d[12] + 0.125*c[61]*d[4] - 0.125*c[79]*d[34] - 0.125*c[79]*d[17] + 0.125*c[81]*d[33] + 0.125*c[81]*d[5] + 0.125*c[82]*d[15] - 0.125*c[82]*d[4] + 2*c[88]*d[6] + 2*c[93]*d[19] - 2*c[97]*d[26]],
                     [2*c[126]*d[9] - 2*c[127]*d[19] - 2*c[128]*d[32] - 2*c[129]*d[31] - 2*c[129]*d[20] - 2*c[130]*d[30] + 2*c[130]*d[11] - 2*c[131]*d[18] + 2*c[131]*d[10]],
                     [0.125*c[101]*d[25] + 0.125*c[101]*d[20] + 0.125*c[103]*d[24] + 0.125*c[103]*d[8] + 0.125*c[104]*d[18] - 0.125*c[104]*d[7] + 0.125*c[122]*d[28] + 0.125*c[122]*d[23] + 0.125*c[124]*d[27] - 0.125*c[124]*d[8] + 0.125*c[125]*d[21] + 0.125*c[125]*d[7] + 2*c[131]*d[9] - 2*c[136]*d[19] - 2*c[140]*d[32] - 1.875*c[143]*d[31] - 0.125*c[143]*d[20] - 1.875*c[145]*d[30] + 0.125*c[145]*d[11] - 0.125*c[146]*d[18] + 1.875*c[146]*d[10] + 0.125*c[164]*d[34] - 0.125*c[164]*d[23] + 0.125*c[166]*d[33] - 0.125*c[166]*d[11] - 0.125*c[167]*d[21] + 0.125*c[167]*d[10] - 0.125*c[17]*d[25] + 0.125*c[17]*d[14] - 0.125*c[19]*d[24] + 0.125*c[19]*d[2] + 0.125*c[20]*d[12] - 0.125*c[20]*d[1] - 0.125*c[38]*d[28] + 0.125*c[38]*d[17] - 0.125*c[40]*d[27] - 0.125*c[40]*d[2] + 0.125*c[41]*d[15] + 0.125*c[41]*d[1] - 0.125*c[59]*d[31] - 0.125*c[59]*d[14] - 0.125*c[61]*d[30] + 0.125*c[61]*d[5] - 0.125*c[62]*d[12] - 0.125*c[62]*d[4] - 0.125*c[80]*d[34] - 0.125*c[80]*d[17] - 0.125*c[82]*d[33] - 0.125*c[82]*d[5] - 0.125*c[83]*d[15] + 0.125*c[83]*d[4]],
                     [0.125*c[100]*d[25] + 0.125*c[100]*d[20] - 0.125*c[102]*d[24] - 0.125*c[102]*d[8] - 0.125*c[103]*d[18] + 0.125*c[103]*d[7] + 0.125*c[121]*d[28] + 0.125*c[121]*d[23] - 0.125*c[123]*d[27] + 0.125*c[123]*d[8] - 0.125*c[124]*d[21] - 0.125*c[124]*d[7] + 2*c[130]*d[9] - 2*c[135]*d[19] - 2*c[139]*d[32] - 1.875*c[142]*d[31] - 0.125*c[142]*d[20] - 0.125*c[144]*d[30] + 1.875*c[144]*d[11] - 1.875*c[145]*d[18] + 0.125*c[145]*d[10] - 0.125*c[16]*d[25] + 0.125*c[16]*d[14] + 0.125*c[163]*d[34] - 0.125*c[163]*d[23] - 0.125*c[165]*d[33] + 0.125*c[165]*d[11] + 0.125*c[166]*d[21] - 0.125*c[166]*d[10] + 0.125*c[18]*d[24] - 0.125*c[18]*d[2] - 0.125*c[19]*d[12] + 0.125*c[19]*d[1] - 0.125*c[37]*d[28] + 0.125*c[37]*d[17] + 0.125*c[39]*d[27] + 0.125*c[39]*d[2] - 0.125*c[40]*d[15] - 0.125*c[40]*d[1] - 0.125*c[58]*d[31] - 0.125*c[58]*d[14] + 0.125*c[60]*d[30] - 0.125*c[60]*d[5] + 0.125*c[61]*d[12] + 0.125*c[61]*d[4] - 0.125*c[79]*d[34] - 0.125*c[79]*d[17] + 0.125*c[81]*d[33] + 0.125*c[81]*d[5] + 0.125*c[82]*d[15] - 0.125*c[82]*d[4]],
                     [2*c[10]*d[13] - 0.125*c[104]*d[18] + 0.125*c[104]*d[7] - 0.125*c[125]*d[21] - 0.125*c[125]*d[7] + 2*c[14]*d[26] + 0.125*c[146]*d[18] + 0.125*c[146]*d[10] + 0.125*c[167]*d[21] - 0.125*c[167]*d[10] + 2*c[17]*d[25] + 2*c[17]*d[14] + 2*c[19]*d[24] + 2*c[19]*d[2] + 1.875*c[20]*d[12] + 0.125*c[20]*d[1] - 0.125*c[41]*d[15] - 0.125*c[41]*d[1] + 2*c[5]*d[0] + 0.125*c[62]*d[12] + 0.125*c[62]*d[4] + 0.125*c[83]*d[15] - 0.125*c[83]*d[4]],
                     [2*c[1]*d[0] + 2*c[10]*d[12] + 2*c[10]*d[1] + 2*c[6]*d[13] + 2*c[7]*d[26] + 2*c[8]*d[25] + 2*c[8]*d[14] + 2*c[9]*d[24] + 2*c[9]*d[2]],
                     [0.125*c[100]*d[24] + 0.125*c[100]*d[8] - 0.125*c[101]*d[18] + 0.125*c[101]*d[7] + 2*c[12]*d[26] - 0.125*c[120]*d[28] - 0.125*c[120]*d[23] + 0.125*c[121]*d[27] - 0.125*c[121]*d[8] - 0.125*c[122]*d[21] - 0.125*c[122]*d[7] - 0.125*c[141]*d[31] + 0.125*c[141]*d[20] + 0.125*c[142]*d[30] + 0.125*c[142]*d[11] + 0.125*c[143]*d[18] + 0.125*c[143]*d[10] + 0.125*c[15]*d[25] + 1.875*c[15]*d[14] + 1.875*c[16]*d[24] + 0.125*c[16]*d[2] - 0.125*c[162]*d[34] + 0.125*c[162]*d[23] + 0.125*c[163]*d[33] - 0.125*c[163]*d[11] + 0.125*c[164]*d[21] - 0.125*c[164]*d[10] + 1.875*c[17]*d[12] + 0.125*c[17]*d[1] + 2*c[3]*d[0] + 0.125*c[36]*d[28] - 0.125*c[36]*d[17] - 0.125*c[37]*d[27] - 0.125*c[37]*d[2] - 0.125*c[38]*d[15] - 0.125*c[38]*d[1] + 0.125*c[57]*d[31] + 0.125*c[57]*d[14] - 0.125*c[58]*d[30] + 0.125*c[58]*d[5] + 0.125*c[59]*d[12] + 0.125*c[59]*d[4] + 0.125*c[78]*d[34] + 0.125*c[78]*d[17] - 0.125*c[79]*d[33] - 0.125*c[79]*d[5] + 2*c[8]*d[13] + 0.125*c[80]*d[15] - 0.125*c[80]*d[4] - 0.125*c[99]*d[25] - 0.125*c[99]*d[20]],
                     [-0.125*c[104]*d[18] + 0.125*c[104]*d[7] - 0.125*c[125]*d[21] - 0.125*c[125]*d[7] + 0.125*c[146]*d[18] + 0.125*c[146]*d[10] + 0.125*c[167]*d[21] - 0.125*c[167]*d[10] - 0.125*c[20]*d[12] + 0.125*c[20]*d[1] - 2*c[26]*d[0] + 2*c[31]*d[16] + 2*c[35]*d[29] + 2*c[38]*d[28] + 2*c[38]*d[17] + 2*c[40]*d[27] - 2*c[40]*d[2] + 1.875*c[41]*d[15] - 0.125*c[41]*d[1] + 0.125*c[62]*d[12] + 0.125*c[62]*d[4] + 0.125*c[83]*d[15] - 0.125*c[83]*d[4]],
                     [-2*c[22]*d[0] + 2*c[27]*d[16] + 2*c[28]*d[29] + 2*c[29]*d[28] + 2*c[29]*d[17] + 2*c[30]*d[27] - 2*c[30]*d[2] + 2*c[31]*d[15] - 2*c[31]*d[1]],
                     [0.125*c[100]*d[24] + 0.125*c[100]*d[8] - 0.125*c[101]*d[18] + 0.125*c[101]*d[7] - 0.125*c[120]*d[28] - 0.125*c[120]*d[23] + 0.125*c[121]*d[27] - 0.125*c[121]*d[8] - 0.125*c[122]*d[21] - 0.125*c[122]*d[7] - 0.125*c[141]*d[31] + 0.125*c[141]*d[20] + 0.125*c[142]*d[30] + 0.125*c[142]*d[11] + 0.125*c[143]*d[18] + 0.125*c[143]*d[10] + 0.125*c[15]*d[25] - 0.125*c[15]*d[14] - 0.125*c[16]*d[24] + 0.125*c[16]*d[2] - 0.125*c[162]*d[34] + 0.125*c[162]*d[23] + 0.125*c[163]*d[33] - 0.125*c[163]*d[11] + 0.125*c[164]*d[21] - 0.125*c[164]*d[10] - 0.125*c[17]*d[12] + 0.125*c[17]*d[1] - 2*c[24]*d[0] + 2*c[29]*d[16] + 2*c[33]*d[29] + 0.125*c[36]*d[28] + 1.875*c[36]*d[17] + 1.875*c[37]*d[27] - 0.125*c[37]*d[2] + 1.875*c[38]*d[15] - 0.125*c[38]*d[1] + 0.125*c[57]*d[31] + 0.125*c[57]*d[14] - 0.125*c[58]*d[30] + 0.125*c[58]*d[5] + 0.125*c[59]*d[12] + 0.125*c[59]*d[4] + 0.125*c[78]*d[34] + 0.125*c[78]*d[17] - 0.125*c[79]*d[33] - 0.125*c[79]*d[5] + 0.125*c[80]*d[15] - 0.125*c[80]*d[4] - 0.125*c[99]*d[25] - 0.125*c[99]*d[20]],
                     [-2*c[101]*d[25] + 2*c[101]*d[20] - 2*c[103]*d[24] + 2*c[103]*d[8] + 1.875*c[104]*d[18] + 0.125*c[104]*d[7] - 0.125*c[125]*d[21] - 0.125*c[125]*d[7] + 0.125*c[146]*d[18] + 0.125*c[146]*d[10] + 0.125*c[167]*d[21] - 0.125*c[167]*d[10] - 0.125*c[20]*d[12] + 0.125*c[20]*d[1] - 0.125*c[41]*d[15] - 0.125*c[41]*d[1] + 0.125*c[62]*d[12] + 0.125*c[62]*d[4] + 0.125*c[83]*d[15] - 0.125*c[83]*d[4] + 2*c[89]*d[6] + 2*c[94]*d[19] - 2*c[98]*d[26]],
                     [2*c[85]*d[6] + 2*c[90]*d[19] - 2*c[91]*d[26] - 2*c[92]*d[25] + 2*c[92]*d[20] - 2*c[93]*d[24] + 2*c[93]*d[8] + 2*c[94]*d[18] + 2*c[94]*d[7]],
                     [-1.875*c[100]*d[24] + 0.125*c[100]*d[8] + 1.875*c[101]*d[18] + 0.125*c[101]*d[7] - 0.125*c[120]*d[28] - 0.125*c[120]*d[23] + 0.125*c[121]*d[27] - 0.125*c[121]*d[8] - 0.125*c[122]*d[21] - 0.125*c[122]*d[7] - 0.125*c[141]*d[31] + 0.125*c[141]*d[20] + 0.125*c[142]*d[30] + 0.125*c[142]*d[11] + 0.125*c[143]*d[18] + 0.125*c[143]*d[10] + 0.125*c[15]*d[25] - 0.125*c[15]*d[14] - 0.125*c[16]*d[24] + 0.125*c[16]*d[2] - 0.125*c[162]*d[34] + 0.125*c[162]*d[23] + 0.125*c[163]*d[33] - 0.125*c[163]*d[11] + 0.125*c[164]*d[21] - 0.125*c[164]*d[10] - 0.125*c[17]*d[12] + 0.125*c[17]*d[1] + 0.125*c[36]*d[28] - 0.125*c[36]*d[17] - 0.125*c[37]*d[27] - 0.125*c[37]*d[2] - 0.125*c[38]*d[15] - 0.125*c[38]*d[1] + 0.125*c[57]*d[31] + 0.125*c[57]*d[14] - 0.125*c[58]*d[30] + 0.125*c[58]*d[5] + 0.125*c[59]*d[12] + 0.125*c[59]*d[4] + 0.125*c[78]*d[34] + 0.125*c[78]*d[17] - 0.125*c[79]*d[33] - 0.125*c[79]*d[5] + 0.125*c[80]*d[15] - 0.125*c[80]*d[4] + 2*c[87]*d[6] + 2*c[92]*d[19] - 2*c[96]*d[26] - 0.125*c[99]*d[25] + 1.875*c[99]*d[20]],
                     [-0.125*c[104]*d[18] + 0.125*c[104]*d[7] - 2*c[110]*d[6] + 2*c[115]*d[22] - 2*c[119]*d[29] - 2*c[122]*d[28] + 2*c[122]*d[23] - 2*c[124]*d[27] - 2*c[124]*d[8] + 1.875*c[125]*d[21] - 0.125*c[125]*d[7] + 0.125*c[146]*d[18] + 0.125*c[146]*d[10] + 0.125*c[167]*d[21] - 0.125*c[167]*d[10] - 0.125*c[20]*d[12] + 0.125*c[20]*d[1] - 0.125*c[41]*d[15] - 0.125*c[41]*d[1] + 0.125*c[62]*d[12] + 0.125*c[62]*d[4] + 0.125*c[83]*d[15] - 0.125*c[83]*d[4]],
                     [-2*c[106]*d[6] + 2*c[111]*d[22] - 2*c[112]*d[29] - 2*c[113]*d[28] + 2*c[113]*d[23] - 2*c[114]*d[27] - 2*c[114]*d[8] + 2*c[115]*d[21] - 2*c[115]*d[7]],
                     [0.125*c[100]*d[24] + 0.125*c[100]*d[8] - 0.125*c[101]*d[18] + 0.125*c[101]*d[7] - 2*c[108]*d[6] + 2*c[113]*d[22] - 2*c[117]*d[29] - 0.125*c[120]*d[28] + 1.875*c[120]*d[23] - 1.875*c[121]*d[27] - 0.125*c[121]*d[8] + 1.875*c[122]*d[21] - 0.125*c[122]*d[7] - 0.125*c[141]*d[31] + 0.125*c[141]*d[20] + 0.125*c[142]*d[30] + 0.125*c[142]*d[11] + 0.125*c[143]*d[18] + 0.125*c[143]*d[10] + 0.125*c[15]*d[25] - 0.125*c[15]*d[14] - 0.125*c[16]*d[24] + 0.125*c[16]*d[2] - 0.125*c[162]*d[34] + 0.125*c[162]*d[23] + 0.125*c[163]*d[33] - 0.125*c[163]*d[11] + 0.125*c[164]*d[21] - 0.125*c[164]*d[10] - 0.125*c[17]*d[12] + 0.125*c[17]*d[1] + 0.125*c[36]*d[28] - 0.125*c[36]*d[17] - 0.125*c[37]*d[27] - 0.125*c[37]*d[2] - 0.125*c[38]*d[15] - 0.125*c[38]*d[1] + 0.125*c[57]*d[31] + 0.125*c[57]*d[14] - 0.125*c[58]*d[30] + 0.125*c[58]*d[5] + 0.125*c[59]*d[12] + 0.125*c[59]*d[4] + 0.125*c[78]*d[34] + 0.125*c[78]*d[17] - 0.125*c[79]*d[33] - 0.125*c[79]*d[5] + 0.125*c[80]*d[15] - 0.125*c[80]*d[4] - 0.125*c[99]*d[25] - 0.125*c[99]*d[20]],
                     [0.125*c[102]*d[24] + 0.125*c[102]*d[8] + 0.125*c[123]*d[27] - 0.125*c[123]*d[8] + 2*c[13]*d[26] + 0.125*c[144]*d[30] + 0.125*c[144]*d[11] + 2*c[16]*d[25] + 2*c[16]*d[14] + 0.125*c[165]*d[33] - 0.125*c[165]*d[11] + 1.875*c[18]*d[24] + 0.125*c[18]*d[2] + 2*c[19]*d[12] + 2*c[19]*d[1] - 0.125*c[39]*d[27] - 0.125*c[39]*d[2] + 2*c[4]*d[0] - 0.125*c[60]*d[30] + 0.125*c[60]*d[5] - 0.125*c[81]*d[33] - 0.125*c[81]*d[5] + 2*c[9]*d[13]],
                     [2*c[12]*d[26] + 0.125*c[120]*d[28] + 0.125*c[120]*d[23] + 0.125*c[141]*d[31] - 0.125*c[141]*d[20] + 1.875*c[15]*d[25] + 0.125*c[15]*d[14] + 2*c[16]*d[24] + 2*c[16]*d[2] + 0.125*c[162]*d[34] - 0.125*c[162]*d[23] + 2*c[17]*d[12] + 2*c[17]*d[1] + 2*c[3]*d[0] - 0.125*c[36]*d[28] + 0.125*c[36]*d[17] - 0.125*c[57]*d[31] - 0.125*c[57]*d[14] - 0.125*c[78]*d[34] - 0.125*c[78]*d[17] + 2*c[8]*d[13] + 0.125*c[99]*d[25] + 0.125*c[99]*d[20]],
                     [2*c[11]*d[26] + 2*c[12]*d[25] + 2*c[12]*d[14] + 2*c[13]*d[24] + 2*c[13]*d[2] + 2*c[14]*d[12] + 2*c[14]*d[1] + 2*c[2]*d[0] + 2*c[7]*d[13]],
                     [0.125*c[102]*d[24] + 0.125*c[102]*d[8] + 0.125*c[123]*d[27] - 0.125*c[123]*d[8] + 0.125*c[144]*d[30] + 0.125*c[144]*d[11] + 0.125*c[165]*d[33] - 0.125*c[165]*d[11] - 0.125*c[18]*d[24] + 0.125*c[18]*d[2] - 2*c[25]*d[0] + 2*c[30]*d[16] + 2*c[34]*d[29] + 2*c[37]*d[28] + 2*c[37]*d[17] + 1.875*c[39]*d[27] - 0.125*c[39]*d[2] + 2*c[40]*d[15] - 2*c[40]*d[1] - 0.125*c[60]*d[30] + 0.125*c[60]*d[5] - 0.125*c[81]*d[33] - 0.125*c[81]*d[5]],
                     [0.125*c[120]*d[28] + 0.125*c[120]*d[23] + 0.125*c[141]*d[31] - 0.125*c[141]*d[20] - 0.125*c[15]*d[25] + 0.125*c[15]*d[14] + 0.125*c[162]*d[34] - 0.125*c[162]*d[23] - 2*c[24]*d[0] + 2*c[29]*d[16] + 2*c[33]*d[29] + 1.875*c[36]*d[28] + 0.125*c[36]*d[17] + 2*c[37]*d[27] - 2*c[37]*d[2] + 2*c[38]*d[15] - 2*c[38]*d[1] - 0.125*c[57]*d[31] - 0.125*c[57]*d[14] - 0.125*c[78]*d[34] - 0.125*c[78]*d[17] + 0.125*c[99]*d[25] + 0.125*c[99]*d[20]],
                     [-2*c[23]*d[0] + 2*c[28]*d[16] + 2*c[32]*d[29] + 2*c[33]*d[28] + 2*c[33]*d[17] + 2*c[34]*d[27] - 2*c[34]*d[2] + 2*c[35]*d[15] - 2*c[35]*d[1]],
                     [0.125*c[102]*d[24] + 0.125*c[102]*d[8] + 0.125*c[123]*d[27] - 0.125*c[123]*d[8] + 0.125*c[144]*d[30] + 0.125*c[144]*d[11] + 0.125*c[165]*d[33] - 0.125*c[165]*d[11] - 0.125*c[18]*d[24] + 0.125*c[18]*d[2] - 0.125*c[39]*d[27] - 0.125*c[39]*d[2] + 2*c[46]*d[3] - 2*c[51]*d[13] + 2*c[55]*d[32] + 2*c[58]*d[31] - 2*c[58]*d[14] + 1.875*c[60]*d[30] + 0.125*c[60]*d[5] - 2*c[61]*d[12] + 2*c[61]*d[4] - 0.125*c[81]*d[33] - 0.125*c[81]*d[5]],
                     [0.125*c[120]*d[28] + 0.125*c[120]*d[23] + 0.125*c[141]*d[31] - 0.125*c[141]*d[20] - 0.125*c[15]*d[25] + 0.125*c[15]*d[14] + 0.125*c[162]*d[34] - 0.125*c[162]*d[23] - 0.125*c[36]*d[28] + 0.125*c[36]*d[17] + 2*c[45]*d[3] - 2*c[50]*d[13] + 2*c[54]*d[32] + 1.875*c[57]*d[31] - 0.125*c[57]*d[14] + 2*c[58]*d[30] + 2*c[58]*d[5] - 2*c[59]*d[12] + 2*c[59]*d[4] - 0.125*c[78]*d[34] - 0.125*c[78]*d[17] + 0.125*c[99]*d[25] + 0.125*c[99]*d[20]],
                     [2*c[44]*d[3] - 2*c[49]*d[13] + 2*c[53]*d[32] + 2*c[54]*d[31] - 2*c[54]*d[14] + 2*c[55]*d[30] + 2*c[55]*d[5] - 2*c[56]*d[12] + 2*c[56]*d[4]],
                     [0.125*c[102]*d[24] + 0.125*c[102]*d[8] + 0.125*c[123]*d[27] - 0.125*c[123]*d[8] + 0.125*c[144]*d[30] + 0.125*c[144]*d[11] + 0.125*c[165]*d[33] - 0.125*c[165]*d[11] - 0.125*c[18]*d[24] + 0.125*c[18]*d[2] - 0.125*c[39]*d[27] - 0.125*c[39]*d[2] - 0.125*c[60]*d[30] + 0.125*c[60]*d[5] - 2*c[67]*d[3] - 2*c[72]*d[16] + 2*c[76]*d[35] + 2*c[79]*d[34] - 2*c[79]*d[17] + 1.875*c[81]*d[33] - 0.125*c[81]*d[5] - 2*c[82]*d[15] - 2*c[82]*d[4]],
                     [0.125*c[120]*d[28] + 0.125*c[120]*d[23] + 0.125*c[141]*d[31] - 0.125*c[141]*d[20] - 0.125*c[15]*d[25] + 0.125*c[15]*d[14] + 0.125*c[162]*d[34] - 0.125*c[162]*d[23] - 0.125*c[36]*d[28] + 0.125*c[36]*d[17] - 0.125*c[57]*d[31] - 0.125*c[57]*d[14] - 2*c[66]*d[3] - 2*c[71]*d[16] + 2*c[75]*d[35] + 1.875*c[78]*d[34] - 0.125*c[78]*d[17] + 2*c[79]*d[33] - 2*c[79]*d[5] - 2*c[80]*d[15] - 2*c[80]*d[4] + 0.125*c[99]*d[25] + 0.125*c[99]*d[20]],
                     [-2*c[65]*d[3] - 2*c[70]*d[16] + 2*c[74]*d[35] + 2*c[75]*d[34] - 2*c[75]*d[17] + 2*c[76]*d[33] - 2*c[76]*d[5] - 2*c[77]*d[15] - 2*c[77]*d[4]]]).transpose((2, 3, 0, 1))


def div_Ed_mpsa(s_sw, s_se, s_nw, s_ne, s_tsw, s_tse, s_tnw, s_tne):
    # divergence for b vector with BCs
    # Pe, Ne, Te, TNe,
    # Pn, En, Tn, TEn,
    # Pt, Et, Nt, NEt
    #  0:sxx_Pe,  1:tyx_Pe,  2:tzx_Pe,  3:sxx_Ne,  4:tyx_Ne,  5:tzx_Ne,  6:sxx_Te,  7:tyx_Te,  8:tzx_Te,  9:sxx_TNe, 10:tyx_TNe, 11:tzx_TNe
    # 12:txy_Pn, 13:syy_Pn, 14:tzy_Pn, 15:txy_En, 16:syy_En, 17:tzy_En, 18:txy_Tn, 19:syy_Tn, 20:tzy_Tn, 21:txy_TEn, 22:syy_TEn, 23:tzy_TEn
    # 24:txz_Pt, 25:tyz_Pt, 26:szz_Pt, 27:txz_Et, 28:tyz_Et, 29:szz_Et, 30:txz_Nt, 31:tyz_Nt, 32:szz_Nt, 33:txz_NEt, 34:tyz_NEt, 35:szz_NEt
    # sigma_xx, tau_xy, tau_xz
    return np.array((((s_se[:, :, 9] + s_ne[:, :, 6] + s_tse[:, :, 3] + s_tne[:, :, 0]) -
                      (s_sw[:, :, 9] + s_nw[:, :, 6] + s_tsw[:, :, 3] + s_tnw[:, :, 0]) +
                      (s_nw[:, :, 21] + s_ne[:, :, 18] + s_tnw[:, :, 15] + s_tne[:, :, 12]) -
                      (s_sw[:, :, 21] + s_se[:, :, 18] + s_tsw[:, :, 15] + s_tse[:, :, 12]) +
                      (s_tsw[:, :, 33] + s_tse[:, :, 30] + s_tnw[:, :, 27] + s_tne[:, :, 24]) -
                      (s_sw[:, :, 33] + s_se[:, :, 30] + s_nw[:, :, 27] + s_ne[:, :, 24])),

                     # tau_yx, sigma_yy, tau_yz
                     ((s_se[:, :, 10] + s_ne[:, :, 7] + s_tse[:, :, 4] + s_tne[:, :, 1]) -
                      (s_sw[:, :, 10] + s_nw[:, :, 7] + s_tsw[:, :, 4] + s_tnw[:, :, 1]) +
                      (s_nw[:, :, 22] + s_ne[:, :, 19] + s_tnw[:, :, 16] + s_tne[:, :, 13]) -
                      (s_sw[:, :, 22] + s_se[:, :, 19] + s_tsw[:, :, 16] + s_tse[:, :, 13]) +
                      (s_tsw[:, :, 34] + s_tse[:, :, 31] + s_tnw[:, :, 28] + s_tne[:, :, 25]) -
                      (s_sw[:, :, 34] + s_se[:, :, 31] + s_nw[:, :, 28] + s_ne[:, :, 25])),

                     # tau_zx, tau_zy, sigma_zz
                     ((s_se[:, :, 11] + s_ne[:, :, 8] + s_tse[:, :, 5] + s_tne[:, :, 2]) -
                      (s_sw[:, :, 11] + s_nw[:, :, 8] + s_tsw[:, :, 5] + s_tnw[:, :, 2]) +
                      (s_nw[:, :, 23] + s_ne[:, :, 20] + s_tnw[:, :, 17] + s_tne[:, :, 14]) -
                      (s_sw[:, :, 23] + s_se[:, :, 20] + s_tsw[:, :, 17] + s_tse[:, :, 14]) +
                      (s_tsw[:, :, 35] + s_tse[:, :, 32] + s_tnw[:, :, 29] + s_tne[:, :, 26]) -
                      (s_sw[:, :, 35] + s_se[:, :, 32] + s_nw[:, :, 29] + s_ne[:, :, 26]))))


def div_Eu_mpsa(E_sw, E_se, E_nw, E_ne, E_tsw, E_tse, E_tnw, E_tne):
    # div_x
    return np.array([[-E_sw[:, :, 9, 0] - E_sw[:, :, 21, 0] - E_sw[:, :, 33, 0],
                      E_se[:, :, 9, 0] - E_se[:, :, 18, 0] - E_se[:, :, 30, 0] - E_sw[:, :, 9, 1] - E_sw[:, :, 21, 1] - E_sw[:, :, 33, 1],
                      E_se[:, :, 9, 1] - E_se[:, :, 18, 1] - E_se[:, :, 30, 1],
                      -E_nw[:, :, 6, 0] + E_nw[:, :, 21, 0] - E_nw[:, :, 27, 0] - E_sw[:, :, 9, 2] - E_sw[:, :, 21, 2] - E_sw[:, :, 33, 2],
                      E_ne[:, :, 6, 0] + E_ne[:, :, 18, 0] - E_ne[:, :, 24, 0] - E_nw[:, :, 6, 1] + E_nw[:, :, 21, 1] - E_nw[:, :, 27, 1] + E_se[:, :, 9, 2] - E_se[:, :, 18, 2] - E_se[:, :, 30, 2] - E_sw[:, :, 9, 3] - E_sw[:, :, 21, 3] - E_sw[:, :, 33, 3],
                      E_ne[:, :, 6, 1] + E_ne[:, :, 18, 1] - E_ne[:, :, 24, 1] + E_se[:, :, 9, 3] - E_se[:, :, 18, 3] - E_se[:, :, 30, 3],
                      -E_nw[:, :, 6, 2] + E_nw[:, :, 21, 2] - E_nw[:, :, 27, 2],
                      E_ne[:, :, 6, 2] + E_ne[:, :, 18, 2] - E_ne[:, :, 24, 2] - E_nw[:, :, 6, 3] + E_nw[:, :, 21, 3] - E_nw[:, :, 27, 3],
                      E_ne[:, :, 6, 3] + E_ne[:, :, 18, 3] - E_ne[:, :, 24, 3],
                      -E_sw[:, :, 9, 4] - E_sw[:, :, 21, 4] - E_sw[:, :, 33, 4] - E_tsw[:, :, 3, 0] - E_tsw[:, :, 15, 0] + E_tsw[:, :, 33, 0],
                      E_se[:, :, 9, 4] - E_se[:, :, 18, 4] - E_se[:, :, 30, 4] - E_sw[:, :, 9, 5] - E_sw[:, :, 21, 5] - E_sw[:, :, 33, 5] + E_tse[:, :, 3, 0] - E_tse[:, :, 12, 0] + E_tse[:, :, 30, 0] - E_tsw[:, :, 3, 1] - E_tsw[:, :, 15, 1] + E_tsw[:, :, 33, 1],
                      E_se[:, :, 9, 5] - E_se[:, :, 18, 5] - E_se[:, :, 30, 5] + E_tse[:, :, 3, 1] - E_tse[:, :, 12, 1] + E_tse[:, :, 30, 1],
                      -E_nw[:, :, 6, 4] + E_nw[:, :, 21, 4] - E_nw[:, :, 27, 4] - E_sw[:, :, 9, 6] - E_sw[:, :, 21, 6] - E_sw[:, :, 33, 6] - E_tnw[:, :, 0, 0] + E_tnw[:, :, 15, 0] + E_tnw[:, :, 27, 0] - E_tsw[:, :, 3, 2] - E_tsw[:, :, 15, 2] + E_tsw[:, :, 33, 2],
                      E_ne[:, :, 6, 4] + E_ne[:, :, 18, 4] - E_ne[:, :, 24, 4] - E_nw[:, :, 6, 5] + E_nw[:, :, 21, 5] - E_nw[:, :, 27, 5] + E_se[:, :, 9, 6] - E_se[:, :, 18, 6] - E_se[:, :, 30, 6] - E_sw[:, :, 9, 7] - E_sw[:, :, 21, 7] - E_sw[:, :, 33, 7] + E_tne[:, :, 0, 0] + E_tne[:, :, 12, 0] + E_tne[:, :, 24, 0] - E_tnw[:, :, 0, 1] + E_tnw[:, :, 15, 1] + E_tnw[:, :, 27, 1] + E_tse[:, :, 3, 2] - E_tse[:, :, 12, 2] + E_tse[:, :, 30, 2] - E_tsw[:, :, 3, 3] - E_tsw[:, :, 15, 3] + E_tsw[:, :, 33, 3],
                      E_ne[:, :, 6, 5] + E_ne[:, :, 18, 5] - E_ne[:, :, 24, 5] + E_se[:, :, 9, 7] - E_se[:, :, 18, 7] - E_se[:, :, 30, 7] + E_tne[:, :, 0, 1] + E_tne[:, :, 12, 1] + E_tne[:, :, 24, 1] + E_tse[:, :, 3, 3] - E_tse[:, :, 12, 3] + E_tse[:, :, 30, 3],
                      -E_nw[:, :, 6, 6] + E_nw[:, :, 21, 6] - E_nw[:, :, 27, 6] - E_tnw[:, :, 0, 2] + E_tnw[:, :, 15, 2] + E_tnw[:, :, 27, 2],
                      E_ne[:, :, 6, 6] + E_ne[:, :, 18, 6] - E_ne[:, :, 24, 6] - E_nw[:, :, 6, 7] + E_nw[:, :, 21, 7] - E_nw[:, :, 27, 7] + E_tne[:, :, 0, 2] + E_tne[:, :, 12, 2] + E_tne[:, :, 24, 2] - E_tnw[:, :, 0, 3] + E_tnw[:, :, 15, 3] + E_tnw[:, :, 27, 3],
                      E_ne[:, :, 6, 7] + E_ne[:, :, 18, 7] - E_ne[:, :, 24, 7] + E_tne[:, :, 0, 3] + E_tne[:, :, 12, 3] + E_tne[:, :, 24, 3],
                      -E_tsw[:, :, 3, 4] - E_tsw[:, :, 15, 4] + E_tsw[:, :, 33, 4],
                      E_tse[:, :, 3, 4] - E_tse[:, :, 12, 4] + E_tse[:, :, 30, 4] - E_tsw[:, :, 3, 5] - E_tsw[:, :, 15, 5] + E_tsw[:, :, 33, 5],
                      E_tse[:, :, 3, 5] - E_tse[:, :, 12, 5] + E_tse[:, :, 30, 5],
                      -E_tnw[:, :, 0, 4] + E_tnw[:, :, 15, 4] + E_tnw[:, :, 27, 4] - E_tsw[:, :, 3, 6] - E_tsw[:, :, 15, 6] + E_tsw[:, :, 33, 6],
                      E_tne[:, :, 0, 4] + E_tne[:, :, 12, 4] + E_tne[:, :, 24, 4] - E_tnw[:, :, 0, 5] + E_tnw[:, :, 15, 5] + E_tnw[:, :, 27, 5] + E_tse[:, :, 3, 6] - E_tse[:, :, 12, 6] + E_tse[:, :, 30, 6] - E_tsw[:, :, 3, 7] - E_tsw[:, :, 15, 7] + E_tsw[:, :, 33, 7],
                      E_tne[:, :, 0, 5] + E_tne[:, :, 12, 5] + E_tne[:, :, 24, 5] + E_tse[:, :, 3, 7] - E_tse[:, :, 12, 7] + E_tse[:, :, 30, 7],
                      -E_tnw[:, :, 0, 6] + E_tnw[:, :, 15, 6] + E_tnw[:, :, 27, 6],
                      E_tne[:, :, 0, 6] + E_tne[:, :, 12, 6] + E_tne[:, :, 24, 6] - E_tnw[:, :, 0, 7] + E_tnw[:, :, 15, 7] + E_tnw[:, :, 27, 7],
                      E_tne[:, :, 0, 7] + E_tne[:, :, 12, 7] + E_tne[:, :, 24, 7],
                      -E_sw[:, :, 9, 8] - E_sw[:, :, 21, 8] - E_sw[:, :, 33, 8],
                      E_se[:, :, 9, 8] - E_se[:, :, 18, 8] - E_se[:, :, 30, 8] - E_sw[:, :, 9, 9] - E_sw[:, :, 21, 9] - E_sw[:, :, 33, 9],
                      E_se[:, :, 9, 9] - E_se[:, :, 18, 9] - E_se[:, :, 30, 9],
                      -E_nw[:, :, 6, 8] + E_nw[:, :, 21, 8] - E_nw[:, :, 27, 8] - E_sw[:, :, 9, 10] - E_sw[:, :, 21, 10] - E_sw[:, :, 33, 10],
                      E_ne[:, :, 6, 8] + E_ne[:, :, 18, 8] - E_ne[:, :, 24, 8] - E_nw[:, :, 6, 9] + E_nw[:, :, 21, 9] - E_nw[:, :, 27, 9] + E_se[:, :, 9, 10] - E_se[:, :, 18, 10] - E_se[:, :, 30, 10] - E_sw[:, :, 9, 11] - E_sw[:, :, 21, 11] - E_sw[:, :, 33, 11],
                      E_ne[:, :, 6, 9] + E_ne[:, :, 18, 9] - E_ne[:, :, 24, 9] + E_se[:, :, 9, 11] - E_se[:, :, 18, 11] - E_se[:, :, 30, 11],
                      -E_nw[:, :, 6, 10] + E_nw[:, :, 21, 10] - E_nw[:, :, 27, 10],
                      E_ne[:, :, 6, 10] + E_ne[:, :, 18, 10] - E_ne[:, :, 24, 10] - E_nw[:, :, 6, 11] + E_nw[:, :, 21, 11] - E_nw[:, :, 27, 11],
                      E_ne[:, :, 6, 11] + E_ne[:, :, 18, 11] - E_ne[:, :, 24, 11],
                      -E_sw[:, :, 9, 12] - E_sw[:, :, 21, 12] - E_sw[:, :, 33, 12] - E_tsw[:, :, 3, 8] - E_tsw[:, :, 15, 8] + E_tsw[:, :, 33, 8],
                      E_se[:, :, 9, 12] - E_se[:, :, 18, 12] - E_se[:, :, 30, 12] - E_sw[:, :, 9, 13] - E_sw[:, :, 21, 13] - E_sw[:, :, 33, 13] + E_tse[:, :, 3, 8] - E_tse[:, :, 12, 8] + E_tse[:, :, 30, 8] - E_tsw[:, :, 3, 9] - E_tsw[:, :, 15, 9] + E_tsw[:, :, 33, 9],
                      E_se[:, :, 9, 13] - E_se[:, :, 18, 13] - E_se[:, :, 30, 13] + E_tse[:, :, 3, 9] - E_tse[:, :, 12, 9] + E_tse[:, :, 30, 9],
                      -E_nw[:, :, 6, 12] + E_nw[:, :, 21, 12] - E_nw[:, :, 27, 12] - E_sw[:, :, 9, 14] - E_sw[:, :, 21, 14] - E_sw[:, :, 33, 14] - E_tnw[:, :, 0, 8] + E_tnw[:, :, 15, 8] + E_tnw[:, :, 27, 8] - E_tsw[:, :, 3, 10] - E_tsw[:, :, 15, 10] + E_tsw[:, :, 33, 10],
                      E_ne[:, :, 6, 12] + E_ne[:, :, 18, 12] - E_ne[:, :, 24, 12] - E_nw[:, :, 6, 13] + E_nw[:, :, 21, 13] - E_nw[:, :, 27, 13] + E_se[:, :, 9, 14] - E_se[:, :, 18, 14] - E_se[:, :, 30, 14] - E_sw[:, :, 9, 15] - E_sw[:, :, 21, 15] - E_sw[:, :, 33, 15] + E_tne[:, :, 0, 8] + E_tne[:, :, 12, 8] + E_tne[:, :, 24, 8] - E_tnw[:, :, 0, 9] + E_tnw[:, :, 15, 9] + E_tnw[:, :, 27, 9] + E_tse[:, :, 3, 10] - E_tse[:, :, 12, 10] + E_tse[:, :, 30, 10] - E_tsw[:, :, 3, 11] - E_tsw[:, :, 15, 11] + E_tsw[:, :, 33, 11],
                      E_ne[:, :, 6, 13] + E_ne[:, :, 18, 13] - E_ne[:, :, 24, 13] + E_se[:, :, 9, 15] - E_se[:, :, 18, 15] - E_se[:, :, 30, 15] + E_tne[:, :, 0, 9] + E_tne[:, :, 12, 9] + E_tne[:, :, 24, 9] + E_tse[:, :, 3, 11] - E_tse[:, :, 12, 11] + E_tse[:, :, 30, 11],
                      -E_nw[:, :, 6, 14] + E_nw[:, :, 21, 14] - E_nw[:, :, 27, 14] - E_tnw[:, :, 0, 10] + E_tnw[:, :, 15, 10] + E_tnw[:, :, 27, 10],
                      E_ne[:, :, 6, 14] + E_ne[:, :, 18, 14] - E_ne[:, :, 24, 14] - E_nw[:, :, 6, 15] + E_nw[:, :, 21, 15] - E_nw[:, :, 27, 15] + E_tne[:, :, 0, 10] + E_tne[:, :, 12, 10] + E_tne[:, :, 24, 10] - E_tnw[:, :, 0, 11] + E_tnw[:, :, 15, 11] + E_tnw[:, :, 27, 11],
                      E_ne[:, :, 6, 15] + E_ne[:, :, 18, 15] - E_ne[:, :, 24, 15] + E_tne[:, :, 0, 11] + E_tne[:, :, 12, 11] + E_tne[:, :, 24, 11],
                      -E_tsw[:, :, 3, 12] - E_tsw[:, :, 15, 12] + E_tsw[:, :, 33, 12],
                      E_tse[:, :, 3, 12] - E_tse[:, :, 12, 12] + E_tse[:, :, 30, 12] - E_tsw[:, :, 3, 13] - E_tsw[:, :, 15, 13] + E_tsw[:, :, 33, 13],
                      E_tse[:, :, 3, 13] - E_tse[:, :, 12, 13] + E_tse[:, :, 30, 13],
                      -E_tnw[:, :, 0, 12] + E_tnw[:, :, 15, 12] + E_tnw[:, :, 27, 12] - E_tsw[:, :, 3, 14] - E_tsw[:, :, 15, 14] + E_tsw[:, :, 33, 14],
                      E_tne[:, :, 0, 12] + E_tne[:, :, 12, 12] + E_tne[:, :, 24, 12] - E_tnw[:, :, 0, 13] + E_tnw[:, :, 15, 13] + E_tnw[:, :, 27, 13] + E_tse[:, :, 3, 14] - E_tse[:, :, 12, 14] + E_tse[:, :, 30, 14] - E_tsw[:, :, 3, 15] - E_tsw[:, :, 15, 15] + E_tsw[:, :, 33, 15],
                      E_tne[:, :, 0, 13] + E_tne[:, :, 12, 13] + E_tne[:, :, 24, 13] + E_tse[:, :, 3, 15] - E_tse[:, :, 12, 15] + E_tse[:, :, 30, 15],
                      -E_tnw[:, :, 0, 14] + E_tnw[:, :, 15, 14] + E_tnw[:, :, 27, 14],
                      E_tne[:, :, 0, 14] + E_tne[:, :, 12, 14] + E_tne[:, :, 24, 14] - E_tnw[:, :, 0, 15] + E_tnw[:, :, 15, 15] + E_tnw[:, :, 27, 15],
                      E_tne[:, :, 0, 15] + E_tne[:, :, 12, 15] + E_tne[:, :, 24, 15],
                      -E_sw[:, :, 9, 16] - E_sw[:, :, 21, 16] - E_sw[:, :, 33, 16],
                      E_se[:, :, 9, 16] - E_se[:, :, 18, 16] - E_se[:, :, 30, 16] - E_sw[:, :, 9, 17] - E_sw[:, :, 21, 17] - E_sw[:, :, 33, 17],
                      E_se[:, :, 9, 17] - E_se[:, :, 18, 17] - E_se[:, :, 30, 17],
                      -E_nw[:, :, 6, 16] + E_nw[:, :, 21, 16] - E_nw[:, :, 27, 16] - E_sw[:, :, 9, 18] - E_sw[:, :, 21, 18] - E_sw[:, :, 33, 18],
                      E_ne[:, :, 6, 16] + E_ne[:, :, 18, 16] - E_ne[:, :, 24, 16] - E_nw[:, :, 6, 17] + E_nw[:, :, 21, 17] - E_nw[:, :, 27, 17] + E_se[:, :, 9, 18] - E_se[:, :, 18, 18] - E_se[:, :, 30, 18] - E_sw[:, :, 9, 19] - E_sw[:, :, 21, 19] - E_sw[:, :, 33, 19],
                      E_ne[:, :, 6, 17] + E_ne[:, :, 18, 17] - E_ne[:, :, 24, 17] + E_se[:, :, 9, 19] - E_se[:, :, 18, 19] - E_se[:, :, 30, 19],
                      -E_nw[:, :, 6, 18] + E_nw[:, :, 21, 18] - E_nw[:, :, 27, 18],
                      E_ne[:, :, 6, 18] + E_ne[:, :, 18, 18] - E_ne[:, :, 24, 18] - E_nw[:, :, 6, 19] + E_nw[:, :, 21, 19] - E_nw[:, :, 27, 19],
                      E_ne[:, :, 6, 19] + E_ne[:, :, 18, 19] - E_ne[:, :, 24, 19],
                      -E_sw[:, :, 9, 20] - E_sw[:, :, 21, 20] - E_sw[:, :, 33, 20] - E_tsw[:, :, 3, 16] - E_tsw[:, :, 15, 16] + E_tsw[:, :, 33, 16],
                      E_se[:, :, 9, 20] - E_se[:, :, 18, 20] - E_se[:, :, 30, 20] - E_sw[:, :, 9, 21] - E_sw[:, :, 21, 21] - E_sw[:, :, 33, 21] + E_tse[:, :, 3, 16] - E_tse[:, :, 12, 16] + E_tse[:, :, 30, 16] - E_tsw[:, :, 3, 17] - E_tsw[:, :, 15, 17] + E_tsw[:, :, 33, 17],
                      E_se[:, :, 9, 21] - E_se[:, :, 18, 21] - E_se[:, :, 30, 21] + E_tse[:, :, 3, 17] - E_tse[:, :, 12, 17] + E_tse[:, :, 30, 17],
                      -E_nw[:, :, 6, 20] + E_nw[:, :, 21, 20] - E_nw[:, :, 27, 20] - E_sw[:, :, 9, 22] - E_sw[:, :, 21, 22] - E_sw[:, :, 33, 22] - E_tnw[:, :, 0, 16] + E_tnw[:, :, 15, 16] + E_tnw[:, :, 27, 16] - E_tsw[:, :, 3, 18] - E_tsw[:, :, 15, 18] + E_tsw[:, :, 33, 18],
                      E_ne[:, :, 6, 20] + E_ne[:, :, 18, 20] - E_ne[:, :, 24, 20] - E_nw[:, :, 6, 21] + E_nw[:, :, 21, 21] - E_nw[:, :, 27, 21] + E_se[:, :, 9, 22] - E_se[:, :, 18, 22] - E_se[:, :, 30, 22] - E_sw[:, :, 9, 23] - E_sw[:, :, 21, 23] - E_sw[:, :, 33, 23] + E_tne[:, :, 0, 16] + E_tne[:, :, 12, 16] + E_tne[:, :, 24, 16] - E_tnw[:, :, 0, 17] + E_tnw[:, :, 15, 17] + E_tnw[:, :, 27, 17] + E_tse[:, :, 3, 18] - E_tse[:, :, 12, 18] + E_tse[:, :, 30, 18] - E_tsw[:, :, 3, 19] - E_tsw[:, :, 15, 19] + E_tsw[:, :, 33, 19],
                      E_ne[:, :, 6, 21] + E_ne[:, :, 18, 21] - E_ne[:, :, 24, 21] + E_se[:, :, 9, 23] - E_se[:, :, 18, 23] - E_se[:, :, 30, 23] + E_tne[:, :, 0, 17] + E_tne[:, :, 12, 17] + E_tne[:, :, 24, 17] + E_tse[:, :, 3, 19] - E_tse[:, :, 12, 19] + E_tse[:, :, 30, 19],
                      -E_nw[:, :, 6, 22] + E_nw[:, :, 21, 22] - E_nw[:, :, 27, 22] - E_tnw[:, :, 0, 18] + E_tnw[:, :, 15, 18] + E_tnw[:, :, 27, 18],
                      E_ne[:, :, 6, 22] + E_ne[:, :, 18, 22] - E_ne[:, :, 24, 22] - E_nw[:, :, 6, 23] + E_nw[:, :, 21, 23] - E_nw[:, :, 27, 23] + E_tne[:, :, 0, 18] + E_tne[:, :, 12, 18] + E_tne[:, :, 24, 18] - E_tnw[:, :, 0, 19] + E_tnw[:, :, 15, 19] + E_tnw[:, :, 27, 19],
                      E_ne[:, :, 6, 23] + E_ne[:, :, 18, 23] - E_ne[:, :, 24, 23] + E_tne[:, :, 0, 19] + E_tne[:, :, 12, 19] + E_tne[:, :, 24, 19],
                      -E_tsw[:, :, 3, 20] - E_tsw[:, :, 15, 20] + E_tsw[:, :, 33, 20],
                      E_tse[:, :, 3, 20] - E_tse[:, :, 12, 20] + E_tse[:, :, 30, 20] - E_tsw[:, :, 3, 21] - E_tsw[:, :, 15, 21] + E_tsw[:, :, 33, 21],
                      E_tse[:, :, 3, 21] - E_tse[:, :, 12, 21] + E_tse[:, :, 30, 21],
                      -E_tnw[:, :, 0, 20] + E_tnw[:, :, 15, 20] + E_tnw[:, :, 27, 20] - E_tsw[:, :, 3, 22] - E_tsw[:, :, 15, 22] + E_tsw[:, :, 33, 22],
                      E_tne[:, :, 0, 20] + E_tne[:, :, 12, 20] + E_tne[:, :, 24, 20] - E_tnw[:, :, 0, 21] + E_tnw[:, :, 15, 21] + E_tnw[:, :, 27, 21] + E_tse[:, :, 3, 22] - E_tse[:, :, 12, 22] + E_tse[:, :, 30, 22] - E_tsw[:, :, 3, 23] - E_tsw[:, :, 15, 23] + E_tsw[:, :, 33, 23],
                      E_tne[:, :, 0, 21] + E_tne[:, :, 12, 21] + E_tne[:, :, 24, 21] + E_tse[:, :, 3, 23] - E_tse[:, :, 12, 23] + E_tse[:, :, 30, 23],
                      -E_tnw[:, :, 0, 22] + E_tnw[:, :, 15, 22] + E_tnw[:, :, 27, 22],
                      E_tne[:, :, 0, 22] + E_tne[:, :, 12, 22] + E_tne[:, :, 24, 22] - E_tnw[:, :, 0, 23] + E_tnw[:, :, 15, 23] + E_tnw[:, :, 27, 23],
                      E_tne[:, :, 0, 23] + E_tne[:, :, 12, 23] + E_tne[:, :, 24, 23]],

                     # div_y
                     [-E_sw[:, :, 10, 0] - E_sw[:, :, 22, 0] - E_sw[:, :, 34, 0],
                      E_se[:, :, 10, 0] - E_se[:, :, 19, 0] - E_se[:, :, 31, 0] - E_sw[:, :, 10, 1] - E_sw[:, :, 22, 1] - E_sw[:, :, 34, 1],
                      E_se[:, :, 10, 1] - E_se[:, :, 19, 1] - E_se[:, :, 31, 1],
                      -E_nw[:, :, 7, 0] + E_nw[:, :, 22, 0] - E_nw[:, :, 28, 0] - E_sw[:, :, 10, 2] - E_sw[:, :, 22, 2] - E_sw[:, :, 34, 2],
                      E_ne[:, :, 7, 0] + E_ne[:, :, 19, 0] - E_ne[:, :, 25, 0] - E_nw[:, :, 7, 1] + E_nw[:, :, 22, 1] - E_nw[:, :, 28, 1] + E_se[:, :, 10, 2] - E_se[:, :, 19, 2] - E_se[:, :, 31, 2] - E_sw[:, :, 10, 3] - E_sw[:, :, 22, 3] - E_sw[:, :, 34, 3],
                      E_ne[:, :, 7, 1] + E_ne[:, :, 19, 1] - E_ne[:, :, 25, 1] + E_se[:, :, 10, 3] - E_se[:, :, 19, 3] - E_se[:, :, 31, 3],
                      -E_nw[:, :, 7, 2] + E_nw[:, :, 22, 2] - E_nw[:, :, 28, 2],
                      E_ne[:, :, 7, 2] + E_ne[:, :, 19, 2] - E_ne[:, :, 25, 2] - E_nw[:, :, 7, 3] + E_nw[:, :, 22, 3] - E_nw[:, :, 28, 3],
                      E_ne[:, :, 7, 3] + E_ne[:, :, 19, 3] - E_ne[:, :, 25, 3],
                      -E_sw[:, :, 10, 4] - E_sw[:, :, 22, 4] - E_sw[:, :, 34, 4] - E_tsw[:, :, 4, 0] - E_tsw[:, :, 16, 0] + E_tsw[:, :, 34, 0],
                      E_se[:, :, 10, 4] - E_se[:, :, 19, 4] - E_se[:, :, 31, 4] - E_sw[:, :, 10, 5] - E_sw[:, :, 22, 5] - E_sw[:, :, 34, 5] + E_tse[:, :, 4, 0] - E_tse[:, :, 13, 0] + E_tse[:, :, 31, 0] - E_tsw[:, :, 4, 1] - E_tsw[:, :, 16, 1] + E_tsw[:, :, 34, 1],
                      E_se[:, :, 10, 5] - E_se[:, :, 19, 5] - E_se[:, :, 31, 5] + E_tse[:, :, 4, 1] - E_tse[:, :, 13, 1] + E_tse[:, :, 31, 1],
                      -E_nw[:, :, 7, 4] + E_nw[:, :, 22, 4] - E_nw[:, :, 28, 4] - E_sw[:, :, 10, 6] - E_sw[:, :, 22, 6] - E_sw[:, :, 34, 6] - E_tnw[:, :, 1, 0] + E_tnw[:, :, 16, 0] + E_tnw[:, :, 28, 0] - E_tsw[:, :, 4, 2] - E_tsw[:, :, 16, 2] + E_tsw[:, :, 34, 2],
                      E_ne[:, :, 7, 4] + E_ne[:, :, 19, 4] - E_ne[:, :, 25, 4] - E_nw[:, :, 7, 5] + E_nw[:, :, 22, 5] - E_nw[:, :, 28, 5] + E_se[:, :, 10, 6] - E_se[:, :, 19, 6] - E_se[:, :, 31, 6] - E_sw[:, :, 10, 7] - E_sw[:, :, 22, 7] - E_sw[:, :, 34, 7] + E_tne[:, :, 1, 0] + E_tne[:, :, 13, 0] + E_tne[:, :, 25, 0] - E_tnw[:, :, 1, 1] + E_tnw[:, :, 16, 1] + E_tnw[:, :, 28, 1] + E_tse[:, :, 4, 2] - E_tse[:, :, 13, 2] + E_tse[:, :, 31, 2] - E_tsw[:, :, 4, 3] - E_tsw[:, :, 16, 3] + E_tsw[:, :, 34, 3],
                      E_ne[:, :, 7, 5] + E_ne[:, :, 19, 5] - E_ne[:, :, 25, 5] + E_se[:, :, 10, 7] - E_se[:, :, 19, 7] - E_se[:, :, 31, 7] + E_tne[:, :, 1, 1] + E_tne[:, :, 13, 1] + E_tne[:, :, 25, 1] + E_tse[:, :, 4, 3] - E_tse[:, :, 13, 3] + E_tse[:, :, 31, 3],
                      -E_nw[:, :, 7, 6] + E_nw[:, :, 22, 6] - E_nw[:, :, 28, 6] - E_tnw[:, :, 1, 2] + E_tnw[:, :, 16, 2] + E_tnw[:, :, 28, 2],
                      E_ne[:, :, 7, 6] + E_ne[:, :, 19, 6] - E_ne[:, :, 25, 6] - E_nw[:, :, 7, 7] + E_nw[:, :, 22, 7] - E_nw[:, :, 28, 7] + E_tne[:, :, 1, 2] + E_tne[:, :, 13, 2] + E_tne[:, :, 25, 2] - E_tnw[:, :, 1, 3] + E_tnw[:, :, 16, 3] + E_tnw[:, :, 28, 3],
                      E_ne[:, :, 7, 7] + E_ne[:, :, 19, 7] - E_ne[:, :, 25, 7] + E_tne[:, :, 1, 3] + E_tne[:, :, 13, 3] + E_tne[:, :, 25, 3],
                      -E_tsw[:, :, 4, 4] - E_tsw[:, :, 16, 4] + E_tsw[:, :, 34, 4],
                      E_tse[:, :, 4, 4] - E_tse[:, :, 13, 4] + E_tse[:, :, 31, 4] - E_tsw[:, :, 4, 5] - E_tsw[:, :, 16, 5] + E_tsw[:, :, 34, 5],
                      E_tse[:, :, 4, 5] - E_tse[:, :, 13, 5] + E_tse[:, :, 31, 5],
                      -E_tnw[:, :, 1, 4] + E_tnw[:, :, 16, 4] + E_tnw[:, :, 28, 4] - E_tsw[:, :, 4, 6] - E_tsw[:, :, 16, 6] + E_tsw[:, :, 34, 6],
                      E_tne[:, :, 1, 4] + E_tne[:, :, 13, 4] + E_tne[:, :, 25, 4] - E_tnw[:, :, 1, 5] + E_tnw[:, :, 16, 5] + E_tnw[:, :, 28, 5] + E_tse[:, :, 4, 6] - E_tse[:, :, 13, 6] + E_tse[:, :, 31, 6] - E_tsw[:, :, 4, 7] - E_tsw[:, :, 16, 7] + E_tsw[:, :, 34, 7],
                      E_tne[:, :, 1, 5] + E_tne[:, :, 13, 5] + E_tne[:, :, 25, 5] + E_tse[:, :, 4, 7] - E_tse[:, :, 13, 7] + E_tse[:, :, 31, 7],
                      -E_tnw[:, :, 1, 6] + E_tnw[:, :, 16, 6] + E_tnw[:, :, 28, 6],
                      E_tne[:, :, 1, 6] + E_tne[:, :, 13, 6] + E_tne[:, :, 25, 6] - E_tnw[:, :, 1, 7] + E_tnw[:, :, 16, 7] + E_tnw[:, :, 28, 7],
                      E_tne[:, :, 1, 7] + E_tne[:, :, 13, 7] + E_tne[:, :, 25, 7],
                      -E_sw[:, :, 10, 8] - E_sw[:, :, 22, 8] - E_sw[:, :, 34, 8],
                      E_se[:, :, 10, 8] - E_se[:, :, 19, 8] - E_se[:, :, 31, 8] - E_sw[:, :, 10, 9] - E_sw[:, :, 22, 9] - E_sw[:, :, 34, 9],
                      E_se[:, :, 10, 9] - E_se[:, :, 19, 9] - E_se[:, :, 31, 9],
                      -E_nw[:, :, 7, 8] + E_nw[:, :, 22, 8] - E_nw[:, :, 28, 8] - E_sw[:, :, 10, 10] - E_sw[:, :, 22, 10] - E_sw[:, :, 34, 10],
                      E_ne[:, :, 7, 8] + E_ne[:, :, 19, 8] - E_ne[:, :, 25, 8] - E_nw[:, :, 7, 9] + E_nw[:, :, 22, 9] - E_nw[:, :, 28, 9] + E_se[:, :, 10, 10] - E_se[:, :, 19, 10] - E_se[:, :, 31, 10] - E_sw[:, :, 10, 11] - E_sw[:, :, 22, 11] - E_sw[:, :, 34, 11],
                      E_ne[:, :, 7, 9] + E_ne[:, :, 19, 9] - E_ne[:, :, 25, 9] + E_se[:, :, 10, 11] - E_se[:, :, 19, 11] - E_se[:, :, 31, 11],
                      -E_nw[:, :, 7, 10] + E_nw[:, :, 22, 10] - E_nw[:, :, 28, 10],
                      E_ne[:, :, 7, 10] + E_ne[:, :, 19, 10] - E_ne[:, :, 25, 10] - E_nw[:, :, 7, 11] + E_nw[:, :, 22, 11] - E_nw[:, :, 28, 11],
                      E_ne[:, :, 7, 11] + E_ne[:, :, 19, 11] - E_ne[:, :, 25, 11],
                      -E_sw[:, :, 10, 12] - E_sw[:, :, 22, 12] - E_sw[:, :, 34, 12] - E_tsw[:, :, 4, 8] - E_tsw[:, :, 16, 8] + E_tsw[:, :, 34, 8],
                      E_se[:, :, 10, 12] - E_se[:, :, 19, 12] - E_se[:, :, 31, 12] - E_sw[:, :, 10, 13] - E_sw[:, :, 22, 13] - E_sw[:, :, 34, 13] + E_tse[:, :, 4, 8] - E_tse[:, :, 13, 8] + E_tse[:, :, 31, 8] - E_tsw[:, :, 4, 9] - E_tsw[:, :, 16, 9] + E_tsw[:, :, 34, 9],
                      E_se[:, :, 10, 13] - E_se[:, :, 19, 13] - E_se[:, :, 31, 13] + E_tse[:, :, 4, 9] - E_tse[:, :, 13, 9] + E_tse[:, :, 31, 9],
                      -E_nw[:, :, 7, 12] + E_nw[:, :, 22, 12] - E_nw[:, :, 28, 12] - E_sw[:, :, 10, 14] - E_sw[:, :, 22, 14] - E_sw[:, :, 34, 14] - E_tnw[:, :, 1, 8] + E_tnw[:, :, 16, 8] + E_tnw[:, :, 28, 8] - E_tsw[:, :, 4, 10] - E_tsw[:, :, 16, 10] + E_tsw[:, :, 34, 10],
                      E_ne[:, :, 7, 12] + E_ne[:, :, 19, 12] - E_ne[:, :, 25, 12] - E_nw[:, :, 7, 13] + E_nw[:, :, 22, 13] - E_nw[:, :, 28, 13] + E_se[:, :, 10, 14] - E_se[:, :, 19, 14] - E_se[:, :, 31, 14] - E_sw[:, :, 10, 15] - E_sw[:, :, 22, 15] - E_sw[:, :, 34, 15] + E_tne[:, :, 1, 8] + E_tne[:, :, 13, 8] + E_tne[:, :, 25, 8] - E_tnw[:, :, 1, 9] + E_tnw[:, :, 16, 9] + E_tnw[:, :, 28, 9] + E_tse[:, :, 4, 10] - E_tse[:, :, 13, 10] + E_tse[:, :, 31, 10] - E_tsw[:, :, 4, 11] - E_tsw[:, :, 16, 11] + E_tsw[:, :, 34, 11],
                      E_ne[:, :, 7, 13] + E_ne[:, :, 19, 13] - E_ne[:, :, 25, 13] + E_se[:, :, 10, 15] - E_se[:, :, 19, 15] - E_se[:, :, 31, 15] + E_tne[:, :, 1, 9] + E_tne[:, :, 13, 9] + E_tne[:, :, 25, 9] + E_tse[:, :, 4, 11] - E_tse[:, :, 13, 11] + E_tse[:, :, 31, 11],
                      -E_nw[:, :, 7, 14] + E_nw[:, :, 22, 14] - E_nw[:, :, 28, 14] - E_tnw[:, :, 1, 10] + E_tnw[:, :, 16, 10] + E_tnw[:, :, 28, 10],
                      E_ne[:, :, 7, 14] + E_ne[:, :, 19, 14] - E_ne[:, :, 25, 14] - E_nw[:, :, 7, 15] + E_nw[:, :, 22, 15] - E_nw[:, :, 28, 15] + E_tne[:, :, 1, 10] + E_tne[:, :, 13, 10] + E_tne[:, :, 25, 10] - E_tnw[:, :, 1, 11] + E_tnw[:, :, 16, 11] + E_tnw[:, :, 28, 11],
                      E_ne[:, :, 7, 15] + E_ne[:, :, 19, 15] - E_ne[:, :, 25, 15] + E_tne[:, :, 1, 11] + E_tne[:, :, 13, 11] + E_tne[:, :, 25, 11],
                      -E_tsw[:, :, 4, 12] - E_tsw[:, :, 16, 12] + E_tsw[:, :, 34, 12],
                      E_tse[:, :, 4, 12] - E_tse[:, :, 13, 12] + E_tse[:, :, 31, 12] - E_tsw[:, :, 4, 13] - E_tsw[:, :, 16, 13] + E_tsw[:, :, 34, 13],
                      E_tse[:, :, 4, 13] - E_tse[:, :, 13, 13] + E_tse[:, :, 31, 13],
                      -E_tnw[:, :, 1, 12] + E_tnw[:, :, 16, 12] + E_tnw[:, :, 28, 12] - E_tsw[:, :, 4, 14] - E_tsw[:, :, 16, 14] + E_tsw[:, :, 34, 14],
                      E_tne[:, :, 1, 12] + E_tne[:, :, 13, 12] + E_tne[:, :, 25, 12] - E_tnw[:, :, 1, 13] + E_tnw[:, :, 16, 13] + E_tnw[:, :, 28, 13] + E_tse[:, :, 4, 14] - E_tse[:, :, 13, 14] + E_tse[:, :, 31, 14] - E_tsw[:, :, 4, 15] - E_tsw[:, :, 16, 15] + E_tsw[:, :, 34, 15],
                      E_tne[:, :, 1, 13] + E_tne[:, :, 13, 13] + E_tne[:, :, 25, 13] + E_tse[:, :, 4, 15] - E_tse[:, :, 13, 15] + E_tse[:, :, 31, 15],
                      -E_tnw[:, :, 1, 14] + E_tnw[:, :, 16, 14] + E_tnw[:, :, 28, 14],
                      E_tne[:, :, 1, 14] + E_tne[:, :, 13, 14] + E_tne[:, :, 25, 14] - E_tnw[:, :, 1, 15] + E_tnw[:, :, 16, 15] + E_tnw[:, :, 28, 15],
                      E_tne[:, :, 1, 15] + E_tne[:, :, 13, 15] + E_tne[:, :, 25, 15],
                      -E_sw[:, :, 10, 16] - E_sw[:, :, 22, 16] - E_sw[:, :, 34, 16],
                      E_se[:, :, 10, 16] - E_se[:, :, 19, 16] - E_se[:, :, 31, 16] - E_sw[:, :, 10, 17] - E_sw[:, :, 22, 17] - E_sw[:, :, 34, 17],
                      E_se[:, :, 10, 17] - E_se[:, :, 19, 17] - E_se[:, :, 31, 17],
                      -E_nw[:, :, 7, 16] + E_nw[:, :, 22, 16] - E_nw[:, :, 28, 16] - E_sw[:, :, 10, 18] - E_sw[:, :, 22, 18] - E_sw[:, :, 34, 18],
                      E_ne[:, :, 7, 16] + E_ne[:, :, 19, 16] - E_ne[:, :, 25, 16] - E_nw[:, :, 7, 17] + E_nw[:, :, 22, 17] - E_nw[:, :, 28, 17] + E_se[:, :, 10, 18] - E_se[:, :, 19, 18] - E_se[:, :, 31, 18] - E_sw[:, :, 10, 19] - E_sw[:, :, 22, 19] - E_sw[:, :, 34, 19],
                      E_ne[:, :, 7, 17] + E_ne[:, :, 19, 17] - E_ne[:, :, 25, 17] + E_se[:, :, 10, 19] - E_se[:, :, 19, 19] - E_se[:, :, 31, 19],
                      -E_nw[:, :, 7, 18] + E_nw[:, :, 22, 18] - E_nw[:, :, 28, 18],
                      E_ne[:, :, 7, 18] + E_ne[:, :, 19, 18] - E_ne[:, :, 25, 18] - E_nw[:, :, 7, 19] + E_nw[:, :, 22, 19] - E_nw[:, :, 28, 19],
                      E_ne[:, :, 7, 19] + E_ne[:, :, 19, 19] - E_ne[:, :, 25, 19],
                      -E_sw[:, :, 10, 20] - E_sw[:, :, 22, 20] - E_sw[:, :, 34, 20] - E_tsw[:, :, 4, 16] - E_tsw[:, :, 16, 16] + E_tsw[:, :, 34, 16],
                      E_se[:, :, 10, 20] - E_se[:, :, 19, 20] - E_se[:, :, 31, 20] - E_sw[:, :, 10, 21] - E_sw[:, :, 22, 21] - E_sw[:, :, 34, 21] + E_tse[:, :, 4, 16] - E_tse[:, :, 13, 16] + E_tse[:, :, 31, 16] - E_tsw[:, :, 4, 17] - E_tsw[:, :, 16, 17] + E_tsw[:, :, 34, 17],
                      E_se[:, :, 10, 21] - E_se[:, :, 19, 21] - E_se[:, :, 31, 21] + E_tse[:, :, 4, 17] - E_tse[:, :, 13, 17] + E_tse[:, :, 31, 17],
                      -E_nw[:, :, 7, 20] + E_nw[:, :, 22, 20] - E_nw[:, :, 28, 20] - E_sw[:, :, 10, 22] - E_sw[:, :, 22, 22] - E_sw[:, :, 34, 22] - E_tnw[:, :, 1, 16] + E_tnw[:, :, 16, 16] + E_tnw[:, :, 28, 16] - E_tsw[:, :, 4, 18] - E_tsw[:, :, 16, 18] + E_tsw[:, :, 34, 18],
                      E_ne[:, :, 7, 20] + E_ne[:, :, 19, 20] - E_ne[:, :, 25, 20] - E_nw[:, :, 7, 21] + E_nw[:, :, 22, 21] - E_nw[:, :, 28, 21] + E_se[:, :, 10, 22] - E_se[:, :, 19, 22] - E_se[:, :, 31, 22] - E_sw[:, :, 10, 23] - E_sw[:, :, 22, 23] - E_sw[:, :, 34, 23] + E_tne[:, :, 1, 16] + E_tne[:, :, 13, 16] + E_tne[:, :, 25, 16] - E_tnw[:, :, 1, 17] + E_tnw[:, :, 16, 17] + E_tnw[:, :, 28, 17] + E_tse[:, :, 4, 18] - E_tse[:, :, 13, 18] + E_tse[:, :, 31, 18] - E_tsw[:, :, 4, 19] - E_tsw[:, :, 16, 19] + E_tsw[:, :, 34, 19],
                      E_ne[:, :, 7, 21] + E_ne[:, :, 19, 21] - E_ne[:, :, 25, 21] + E_se[:, :, 10, 23] - E_se[:, :, 19, 23] - E_se[:, :, 31, 23] + E_tne[:, :, 1, 17] + E_tne[:, :, 13, 17] + E_tne[:, :, 25, 17] + E_tse[:, :, 4, 19] - E_tse[:, :, 13, 19] + E_tse[:, :, 31, 19],
                      -E_nw[:, :, 7, 22] + E_nw[:, :, 22, 22] - E_nw[:, :, 28, 22] - E_tnw[:, :, 1, 18] + E_tnw[:, :, 16, 18] + E_tnw[:, :, 28, 18],
                      E_ne[:, :, 7, 22] + E_ne[:, :, 19, 22] - E_ne[:, :, 25, 22] - E_nw[:, :, 7, 23] + E_nw[:, :, 22, 23] - E_nw[:, :, 28, 23] + E_tne[:, :, 1, 18] + E_tne[:, :, 13, 18] + E_tne[:, :, 25, 18] - E_tnw[:, :, 1, 19] + E_tnw[:, :, 16, 19] + E_tnw[:, :, 28, 19],
                      E_ne[:, :, 7, 23] + E_ne[:, :, 19, 23] - E_ne[:, :, 25, 23] + E_tne[:, :, 1, 19] + E_tne[:, :, 13, 19] + E_tne[:, :, 25, 19],
                      -E_tsw[:, :, 4, 20] - E_tsw[:, :, 16, 20] + E_tsw[:, :, 34, 20],
                      E_tse[:, :, 4, 20] - E_tse[:, :, 13, 20] + E_tse[:, :, 31, 20] - E_tsw[:, :, 4, 21] - E_tsw[:, :, 16, 21] + E_tsw[:, :, 34, 21],
                      E_tse[:, :, 4, 21] - E_tse[:, :, 13, 21] + E_tse[:, :, 31, 21],
                      -E_tnw[:, :, 1, 20] + E_tnw[:, :, 16, 20] + E_tnw[:, :, 28, 20] - E_tsw[:, :, 4, 22] - E_tsw[:, :, 16, 22] + E_tsw[:, :, 34, 22],
                      E_tne[:, :, 1, 20] + E_tne[:, :, 13, 20] + E_tne[:, :, 25, 20] - E_tnw[:, :, 1, 21] + E_tnw[:, :, 16, 21] + E_tnw[:, :, 28, 21] + E_tse[:, :, 4, 22] - E_tse[:, :, 13, 22] + E_tse[:, :, 31, 22] - E_tsw[:, :, 4, 23] - E_tsw[:, :, 16, 23] + E_tsw[:, :, 34, 23],
                      E_tne[:, :, 1, 21] + E_tne[:, :, 13, 21] + E_tne[:, :, 25, 21] + E_tse[:, :, 4, 23] - E_tse[:, :, 13, 23] + E_tse[:, :, 31, 23],
                      -E_tnw[:, :, 1, 22] + E_tnw[:, :, 16, 22] + E_tnw[:, :, 28, 22],
                      E_tne[:, :, 1, 22] + E_tne[:, :, 13, 22] + E_tne[:, :, 25, 22] - E_tnw[:, :, 1, 23] + E_tnw[:, :, 16, 23] + E_tnw[:, :, 28, 23],
                      E_tne[:, :, 1, 23] + E_tne[:, :, 13, 23] + E_tne[:, :, 25, 23]],

                     # div_z
                     [-E_sw[:, :, 11, 0] - E_sw[:, :, 23, 0] - E_sw[:, :, 35, 0],
                      E_se[:, :, 11, 0] - E_se[:, :, 20, 0] - E_se[:, :, 32, 0] - E_sw[:, :, 11, 1] - E_sw[:, :, 23, 1] - E_sw[:, :, 35, 1],
                      E_se[:, :, 11, 1] - E_se[:, :, 20, 1] - E_se[:, :, 32, 1],
                      -E_nw[:, :, 8, 0] + E_nw[:, :, 23, 0] - E_nw[:, :, 29, 0] - E_sw[:, :, 11, 2] - E_sw[:, :, 23, 2] - E_sw[:, :, 35, 2],
                      E_ne[:, :, 8, 0] + E_ne[:, :, 20, 0] - E_ne[:, :, 26, 0] - E_nw[:, :, 8, 1] + E_nw[:, :, 23, 1] - E_nw[:, :, 29, 1] + E_se[:, :, 11, 2] - E_se[:, :, 20, 2] - E_se[:, :, 32, 2] - E_sw[:, :, 11, 3] - E_sw[:, :, 23, 3] - E_sw[:, :, 35, 3],
                      E_ne[:, :, 8, 1] + E_ne[:, :, 20, 1] - E_ne[:, :, 26, 1] + E_se[:, :, 11, 3] - E_se[:, :, 20, 3] - E_se[:, :, 32, 3],
                      -E_nw[:, :, 8, 2] + E_nw[:, :, 23, 2] - E_nw[:, :, 29, 2],
                      E_ne[:, :, 8, 2] + E_ne[:, :, 20, 2] - E_ne[:, :, 26, 2] - E_nw[:, :, 8, 3] + E_nw[:, :, 23, 3] - E_nw[:, :, 29, 3],
                      E_ne[:, :, 8, 3] + E_ne[:, :, 20, 3] - E_ne[:, :, 26, 3],
                      -E_sw[:, :, 11, 4] - E_sw[:, :, 23, 4] - E_sw[:, :, 35, 4] - E_tsw[:, :, 5, 0] - E_tsw[:, :, 17, 0] + E_tsw[:, :, 35, 0],
                      E_se[:, :, 11, 4] - E_se[:, :, 20, 4] - E_se[:, :, 32, 4] - E_sw[:, :, 11, 5] - E_sw[:, :, 23, 5] - E_sw[:, :, 35, 5] + E_tse[:, :, 5, 0] - E_tse[:, :, 14, 0] + E_tse[:, :, 32, 0] - E_tsw[:, :, 5, 1] - E_tsw[:, :, 17, 1] + E_tsw[:, :, 35, 1],
                      E_se[:, :, 11, 5] - E_se[:, :, 20, 5] - E_se[:, :, 32, 5] + E_tse[:, :, 5, 1] - E_tse[:, :, 14, 1] + E_tse[:, :, 32, 1],
                      -E_nw[:, :, 8, 4] + E_nw[:, :, 23, 4] - E_nw[:, :, 29, 4] - E_sw[:, :, 11, 6] - E_sw[:, :, 23, 6] - E_sw[:, :, 35, 6] - E_tnw[:, :, 2, 0] + E_tnw[:, :, 17, 0] + E_tnw[:, :, 29, 0] - E_tsw[:, :, 5, 2] - E_tsw[:, :, 17, 2] + E_tsw[:, :, 35, 2],
                      E_ne[:, :, 8, 4] + E_ne[:, :, 20, 4] - E_ne[:, :, 26, 4] - E_nw[:, :, 8, 5] + E_nw[:, :, 23, 5] - E_nw[:, :, 29, 5] + E_se[:, :, 11, 6] - E_se[:, :, 20, 6] - E_se[:, :, 32, 6] - E_sw[:, :, 11, 7] - E_sw[:, :, 23, 7] - E_sw[:, :, 35, 7] + E_tne[:, :, 2, 0] + E_tne[:, :, 14, 0] + E_tne[:, :, 26, 0] - E_tnw[:, :, 2, 1] + E_tnw[:, :, 17, 1] + E_tnw[:, :, 29, 1] + E_tse[:, :, 5, 2] - E_tse[:, :, 14, 2] + E_tse[:, :, 32, 2] - E_tsw[:, :, 5, 3] - E_tsw[:, :, 17, 3] + E_tsw[:, :, 35, 3],
                      E_ne[:, :, 8, 5] + E_ne[:, :, 20, 5] - E_ne[:, :, 26, 5] + E_se[:, :, 11, 7] - E_se[:, :, 20, 7] - E_se[:, :, 32, 7] + E_tne[:, :, 2, 1] + E_tne[:, :, 14, 1] + E_tne[:, :, 26, 1] + E_tse[:, :, 5, 3] - E_tse[:, :, 14, 3] + E_tse[:, :, 32, 3],
                      -E_nw[:, :, 8, 6] + E_nw[:, :, 23, 6] - E_nw[:, :, 29, 6] - E_tnw[:, :, 2, 2] + E_tnw[:, :, 17, 2] + E_tnw[:, :, 29, 2],
                      E_ne[:, :, 8, 6] + E_ne[:, :, 20, 6] - E_ne[:, :, 26, 6] - E_nw[:, :, 8, 7] + E_nw[:, :, 23, 7] - E_nw[:, :, 29, 7] + E_tne[:, :, 2, 2] + E_tne[:, :, 14, 2] + E_tne[:, :, 26, 2] - E_tnw[:, :, 2, 3] + E_tnw[:, :, 17, 3] + E_tnw[:, :, 29, 3],
                      E_ne[:, :, 8, 7] + E_ne[:, :, 20, 7] - E_ne[:, :, 26, 7] + E_tne[:, :, 2, 3] + E_tne[:, :, 14, 3] + E_tne[:, :, 26, 3],
                      -E_tsw[:, :, 5, 4] - E_tsw[:, :, 17, 4] + E_tsw[:, :, 35, 4],
                      E_tse[:, :, 5, 4] - E_tse[:, :, 14, 4] + E_tse[:, :, 32, 4] - E_tsw[:, :, 5, 5] - E_tsw[:, :, 17, 5] + E_tsw[:, :, 35, 5],
                      E_tse[:, :, 5, 5] - E_tse[:, :, 14, 5] + E_tse[:, :, 32, 5],
                      -E_tnw[:, :, 2, 4] + E_tnw[:, :, 17, 4] + E_tnw[:, :, 29, 4] - E_tsw[:, :, 5, 6] - E_tsw[:, :, 17, 6] + E_tsw[:, :, 35, 6],
                      E_tne[:, :, 2, 4] + E_tne[:, :, 14, 4] + E_tne[:, :, 26, 4] - E_tnw[:, :, 2, 5] + E_tnw[:, :, 17, 5] + E_tnw[:, :, 29, 5] + E_tse[:, :, 5, 6] - E_tse[:, :, 14, 6] + E_tse[:, :, 32, 6] - E_tsw[:, :, 5, 7] - E_tsw[:, :, 17, 7] + E_tsw[:, :, 35, 7],
                      E_tne[:, :, 2, 5] + E_tne[:, :, 14, 5] + E_tne[:, :, 26, 5] + E_tse[:, :, 5, 7] - E_tse[:, :, 14, 7] + E_tse[:, :, 32, 7],
                      -E_tnw[:, :, 2, 6] + E_tnw[:, :, 17, 6] + E_tnw[:, :, 29, 6],
                      E_tne[:, :, 2, 6] + E_tne[:, :, 14, 6] + E_tne[:, :, 26, 6] - E_tnw[:, :, 2, 7] + E_tnw[:, :, 17, 7] + E_tnw[:, :, 29, 7],
                      E_tne[:, :, 2, 7] + E_tne[:, :, 14, 7] + E_tne[:, :, 26, 7],
                      -E_sw[:, :, 11, 8] - E_sw[:, :, 23, 8] - E_sw[:, :, 35, 8],
                      E_se[:, :, 11, 8] - E_se[:, :, 20, 8] - E_se[:, :, 32, 8] - E_sw[:, :, 11, 9] - E_sw[:, :, 23, 9] - E_sw[:, :, 35, 9],
                      E_se[:, :, 11, 9] - E_se[:, :, 20, 9] - E_se[:, :, 32, 9],
                      -E_nw[:, :, 8, 8] + E_nw[:, :, 23, 8] - E_nw[:, :, 29, 8] - E_sw[:, :, 11, 10] - E_sw[:, :, 23, 10] - E_sw[:, :, 35, 10],
                      E_ne[:, :, 8, 8] + E_ne[:, :, 20, 8] - E_ne[:, :, 26, 8] - E_nw[:, :, 8, 9] + E_nw[:, :, 23, 9] - E_nw[:, :, 29, 9] + E_se[:, :, 11, 10] - E_se[:, :, 20, 10] - E_se[:, :, 32, 10] - E_sw[:, :, 11, 11] - E_sw[:, :, 23, 11] - E_sw[:, :, 35, 11],
                      E_ne[:, :, 8, 9] + E_ne[:, :, 20, 9] - E_ne[:, :, 26, 9] + E_se[:, :, 11, 11] - E_se[:, :, 20, 11] - E_se[:, :, 32, 11],
                      -E_nw[:, :, 8, 10] + E_nw[:, :, 23, 10] - E_nw[:, :, 29, 10],
                      E_ne[:, :, 8, 10] + E_ne[:, :, 20, 10] - E_ne[:, :, 26, 10] - E_nw[:, :, 8, 11] + E_nw[:, :, 23, 11] - E_nw[:, :, 29, 11],
                      E_ne[:, :, 8, 11] + E_ne[:, :, 20, 11] - E_ne[:, :, 26, 11],
                      -E_sw[:, :, 11, 12] - E_sw[:, :, 23, 12] - E_sw[:, :, 35, 12] - E_tsw[:, :, 5, 8] - E_tsw[:, :, 17, 8] + E_tsw[:, :, 35, 8],
                      E_se[:, :, 11, 12] - E_se[:, :, 20, 12] - E_se[:, :, 32, 12] - E_sw[:, :, 11, 13] - E_sw[:, :, 23, 13] - E_sw[:, :, 35, 13] + E_tse[:, :, 5, 8] - E_tse[:, :, 14, 8] + E_tse[:, :, 32, 8] - E_tsw[:, :, 5, 9] - E_tsw[:, :, 17, 9] + E_tsw[:, :, 35, 9],
                      E_se[:, :, 11, 13] - E_se[:, :, 20, 13] - E_se[:, :, 32, 13] + E_tse[:, :, 5, 9] - E_tse[:, :, 14, 9] + E_tse[:, :, 32, 9],
                      -E_nw[:, :, 8, 12] + E_nw[:, :, 23, 12] - E_nw[:, :, 29, 12] - E_sw[:, :, 11, 14] - E_sw[:, :, 23, 14] - E_sw[:, :, 35, 14] - E_tnw[:, :, 2, 8] + E_tnw[:, :, 17, 8] + E_tnw[:, :, 29, 8] - E_tsw[:, :, 5, 10] - E_tsw[:, :, 17, 10] + E_tsw[:, :, 35, 10],
                      E_ne[:, :, 8, 12] + E_ne[:, :, 20, 12] - E_ne[:, :, 26, 12] - E_nw[:, :, 8, 13] + E_nw[:, :, 23, 13] - E_nw[:, :, 29, 13] + E_se[:, :, 11, 14] - E_se[:, :, 20, 14] - E_se[:, :, 32, 14] - E_sw[:, :, 11, 15] - E_sw[:, :, 23, 15] - E_sw[:, :, 35, 15] + E_tne[:, :, 2, 8] + E_tne[:, :, 14, 8] + E_tne[:, :, 26, 8] - E_tnw[:, :, 2, 9] + E_tnw[:, :, 17, 9] + E_tnw[:, :, 29, 9] + E_tse[:, :, 5, 10] - E_tse[:, :, 14, 10] + E_tse[:, :, 32, 10] - E_tsw[:, :, 5, 11] - E_tsw[:, :, 17, 11] + E_tsw[:, :, 35, 11],
                      E_ne[:, :, 8, 13] + E_ne[:, :, 20, 13] - E_ne[:, :, 26, 13] + E_se[:, :, 11, 15] - E_se[:, :, 20, 15] - E_se[:, :, 32, 15] + E_tne[:, :, 2, 9] + E_tne[:, :, 14, 9] + E_tne[:, :, 26, 9] + E_tse[:, :, 5, 11] - E_tse[:, :, 14, 11] + E_tse[:, :, 32, 11],
                      -E_nw[:, :, 8, 14] + E_nw[:, :, 23, 14] - E_nw[:, :, 29, 14] - E_tnw[:, :, 2, 10] + E_tnw[:, :, 17, 10] + E_tnw[:, :, 29, 10],
                      E_ne[:, :, 8, 14] + E_ne[:, :, 20, 14] - E_ne[:, :, 26, 14] - E_nw[:, :, 8, 15] + E_nw[:, :, 23, 15] - E_nw[:, :, 29, 15] + E_tne[:, :, 2, 10] + E_tne[:, :, 14, 10] + E_tne[:, :, 26, 10] - E_tnw[:, :, 2, 11] + E_tnw[:, :, 17, 11] + E_tnw[:, :, 29, 11],
                      E_ne[:, :, 8, 15] + E_ne[:, :, 20, 15] - E_ne[:, :, 26, 15] + E_tne[:, :, 2, 11] + E_tne[:, :, 14, 11] + E_tne[:, :, 26, 11],
                      -E_tsw[:, :, 5, 12] - E_tsw[:, :, 17, 12] + E_tsw[:, :, 35, 12],
                      E_tse[:, :, 5, 12] - E_tse[:, :, 14, 12] + E_tse[:, :, 32, 12] - E_tsw[:, :, 5, 13] - E_tsw[:, :, 17, 13] + E_tsw[:, :, 35, 13],
                      E_tse[:, :, 5, 13] - E_tse[:, :, 14, 13] + E_tse[:, :, 32, 13],
                      -E_tnw[:, :, 2, 12] + E_tnw[:, :, 17, 12] + E_tnw[:, :, 29, 12] - E_tsw[:, :, 5, 14] - E_tsw[:, :, 17, 14] + E_tsw[:, :, 35, 14],
                      E_tne[:, :, 2, 12] + E_tne[:, :, 14, 12] + E_tne[:, :, 26, 12] - E_tnw[:, :, 2, 13] + E_tnw[:, :, 17, 13] + E_tnw[:, :, 29, 13] + E_tse[:, :, 5, 14] - E_tse[:, :, 14, 14] + E_tse[:, :, 32, 14] - E_tsw[:, :, 5, 15] - E_tsw[:, :, 17, 15] + E_tsw[:, :, 35, 15],
                      E_tne[:, :, 2, 13] + E_tne[:, :, 14, 13] + E_tne[:, :, 26, 13] + E_tse[:, :, 5, 15] - E_tse[:, :, 14, 15] + E_tse[:, :, 32, 15],
                      -E_tnw[:, :, 2, 14] + E_tnw[:, :, 17, 14] + E_tnw[:, :, 29, 14],
                      E_tne[:, :, 2, 14] + E_tne[:, :, 14, 14] + E_tne[:, :, 26, 14] - E_tnw[:, :, 2, 15] + E_tnw[:, :, 17, 15] + E_tnw[:, :, 29, 15],
                      E_tne[:, :, 2, 15] + E_tne[:, :, 14, 15] + E_tne[:, :, 26, 15],
                      -E_sw[:, :, 11, 16] - E_sw[:, :, 23, 16] - E_sw[:, :, 35, 16],
                      E_se[:, :, 11, 16] - E_se[:, :, 20, 16] - E_se[:, :, 32, 16] - E_sw[:, :, 11, 17] - E_sw[:, :, 23, 17] - E_sw[:, :, 35, 17],
                      E_se[:, :, 11, 17] - E_se[:, :, 20, 17] - E_se[:, :, 32, 17],
                      -E_nw[:, :, 8, 16] + E_nw[:, :, 23, 16] - E_nw[:, :, 29, 16] - E_sw[:, :, 11, 18] - E_sw[:, :, 23, 18] - E_sw[:, :, 35, 18],
                      E_ne[:, :, 8, 16] + E_ne[:, :, 20, 16] - E_ne[:, :, 26, 16] - E_nw[:, :, 8, 17] + E_nw[:, :, 23, 17] - E_nw[:, :, 29, 17] + E_se[:, :, 11, 18] - E_se[:, :, 20, 18] - E_se[:, :, 32, 18] - E_sw[:, :, 11, 19] - E_sw[:, :, 23, 19] - E_sw[:, :, 35, 19],
                      E_ne[:, :, 8, 17] + E_ne[:, :, 20, 17] - E_ne[:, :, 26, 17] + E_se[:, :, 11, 19] - E_se[:, :, 20, 19] - E_se[:, :, 32, 19],
                      -E_nw[:, :, 8, 18] + E_nw[:, :, 23, 18] - E_nw[:, :, 29, 18],
                      E_ne[:, :, 8, 18] + E_ne[:, :, 20, 18] - E_ne[:, :, 26, 18] - E_nw[:, :, 8, 19] + E_nw[:, :, 23, 19] - E_nw[:, :, 29, 19],
                      E_ne[:, :, 8, 19] + E_ne[:, :, 20, 19] - E_ne[:, :, 26, 19],
                      -E_sw[:, :, 11, 20] - E_sw[:, :, 23, 20] - E_sw[:, :, 35, 20] - E_tsw[:, :, 5, 16] - E_tsw[:, :, 17, 16] + E_tsw[:, :, 35, 16],
                      E_se[:, :, 11, 20] - E_se[:, :, 20, 20] - E_se[:, :, 32, 20] - E_sw[:, :, 11, 21] - E_sw[:, :, 23, 21] - E_sw[:, :, 35, 21] + E_tse[:, :, 5, 16] - E_tse[:, :, 14, 16] + E_tse[:, :, 32, 16] - E_tsw[:, :, 5, 17] - E_tsw[:, :, 17, 17] + E_tsw[:, :, 35, 17],
                      E_se[:, :, 11, 21] - E_se[:, :, 20, 21] - E_se[:, :, 32, 21] + E_tse[:, :, 5, 17] - E_tse[:, :, 14, 17] + E_tse[:, :, 32, 17],
                      -E_nw[:, :, 8, 20] + E_nw[:, :, 23, 20] - E_nw[:, :, 29, 20] - E_sw[:, :, 11, 22] - E_sw[:, :, 23, 22] - E_sw[:, :, 35, 22] - E_tnw[:, :, 2, 16] + E_tnw[:, :, 17, 16] + E_tnw[:, :, 29, 16] - E_tsw[:, :, 5, 18] - E_tsw[:, :, 17, 18] + E_tsw[:, :, 35, 18],
                      E_ne[:, :, 8, 20] + E_ne[:, :, 20, 20] - E_ne[:, :, 26, 20] - E_nw[:, :, 8, 21] + E_nw[:, :, 23, 21] - E_nw[:, :, 29, 21] + E_se[:, :, 11, 22] - E_se[:, :, 20, 22] - E_se[:, :, 32, 22] - E_sw[:, :, 11, 23] - E_sw[:, :, 23, 23] - E_sw[:, :, 35, 23] + E_tne[:, :, 2, 16] + E_tne[:, :, 14, 16] + E_tne[:, :, 26, 16] - E_tnw[:, :, 2, 17] + E_tnw[:, :, 17, 17] + E_tnw[:, :, 29, 17] + E_tse[:, :, 5, 18] - E_tse[:, :, 14, 18] + E_tse[:, :, 32, 18] - E_tsw[:, :, 5, 19] - E_tsw[:, :, 17, 19] + E_tsw[:, :, 35, 19],
                      E_ne[:, :, 8, 21] + E_ne[:, :, 20, 21] - E_ne[:, :, 26, 21] + E_se[:, :, 11, 23] - E_se[:, :, 20, 23] - E_se[:, :, 32, 23] + E_tne[:, :, 2, 17] + E_tne[:, :, 14, 17] + E_tne[:, :, 26, 17] + E_tse[:, :, 5, 19] - E_tse[:, :, 14, 19] + E_tse[:, :, 32, 19],
                      -E_nw[:, :, 8, 22] + E_nw[:, :, 23, 22] - E_nw[:, :, 29, 22] - E_tnw[:, :, 2, 18] + E_tnw[:, :, 17, 18] + E_tnw[:, :, 29, 18],
                      E_ne[:, :, 8, 22] + E_ne[:, :, 20, 22] - E_ne[:, :, 26, 22] - E_nw[:, :, 8, 23] + E_nw[:, :, 23, 23] - E_nw[:, :, 29, 23] + E_tne[:, :, 2, 18] + E_tne[:, :, 14, 18] + E_tne[:, :, 26, 18] - E_tnw[:, :, 2, 19] + E_tnw[:, :, 17, 19] + E_tnw[:, :, 29, 19],
                      E_ne[:, :, 8, 23] + E_ne[:, :, 20, 23] - E_ne[:, :, 26, 23] + E_tne[:, :, 2, 19] + E_tne[:, :, 14, 19] + E_tne[:, :, 26, 19],
                      -E_tsw[:, :, 5, 20] - E_tsw[:, :, 17, 20] + E_tsw[:, :, 35, 20],
                      E_tse[:, :, 5, 20] - E_tse[:, :, 14, 20] + E_tse[:, :, 32, 20] - E_tsw[:, :, 5, 21] - E_tsw[:, :, 17, 21] + E_tsw[:, :, 35, 21],
                      E_tse[:, :, 5, 21] - E_tse[:, :, 14, 21] + E_tse[:, :, 32, 21],
                      -E_tnw[:, :, 2, 20] + E_tnw[:, :, 17, 20] + E_tnw[:, :, 29, 20] - E_tsw[:, :, 5, 22] - E_tsw[:, :, 17, 22] + E_tsw[:, :, 35, 22],
                      E_tne[:, :, 2, 20] + E_tne[:, :, 14, 20] + E_tne[:, :, 26, 20] - E_tnw[:, :, 2, 21] + E_tnw[:, :, 17, 21] + E_tnw[:, :, 29, 21] + E_tse[:, :, 5, 22] - E_tse[:, :, 14, 22] + E_tse[:, :, 32, 22] - E_tsw[:, :, 5, 23] - E_tsw[:, :, 17, 23] + E_tsw[:, :, 35, 23],
                      E_tne[:, :, 2, 21] + E_tne[:, :, 14, 21] + E_tne[:, :, 26, 21] + E_tse[:, :, 5, 23] - E_tse[:, :, 14, 23] + E_tse[:, :, 32, 23],
                      -E_tnw[:, :, 2, 22] + E_tnw[:, :, 17, 22] + E_tnw[:, :, 29, 22],
                      E_tne[:, :, 2, 22] + E_tne[:, :, 14, 22] + E_tne[:, :, 26, 22] - E_tnw[:, :, 2, 23] + E_tnw[:, :, 17, 23] + E_tnw[:, :, 29, 23],
                      E_tne[:, :, 2, 23] + E_tne[:, :, 14, 23] + E_tne[:, :, 26, 23]]])
