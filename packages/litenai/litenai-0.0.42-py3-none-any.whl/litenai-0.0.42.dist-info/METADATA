Metadata-Version: 2.1
Name: litenai
Version: 0.0.42
Summary: Python library for Liten AI Data platform
Author: HK Verma
Author-email: hkverma@litenai.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: bokeh
Requires-Dist: botocore
Requires-Dist: boto3
Requires-Dist: flask
Requires-Dist: grpcio
Requires-Dist: grpcio-status
Requires-Dist: holoviews
Requires-Dist: hvplot
Requires-Dist: ipython
Requires-Dist: openai >=1.10.0
Requires-Dist: pandas
Requires-Dist: panel
Requires-Dist: protobuf
Requires-Dist: pyarrow ==14.0.2
Requires-Dist: pyspark ==3.5.0
Requires-Dist: pyyaml
Requires-Dist: slackclient
Requires-Dist: slackeventsapi
Requires-Dist: slack-bolt
Requires-Dist: tenacity
Requires-Dist: tiktoken

# Liten AI Python Library

Liten AI provides intelligent data analytics. It provides simple interface to intelligently query and analyze data. Liten API calls are exposed as python functions. It also provides a data chat app that can inspect and debug your data.

## Installation
Liten package is delivered using compiled files. To use the package do the following.
```bash
pip install --upgrade litenai
```
Please set LITEN_CONFIG_FILE variable to point to a valid yaml config file. Sample yaml is provided in scripts dir.

## Dependencies
All dependencies are installed with liten pacakge install. Liten uses python versions > 3.10

## Usage

First create a new session using Session.get_or_create API. This will create a new session if it does not exist. It will return the session object. This session object can be used to call various API functions.
Liten API calls are 
* ask - These are directly used by GenAI model for answers.
* send - Prompt sent is first parsed by master-agent, who then orchestrates Liten agents to complete the prompt.

Liten also provides a chat interface. This can be used within a python notebook or as a standalone application. To use it within a notebook use the following call.
```python
chatbot = Chatbot()
chatbot.start()
```

To start a standalone chatbot use the following command.
```bash
litenchat.sh
```
Use the server IP address provided by the chatbot to connect to it from a browser.
