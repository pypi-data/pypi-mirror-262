from .fuse import SetupMgr
from pyspark.sql import SparkSession

import subprocess

__all__ = ["setup_gdal", "enable_gdal"]


def setup_gdal(
    to_fuse_dir: str = "/Workspace/Shared/geospatial/mosaic/gdal/jammy",
    with_mosaic_pip: bool = False,
    with_ubuntugis: bool = False,
    script_out_name: str = "mosaic-gdal-init.sh",
    override_mosaic_version: str = None,
    jni_so_copy: bool = False,
) -> bool:
    """
    Prepare GDAL init script and shared objects required for GDAL to run on spark.
    This function will generate the init script that will install GDAL on each worker node.
    After the setup_gdal is run, the init script must be added to the cluster; also,
    a cluster restart is required.

    Notes:
      (a) This is close in behavior to Mosaic < 0.4 series (prior to DBR 13), with new options
          to pip install Mosaic for either ubuntugis gdal (3.4.3) or jammy default (3.4.1)
      (b) `to_fuse_dir` can be one of `/Volumes/..`, `/Workspace/..`, `/dbfs/..`;
           however, you should use `setup_fuse_install()` for Volume based installs

    Parameters
    ----------
    to_fuse_dir : str
            Path to write out the init script for GDAL installation;
            default is '/Workspace/Shared/geospatial/mosaic/gdal/jammy'.
    with_mosaic_pip : bool
            Whether to configure a script that pip installs databricks-mosaic,
            fixed to the current version; default is False.
     with_ubuntugis : bool
            Whether to use ubuntugis ppa for GDAL instead of built-in;
            default is False.
    script_out_name : str
            name of the script to be written;
            default is 'mosaic-gdal-init.sh'.
    override_mosaic_version: str
            String value to use to override the mosaic version to install,
            e.g. '==0.4.0' or '<0.5,>=0.4';
            default is None.

    Returns True unless resources fail to download.
    -------
    """
    setup_mgr = SetupMgr(
        to_fuse_dir,
        with_mosaic_pip=with_mosaic_pip,
        with_ubuntugis=with_ubuntugis,
        script_out_name=script_out_name,
        override_mosaic_version=override_mosaic_version,
        jni_so_copy=jni_so_copy,
    )
    return setup_mgr.configure()


def enable_gdal(spark: SparkSession) -> None:
    """
    Enable GDAL at runtime on a cluster with GDAL installed using init script,
    e.g.  generated by setup_gdal() or setup_fuse_install() call.

    Parameters
    ----------
    spark : pyspark.sql.SparkSession
            The active SparkSession.

    Returns
    -------

    """
    try:
        sc = spark.sparkContext
        mosaicGDALObject = getattr(
            sc._jvm.com.databricks.labs.mosaic.gdal, "MosaicGDAL"
        )
        mosaicGDALObject.enableGDAL(spark._jsparkSession)
        print("GDAL enabled.\n")
        result = subprocess.run(["gdalinfo", "--version"], stdout=subprocess.PIPE)
        print(result.stdout.decode() + "\n")
    except Exception as e:
        print(
            "GDAL not enabled. Mosaic with GDAL requires that GDAL be installed on the cluster.\n"
        )
        print(
            "You can run setup_gdal() or setup_fuse_install() to generate the init script for install GDAL install.\n"
        )
        print(
            "After the init script is generated, you need to add the init script to your cluster and restart to complete the setup.\n"
        )
        print("Error: " + str(e))
