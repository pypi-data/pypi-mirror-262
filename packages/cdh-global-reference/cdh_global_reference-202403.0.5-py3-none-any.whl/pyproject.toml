[project]
name = "cdh_global_reference"
authors = [{name="John Bowyer", email="zfi4@cdc.gov" }]
description = "CDC Data Hub Reference Data Accelerator"
readme = "README.md"
requires-python = ">=3.10,<4.0"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10"
]

[project.urls]
"Homepage" = "https://www.pypi.org/project/cdh_global_reference"
"Documentation" = "https://gift.readthedocs.io"
"Repository" = "https://github.com/cdcent/cdh-global-reference"

[tool.poetry]
name="cdh_global_reference"
version="202403.0.5"
description="CDC Data Hub Reference Data Accelerator Python"
authors=["John Bowyer <zfi4@cdc.gov>"]
readme = "README.md"
license="Apache"
homepage="https://pypi.org/project/cdh-global-reference"
repository="https://github.com/cdcent/cdh-global-reference"
classifiers=[
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10"
]

include = [ "README.md",
            "LICENSE.md",
            "setup.cfg",
            "setup.py",
            "pyproject.toml",
            "global_reference/**/*"
]
packages = [{include = "global_reference"}]


[tool.poetry.dependencies]
python = "^3.10"
pytest = "^7.1.2"
mlflow = "^2.10.0"


[tool.poetry.group.unix.dependencies]
xattr = {version = "^0.10.1", markers = "sys_platform != 'win32'"}

[tool.poetry.group.windows.dependencies]
pandas = { version = "^2.0.2", markers = "sys_platform == 'win32'" }


[tool.poetry.group.dev.dependencies]
wheel = "^0.38.1"
check-wheel-contents = "^0.3.4"
flake8 = "^4.0.1"
flake8-bugbear = "^22.6.22"
black = "^22.3.0"
commitizen = "^2.28.0"
python-decouple = "^3.6"
pathlib = "^1.0.1"

[tool.poetry.scripts]
flaskapp = "global_reference.app:app"
# generatechangelog = "npx conventional-changelog -p angular -i CHANGELOG.md -s"
# installdependencies = "npm ci"
# generaterelease = "npx semantic-release"

[tool.pytest.ini_options]
minversion="6.0"

testpaths=[
    "tests"
]

[tool.semantic_release]
version_variable = [ "pyproject.toml:version"]
version_toml = [
    "pyproject.toml:tool.poetry.version"
]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "pip install poetry && poetry build"


[tool.mypy]
warn_unused_configs=true
namespace_packages=true
explicit_package_bases=true
ignore_missing_imports=true
exclude='tests'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
