Metadata-Version: 2.1
Name: Converttentotwenty
Version: 2.0.0
Summary: Bibliotèque python conversion base 20
Home-page: https://github.com/Joris-ROBIN/Converttentotwenty.git
Author: Skai
Author-email: jorisrobin34@gmail.com
License: MEEF
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: GNU General Public License v2 (GPLv2)
Classifier: Operating System :: OS Independent
Description-Content-Type: text

# Converttentotwenty

## Resume

Bibliotheque permettant la traduction d'un message d'une base 10 a base 20.

Voici le dictionnaire de la base 20 utilise : "0123456789abcdefghij".
Par exemple :   
 - 11 (base10) -> b (base20);      
 - 20 (base10) -> j (base20);     
 - 15 (base10) -> f (base20)

## Installation
La bibloteque peut s'installer via pip grace au [site PyPI](https://pypi.org)

    pip install converttentotwenty


## Utilisation

La bibloteque comporte une fonction "traduction()" permettant d'effectuer le changement d'une base Ã  l'autre. Pour importer le paquet : 

    from converttentotwenty import traduction

Voici le docstring de la fonction : 


    Convertit les Ã©lÃ©ments d'une liste d'une base Ã  l'autre.

    La conversion de chaque Ã©lÃ©ment se fait d'un entier 
    de base 10 vers un entier de base 20, selon le dictionnaire de la
    base 20 fournie en documentation
    
    Parameters
    ----------
    message : list
        contient des entiers en base 10.

    Returns
    -------
    res : list
        contient les entiers traduit en base 20 sous forme
        de chaine de caractÃ¨re.

    Examples
    --------
    >>> traduction([4, 0, 16])
    ['4', '0', 'g']
    >>> traduction([5, 1, 4])
    ['5', '1', '4']
    >>> traduction([11, 16])
    ['b', 'g']
    
La fonction necessite un argument qui doit Ãªtre une liste d'entier en base 10 compris entre 0 et 19 inclus.
La liste n'a pas de longueur minimale ou maximale.

La fonction renvoie une liste de chaine de caractere.
Chaque valeur de cette liste ne peut Ãªtre qu'un seul caractere

## Exemples d'utilisation

Voici un exemple d'utilisation de ma biblioteque
```
from converttentotwenty import traduction
ten = [1, 5, 12, 17]
twenty = traduction(ten)
print(twenty)
```
```
['1', '5', 'c', 'h']    
```

## information annexe

Le but de cette bibliotheque est de l'utiliser a des fins pÃ©dagogiques pour des TP de NSI.  
La base choisie est arbitraire et n'a pas pour but de representer la realite autour d'une base 20 reellement utilise.
