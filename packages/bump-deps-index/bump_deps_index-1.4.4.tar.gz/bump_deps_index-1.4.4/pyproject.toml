[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs>=0.4",
  "hatchling>=1.21.1",
]

[project]
name = "bump-deps-index"
description = "Bump your dependencies to latest available from index."
readme = "README.md"
keywords = [
  "bump",
  "index",
  "pypi",
  "version",
]
license.file = "LICENSE"
maintainers = [{ name = "Bernát Gábor", email = "gaborjbernat@gmail.com" }]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = [
  "version",
]
dependencies = [
  "packaging>=23.2",
  "pyyaml>=6.0.1",
  'tomli>=2.0.1; python_version < "3.11"',
]
optional-dependencies.docs = [
  "furo>=2024.1.29",
  "proselint>=0.13",
  "sphinx>=7.2.6",
  "sphinx-argparse-cli>=1.13.1",
]
optional-dependencies.test = [
  "covdefaults>=2.3",
  "pytest>=8.1",
  "pytest-cov>=4.1",
  "pytest-mock>=3.12",
]
urls.Documentation = "https://bump-deps-index.readthedocs.io"
urls.Homepage = "https://github.com/gaborbernat/bump-deps-index"
urls.Source = "https://github.com/gaborbernat/bump-deps-index"
urls.Tracker = "https://github.com/gaborbernat/bump-deps-index/issues"
scripts.bump-deps-index = "bump_deps_index.__main__:main"

[tool.hatch]
build.hooks.vcs.version-file = "src/bump_deps_index/version.py"
version.source = "vcs"

[tool.black]
line-length = 120

[tool.ruff]
line-length = 120
target-version = "py310"
lint.isort = { known-first-party = ["bump_deps_index"], required-imports = ["from __future__ import annotations"] }
lint.select = ["ALL"]
lint.ignore = [
  "ANN101", # no type annotation for self
  "ANN401", # allow Any as type annotation
  "D203",   # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
  "D212",   # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible
  "S104",   # Possible binding to all interface
]
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
  "S101",    # asserts allowed in tests...
  "FBT",     # don"t care about booleans as positional arguments in tests
  "INP001",  # no implicit namespace
  "D",       # don"t care about documentation in tests
  "S603",    # `subprocess` call: check for execution of untrusted input
  "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
]

[tool.codespell]
builtin = "clear,usage,en-GB_to_en-US"
count = true

[tool.coverage]
run.dynamic_context = "test_function"
run.plugins = ["covdefaults"]
run.parallel = true
report.fail_under = 100
html.show_contexts = true
html.skip_covered = false
paths.source = [
  "src",
  ".tox*/*/lib/python*/site-packages",
  ".tox*/pypy*/site-packages",
  ".tox*\\*\\Lib\\site-packages",
  "*/src",
  "*\\src",
]

[tool.mypy]
python_version = "3.11"
show_error_codes = true
strict = true
overrides = [{ module = ["lxml.*"], ignore_missing_imports = true }]
