from antlr4 import *
from vba_likeParser import vba_likeParser as vba_likeParser

class vba_likeListener(ParseTreeListener):
    def enterProgram(self, ctx: vba_likeParser.ProgramContext): ...
    def exitProgram(self, ctx: vba_likeParser.ProgramContext): ...
    def enterLikePatternElement(self, ctx: vba_likeParser.LikePatternElementContext): ...
    def exitLikePatternElement(self, ctx: vba_likeParser.LikePatternElementContext): ...
    def enterLikePatternChar(self, ctx: vba_likeParser.LikePatternCharContext): ...
    def exitLikePatternChar(self, ctx: vba_likeParser.LikePatternCharContext): ...
    def enterWildcard(self, ctx: vba_likeParser.WildcardContext): ...
    def exitWildcard(self, ctx: vba_likeParser.WildcardContext): ...
    def enterLikePatternCharlist(self, ctx: vba_likeParser.LikePatternCharlistContext): ...
    def exitLikePatternCharlist(self, ctx: vba_likeParser.LikePatternCharlistContext): ...
    def enterCharList(self, ctx: vba_likeParser.CharListContext): ...
    def exitCharList(self, ctx: vba_likeParser.CharListContext): ...
    def enterCharListElement(self, ctx: vba_likeParser.CharListElementContext): ...
    def exitCharListElement(self, ctx: vba_likeParser.CharListElementContext): ...
    def enterCharlistChar(self, ctx: vba_likeParser.CharlistCharContext): ...
    def exitCharlistChar(self, ctx: vba_likeParser.CharlistCharContext): ...
    def enterCharRange(self, ctx: vba_likeParser.CharRangeContext): ...
    def exitCharRange(self, ctx: vba_likeParser.CharRangeContext): ...
