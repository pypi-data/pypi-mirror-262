from antlr4 import *
from vbaParser import vbaParser as vbaParser

class vbaParserVisitor(ParseTreeVisitor):
    def visitStartRule(self, ctx: vbaParser.StartRuleContext): ...
    def visitModule(self, ctx: vbaParser.ModuleContext): ...
    def visitClassFileHeader(self, ctx: vbaParser.ClassFileHeaderContext): ...
    def visitClassVersionIdentification(self, ctx: vbaParser.ClassVersionIdentificationContext): ...
    def visitClassBeginBlock(self, ctx: vbaParser.ClassBeginBlockContext): ...
    def visitBeginBlockConfigElement(self, ctx: vbaParser.BeginBlockConfigElementContext): ...
    def visitFormFileHeader(self, ctx: vbaParser.FormFileHeaderContext): ...
    def visitFormVersionIdentification(self, ctx: vbaParser.FormVersionIdentificationContext): ...
    def visitFormObjectAssign(self, ctx: vbaParser.FormObjectAssignContext): ...
    def visitFormBeginBlock(self, ctx: vbaParser.FormBeginBlockContext): ...
    def visitBeginPropertyBlock(self, ctx: vbaParser.BeginPropertyBlockContext): ...
    def visitProceduralModule(self, ctx: vbaParser.ProceduralModuleContext): ...
    def visitClassModule(self, ctx: vbaParser.ClassModuleContext): ...
    def visitProceduralModuleHeader(self, ctx: vbaParser.ProceduralModuleHeaderContext): ...
    def visitClassModuleHeader(self, ctx: vbaParser.ClassModuleHeaderContext): ...
    def visitClassAttr(self, ctx: vbaParser.ClassAttrContext): ...
    def visitProceduralModuleBody(self, ctx: vbaParser.ProceduralModuleBodyContext): ...
    def visitClassModuleBody(self, ctx: vbaParser.ClassModuleBodyContext): ...
    def visitUnrestrictedName(self, ctx: vbaParser.UnrestrictedNameContext): ...
    def visitName(self, ctx: vbaParser.NameContext): ...
    def visitUntypedName(self, ctx: vbaParser.UntypedNameContext): ...
    def visitProceduralModuleDeclarationSection(self, ctx: vbaParser.ProceduralModuleDeclarationSectionContext): ...
    def visitClassModuleDeclarationSection(self, ctx: vbaParser.ClassModuleDeclarationSectionContext): ...
    def visitProceduralModuleDirectiveElement(self, ctx: vbaParser.ProceduralModuleDirectiveElementContext): ...
    def visitProceduralModuleDeclarationElement(self, ctx: vbaParser.ProceduralModuleDeclarationElementContext): ...
    def visitClassModuleDirectiveElement(self, ctx: vbaParser.ClassModuleDirectiveElementContext): ...
    def visitClassModuleDeclarationElement(self, ctx: vbaParser.ClassModuleDeclarationElementContext): ...
    def visitCommonOptionDirective(self, ctx: vbaParser.CommonOptionDirectiveContext): ...
    def visitOptionCompareDirective(self, ctx: vbaParser.OptionCompareDirectiveContext): ...
    def visitOptionBaseDirective(self, ctx: vbaParser.OptionBaseDirectiveContext): ...
    def visitOptionExplicitDirective(self, ctx: vbaParser.OptionExplicitDirectiveContext): ...
    def visitOptionPrivateDirective(self, ctx: vbaParser.OptionPrivateDirectiveContext): ...
    def visitDefDirective(self, ctx: vbaParser.DefDirectiveContext): ...
    def visitLetterSpec(self, ctx: vbaParser.LetterSpecContext): ...
    def visitSingleLetter(self, ctx: vbaParser.SingleLetterContext): ...
    def visitUniversalLetterRange(self, ctx: vbaParser.UniversalLetterRangeContext): ...
    def visitUpperCaseA(self, ctx: vbaParser.UpperCaseAContext): ...
    def visitUpperCaseZ(self, ctx: vbaParser.UpperCaseZContext): ...
    def visitLetterRange(self, ctx: vbaParser.LetterRangeContext): ...
    def visitFirstLetter(self, ctx: vbaParser.FirstLetterContext): ...
    def visitLastLetter(self, ctx: vbaParser.LastLetterContext): ...
    def visitDefType(self, ctx: vbaParser.DefTypeContext): ...
    def visitCommonModuleDeclarationElement(self, ctx: vbaParser.CommonModuleDeclarationElementContext): ...
    def visitModuleVariableDeclaration(self, ctx: vbaParser.ModuleVariableDeclarationContext): ...
    def visitVariableHelpAttribute(self, ctx: vbaParser.VariableHelpAttributeContext): ...
    def visitGlobalVariableDeclaration(self, ctx: vbaParser.GlobalVariableDeclarationContext): ...
    def visitPublicVariableDecalation(self, ctx: vbaParser.PublicVariableDecalationContext): ...
    def visitPrivateVariableDeclaration(self, ctx: vbaParser.PrivateVariableDeclarationContext): ...
    def visitModuleVariableDeclarationList(self, ctx: vbaParser.ModuleVariableDeclarationListContext): ...
    def visitVariableDeclarationList(self, ctx: vbaParser.VariableDeclarationListContext): ...
    def visitVariableDcl(self, ctx: vbaParser.VariableDclContext): ...
    def visitTypedVariableDcl(self, ctx: vbaParser.TypedVariableDclContext): ...
    def visitUntypedVariableDcl(self, ctx: vbaParser.UntypedVariableDclContext): ...
    def visitArrayClause(self, ctx: vbaParser.ArrayClauseContext): ...
    def visitAsClause(self, ctx: vbaParser.AsClauseContext): ...
    def visitWitheventsVariableDcl(self, ctx: vbaParser.WitheventsVariableDclContext): ...
    def visitClassTypeName(self, ctx: vbaParser.ClassTypeNameContext): ...
    def visitArrayDim(self, ctx: vbaParser.ArrayDimContext): ...
    def visitBoundsList(self, ctx: vbaParser.BoundsListContext): ...
    def visitDimSpec(self, ctx: vbaParser.DimSpecContext): ...
    def visitLowerBound(self, ctx: vbaParser.LowerBoundContext): ...
    def visitUpperBound(self, ctx: vbaParser.UpperBoundContext): ...
    def visitAsAutoObject(self, ctx: vbaParser.AsAutoObjectContext): ...
    def visitAsType(self, ctx: vbaParser.AsTypeContext): ...
    def visitTypeSpec(self, ctx: vbaParser.TypeSpecContext): ...
    def visitFixedLengthStringSpec(self, ctx: vbaParser.FixedLengthStringSpecContext): ...
    def visitStringLength(self, ctx: vbaParser.StringLengthContext): ...
    def visitConstantName(self, ctx: vbaParser.ConstantNameContext): ...
    def visitPublicConstDeclaration(self, ctx: vbaParser.PublicConstDeclarationContext): ...
    def visitPrivateConstDeclaration(self, ctx: vbaParser.PrivateConstDeclarationContext): ...
    def visitModuleConstDeclaration(self, ctx: vbaParser.ModuleConstDeclarationContext): ...
    def visitConstDeclaration(self, ctx: vbaParser.ConstDeclarationContext): ...
    def visitConstItemList(self, ctx: vbaParser.ConstItemListContext): ...
    def visitConstItem(self, ctx: vbaParser.ConstItemContext): ...
    def visitTypedNameConstItem(self, ctx: vbaParser.TypedNameConstItemContext): ...
    def visitUntypedNameConstItem(self, ctx: vbaParser.UntypedNameConstItemContext): ...
    def visitConstAsClause(self, ctx: vbaParser.ConstAsClauseContext): ...
    def visitPublicTypeDeclaration(self, ctx: vbaParser.PublicTypeDeclarationContext): ...
    def visitPrivateTypeDeclaration(self, ctx: vbaParser.PrivateTypeDeclarationContext): ...
    def visitUdtDeclaration(self, ctx: vbaParser.UdtDeclarationContext): ...
    def visitUdtMemberList(self, ctx: vbaParser.UdtMemberListContext): ...
    def visitUdtElement(self, ctx: vbaParser.UdtElementContext): ...
    def visitUdtMember(self, ctx: vbaParser.UdtMemberContext): ...
    def visitUntypedNameMemberDcl(self, ctx: vbaParser.UntypedNameMemberDclContext): ...
    def visitReservedNameMemberDcl(self, ctx: vbaParser.ReservedNameMemberDclContext): ...
    def visitOptionalArrayClause(self, ctx: vbaParser.OptionalArrayClauseContext): ...
    def visitReservedMemberName(self, ctx: vbaParser.ReservedMemberNameContext): ...
    def visitGlobalEnumDeclaration(self, ctx: vbaParser.GlobalEnumDeclarationContext): ...
    def visitPublicEnumDeclaration(self, ctx: vbaParser.PublicEnumDeclarationContext): ...
    def visitPrivateEnumDeclaration(self, ctx: vbaParser.PrivateEnumDeclarationContext): ...
    def visitEnumDeclaration(self, ctx: vbaParser.EnumDeclarationContext): ...
    def visitEnumMemberList(self, ctx: vbaParser.EnumMemberListContext): ...
    def visitEnumElement(self, ctx: vbaParser.EnumElementContext): ...
    def visitEnumMember(self, ctx: vbaParser.EnumMemberContext): ...
    def visitPublicExternalProcedureDeclaration(self, ctx: vbaParser.PublicExternalProcedureDeclarationContext): ...
    def visitPrivateExternalProcedureDeclaration(self, ctx: vbaParser.PrivateExternalProcedureDeclarationContext): ...
    def visitExternalProcDcl(self, ctx: vbaParser.ExternalProcDclContext): ...
    def visitExternalSub(self, ctx: vbaParser.ExternalSubContext): ...
    def visitExternalFunction(self, ctx: vbaParser.ExternalFunctionContext): ...
    def visitLibInfo(self, ctx: vbaParser.LibInfoContext): ...
    def visitLibClause(self, ctx: vbaParser.LibClauseContext): ...
    def visitAliasClause(self, ctx: vbaParser.AliasClauseContext): ...
    def visitImplementsDirective(self, ctx: vbaParser.ImplementsDirectiveContext): ...
    def visitEventDeclaration(self, ctx: vbaParser.EventDeclarationContext): ...
    def visitEventParameterList(self, ctx: vbaParser.EventParameterListContext): ...
    def visitProceduralModuleCode(self, ctx: vbaParser.ProceduralModuleCodeContext): ...
    def visitClassModuleCode(self, ctx: vbaParser.ClassModuleCodeContext): ...
    def visitProceduralModuleCodeElement(self, ctx: vbaParser.ProceduralModuleCodeElementContext): ...
    def visitClassModuleCodeElement(self, ctx: vbaParser.ClassModuleCodeElementContext): ...
    def visitCommonModuleCodeElement(self, ctx: vbaParser.CommonModuleCodeElementContext): ...
    def visitProcedureDeclaration(self, ctx: vbaParser.ProcedureDeclarationContext): ...
    def visitSubroutineDeclaration(self, ctx: vbaParser.SubroutineDeclarationContext): ...
    def visitFunctionDeclaration(self, ctx: vbaParser.FunctionDeclarationContext): ...
    def visitPropertyGetDeclaration(self, ctx: vbaParser.PropertyGetDeclarationContext): ...
    def visitPropertyLhsDeclaration(self, ctx: vbaParser.PropertyLhsDeclarationContext): ...
    def visitEndLabel(self, ctx: vbaParser.EndLabelContext): ...
    def visitProcedureTail(self, ctx: vbaParser.ProcedureTailContext): ...
    def visitProcedureScope(self, ctx: vbaParser.ProcedureScopeContext): ...
    def visitInitialStatic(self, ctx: vbaParser.InitialStaticContext): ...
    def visitTrailingStatic(self, ctx: vbaParser.TrailingStaticContext): ...
    def visitSubroutineName(self, ctx: vbaParser.SubroutineNameContext): ...
    def visitFunctionName(self, ctx: vbaParser.FunctionNameContext): ...
    def visitPrefixedName(self, ctx: vbaParser.PrefixedNameContext): ...
    def visitFunctionType(self, ctx: vbaParser.FunctionTypeContext): ...
    def visitArrayDesignator(self, ctx: vbaParser.ArrayDesignatorContext): ...
    def visitProcedureParameters(self, ctx: vbaParser.ProcedureParametersContext): ...
    def visitPropertyParameters(self, ctx: vbaParser.PropertyParametersContext): ...
    def visitParameterList(self, ctx: vbaParser.ParameterListContext): ...
    def visitPositionalParameters(self, ctx: vbaParser.PositionalParametersContext): ...
    def visitOptionalParameters(self, ctx: vbaParser.OptionalParametersContext): ...
    def visitValueParam(self, ctx: vbaParser.ValueParamContext): ...
    def visitPositionalParam(self, ctx: vbaParser.PositionalParamContext): ...
    def visitOptionalParam(self, ctx: vbaParser.OptionalParamContext): ...
    def visitParamArray(self, ctx: vbaParser.ParamArrayContext): ...
    def visitParamDcl(self, ctx: vbaParser.ParamDclContext): ...
    def visitUntypedNameParamDcl(self, ctx: vbaParser.UntypedNameParamDclContext): ...
    def visitTypedNameParamDcl(self, ctx: vbaParser.TypedNameParamDclContext): ...
    def visitOptionalPrefix(self, ctx: vbaParser.OptionalPrefixContext): ...
    def visitParameterMechanism(self, ctx: vbaParser.ParameterMechanismContext): ...
    def visitParameterType(self, ctx: vbaParser.ParameterTypeContext): ...
    def visitDefaultValue(self, ctx: vbaParser.DefaultValueContext): ...
    def visitEventHandlerName(self, ctx: vbaParser.EventHandlerNameContext): ...
    def visitImplementedName(self, ctx: vbaParser.ImplementedNameContext): ...
    def visitLifecycleHandlerName(self, ctx: vbaParser.LifecycleHandlerNameContext): ...
    def visitProcedureBody(self, ctx: vbaParser.ProcedureBodyContext): ...
    def visitStatementBlock(self, ctx: vbaParser.StatementBlockContext): ...
    def visitBlockStatement(self, ctx: vbaParser.BlockStatementContext): ...
    def visitStatement(self, ctx: vbaParser.StatementContext): ...
    def visitStatementLabelDefinition(self, ctx: vbaParser.StatementLabelDefinitionContext): ...
    def visitStatementLabel(self, ctx: vbaParser.StatementLabelContext): ...
    def visitStatementLabelList(self, ctx: vbaParser.StatementLabelListContext): ...
    def visitIdentifierStatementLabel(self, ctx: vbaParser.IdentifierStatementLabelContext): ...
    def visitLineNumberLabel(self, ctx: vbaParser.LineNumberLabelContext): ...
    def visitRemStatement(self, ctx: vbaParser.RemStatementContext): ...
    def visitControlStatement(self, ctx: vbaParser.ControlStatementContext): ...
    def visitControlStatementExceptMultilineIf(self, ctx: vbaParser.ControlStatementExceptMultilineIfContext): ...
    def visitCallStatement(self, ctx: vbaParser.CallStatementContext): ...
    def visitWhileStatement(self, ctx: vbaParser.WhileStatementContext): ...
    def visitForStatement(self, ctx: vbaParser.ForStatementContext): ...
    def visitSimpleForStatement(self, ctx: vbaParser.SimpleForStatementContext): ...
    def visitExplicitForStatement(self, ctx: vbaParser.ExplicitForStatementContext): ...
    def visitNestedForStatement(self, ctx: vbaParser.NestedForStatementContext): ...
    def visitForClause(self, ctx: vbaParser.ForClauseContext): ...
    def visitStartValue(self, ctx: vbaParser.StartValueContext): ...
    def visitEndValue(self, ctx: vbaParser.EndValueContext): ...
    def visitStepClause(self, ctx: vbaParser.StepClauseContext): ...
    def visitStepIncrement(self, ctx: vbaParser.StepIncrementContext): ...
    def visitForEachStatement(self, ctx: vbaParser.ForEachStatementContext): ...
    def visitSimpleForEachStatement(self, ctx: vbaParser.SimpleForEachStatementContext): ...
    def visitExplicitForEachStatement(self, ctx: vbaParser.ExplicitForEachStatementContext): ...
    def visitForEachClause(self, ctx: vbaParser.ForEachClauseContext): ...
    def visitCollection(self, ctx: vbaParser.CollectionContext): ...
    def visitExitForStatement(self, ctx: vbaParser.ExitForStatementContext): ...
    def visitDoStatement(self, ctx: vbaParser.DoStatementContext): ...
    def visitConditionClause(self, ctx: vbaParser.ConditionClauseContext): ...
    def visitWhileClause(self, ctx: vbaParser.WhileClauseContext): ...
    def visitUntilClause(self, ctx: vbaParser.UntilClauseContext): ...
    def visitExitDoStatement(self, ctx: vbaParser.ExitDoStatementContext): ...
    def visitIfStatement(self, ctx: vbaParser.IfStatementContext): ...
    def visitElseIfBlock(self, ctx: vbaParser.ElseIfBlockContext): ...
    def visitElseBlock(self, ctx: vbaParser.ElseBlockContext): ...
    def visitSingleLineIfStatement(self, ctx: vbaParser.SingleLineIfStatementContext): ...
    def visitIfWithNonEmptyThen(self, ctx: vbaParser.IfWithNonEmptyThenContext): ...
    def visitIfWithEmptyThen(self, ctx: vbaParser.IfWithEmptyThenContext): ...
    def visitSingleLineElseClause(self, ctx: vbaParser.SingleLineElseClauseContext): ...
    def visitListOrLabel(self, ctx: vbaParser.ListOrLabelContext): ...
    def visitSameLineStatement(self, ctx: vbaParser.SameLineStatementContext): ...
    def visitSelectCaseStatement(self, ctx: vbaParser.SelectCaseStatementContext): ...
    def visitCaseClause(self, ctx: vbaParser.CaseClauseContext): ...
    def visitCaseElseClause(self, ctx: vbaParser.CaseElseClauseContext): ...
    def visitRangeClause(self, ctx: vbaParser.RangeClauseContext): ...
    def visitSelectExpression(self, ctx: vbaParser.SelectExpressionContext): ...
    def visitComparisonOperator(self, ctx: vbaParser.ComparisonOperatorContext): ...
    def visitStopStatement(self, ctx: vbaParser.StopStatementContext): ...
    def visitGotoStatement(self, ctx: vbaParser.GotoStatementContext): ...
    def visitOnGotoStatement(self, ctx: vbaParser.OnGotoStatementContext): ...
    def visitGosubStatement(self, ctx: vbaParser.GosubStatementContext): ...
    def visitReturnStatement(self, ctx: vbaParser.ReturnStatementContext): ...
    def visitOnGosubStatement(self, ctx: vbaParser.OnGosubStatementContext): ...
    def visitExitSubStatement(self, ctx: vbaParser.ExitSubStatementContext): ...
    def visitExitFunctionStatement(self, ctx: vbaParser.ExitFunctionStatementContext): ...
    def visitExitPropertyStatement(self, ctx: vbaParser.ExitPropertyStatementContext): ...
    def visitRaiseeventStatement(self, ctx: vbaParser.RaiseeventStatementContext): ...
    def visitEventArgumentList(self, ctx: vbaParser.EventArgumentListContext): ...
    def visitEventArgument(self, ctx: vbaParser.EventArgumentContext): ...
    def visitWithStatement(self, ctx: vbaParser.WithStatementContext): ...
    def visitEndStatement(self, ctx: vbaParser.EndStatementContext): ...
    def visitDataManipulationStatement(self, ctx: vbaParser.DataManipulationStatementContext): ...
    def visitLocalVariableDeclaration(self, ctx: vbaParser.LocalVariableDeclarationContext): ...
    def visitStaticVariableDeclaration(self, ctx: vbaParser.StaticVariableDeclarationContext): ...
    def visitLocalConstDeclaration(self, ctx: vbaParser.LocalConstDeclarationContext): ...
    def visitRedimStatement(self, ctx: vbaParser.RedimStatementContext): ...
    def visitRedimDeclarationList(self, ctx: vbaParser.RedimDeclarationListContext): ...
    def visitRedimVariableDcl(self, ctx: vbaParser.RedimVariableDclContext): ...
    def visitRedimTypedVariableDcl(self, ctx: vbaParser.RedimTypedVariableDclContext): ...
    def visitRedimUntypedDcl(self, ctx: vbaParser.RedimUntypedDclContext): ...
    def visitWithExpressionDcl(self, ctx: vbaParser.WithExpressionDclContext): ...
    def visitMemberAccessExpressionDcl(self, ctx: vbaParser.MemberAccessExpressionDclContext): ...
    def visitDynamicArrayDim(self, ctx: vbaParser.DynamicArrayDimContext): ...
    def visitDynamicBoundsList(self, ctx: vbaParser.DynamicBoundsListContext): ...
    def visitDynamicDimSpec(self, ctx: vbaParser.DynamicDimSpecContext): ...
    def visitDynamicLowerBound(self, ctx: vbaParser.DynamicLowerBoundContext): ...
    def visitDynamicUpperBound(self, ctx: vbaParser.DynamicUpperBoundContext): ...
    def visitDynamicArrayClause(self, ctx: vbaParser.DynamicArrayClauseContext): ...
    def visitEraseStatement(self, ctx: vbaParser.EraseStatementContext): ...
    def visitEraseList(self, ctx: vbaParser.EraseListContext): ...
    def visitEraseElement(self, ctx: vbaParser.EraseElementContext): ...
    def visitMidStatement(self, ctx: vbaParser.MidStatementContext): ...
    def visitModeSpecifier(self, ctx: vbaParser.ModeSpecifierContext): ...
    def visitStringArgument(self, ctx: vbaParser.StringArgumentContext): ...
    def visitStartMid(self, ctx: vbaParser.StartMidContext): ...
    def visitLength(self, ctx: vbaParser.LengthContext): ...
    def visitLsetStatement(self, ctx: vbaParser.LsetStatementContext): ...
    def visitRsetStatement(self, ctx: vbaParser.RsetStatementContext): ...
    def visitLetStatement(self, ctx: vbaParser.LetStatementContext): ...
    def visitSetStatement(self, ctx: vbaParser.SetStatementContext): ...
    def visitErrorHandlingStatement(self, ctx: vbaParser.ErrorHandlingStatementContext): ...
    def visitOnErrorStatement(self, ctx: vbaParser.OnErrorStatementContext): ...
    def visitErrorBehavior(self, ctx: vbaParser.ErrorBehaviorContext): ...
    def visitResumeStatement(self, ctx: vbaParser.ResumeStatementContext): ...
    def visitErrorStatement(self, ctx: vbaParser.ErrorStatementContext): ...
    def visitErrorNumber(self, ctx: vbaParser.ErrorNumberContext): ...
    def visitFileStatement(self, ctx: vbaParser.FileStatementContext): ...
    def visitOpenStatement(self, ctx: vbaParser.OpenStatementContext): ...
    def visitPathName(self, ctx: vbaParser.PathNameContext): ...
    def visitModeClause(self, ctx: vbaParser.ModeClauseContext): ...
    def visitModeOpt(self, ctx: vbaParser.ModeOptContext): ...
    def visitAccessClause(self, ctx: vbaParser.AccessClauseContext): ...
    def visitAccess(self, ctx: vbaParser.AccessContext): ...
    def visitLock(self, ctx: vbaParser.LockContext): ...
    def visitLenClause(self, ctx: vbaParser.LenClauseContext): ...
    def visitRecLength(self, ctx: vbaParser.RecLengthContext): ...
    def visitFileNumber(self, ctx: vbaParser.FileNumberContext): ...
    def visitMarkedFileNumber(self, ctx: vbaParser.MarkedFileNumberContext): ...
    def visitUnmarkedFileNumber(self, ctx: vbaParser.UnmarkedFileNumberContext): ...
    def visitCloseStatement(self, ctx: vbaParser.CloseStatementContext): ...
    def visitFileNumberList(self, ctx: vbaParser.FileNumberListContext): ...
    def visitSeekStatement(self, ctx: vbaParser.SeekStatementContext): ...
    def visitPosition(self, ctx: vbaParser.PositionContext): ...
    def visitLockStatement(self, ctx: vbaParser.LockStatementContext): ...
    def visitRecordRange(self, ctx: vbaParser.RecordRangeContext): ...
    def visitStartRecordNumber(self, ctx: vbaParser.StartRecordNumberContext): ...
    def visitEndRecordNumber(self, ctx: vbaParser.EndRecordNumberContext): ...
    def visitUnlockStatement(self, ctx: vbaParser.UnlockStatementContext): ...
    def visitLineInputStatement(self, ctx: vbaParser.LineInputStatementContext): ...
    def visitVariableName(self, ctx: vbaParser.VariableNameContext): ...
    def visitWidthStatement(self, ctx: vbaParser.WidthStatementContext): ...
    def visitLineWidth(self, ctx: vbaParser.LineWidthContext): ...
    def visitPrintStatement(self, ctx: vbaParser.PrintStatementContext): ...
    def visitOutputList(self, ctx: vbaParser.OutputListContext): ...
    def visitOutputItem(self, ctx: vbaParser.OutputItemContext): ...
    def visitOutputClause(self, ctx: vbaParser.OutputClauseContext): ...
    def visitCharPosition(self, ctx: vbaParser.CharPositionContext): ...
    def visitOutputExpression(self, ctx: vbaParser.OutputExpressionContext): ...
    def visitSpcClause(self, ctx: vbaParser.SpcClauseContext): ...
    def visitSpcNumber(self, ctx: vbaParser.SpcNumberContext): ...
    def visitTabClause(self, ctx: vbaParser.TabClauseContext): ...
    def visitTabNumber(self, ctx: vbaParser.TabNumberContext): ...
    def visitWriteStatement(self, ctx: vbaParser.WriteStatementContext): ...
    def visitInputStatement(self, ctx: vbaParser.InputStatementContext): ...
    def visitInputList(self, ctx: vbaParser.InputListContext): ...
    def visitInputVariable(self, ctx: vbaParser.InputVariableContext): ...
    def visitPutStatement(self, ctx: vbaParser.PutStatementContext): ...
    def visitRecordNumber(self, ctx: vbaParser.RecordNumberContext): ...
    def visitData(self, ctx: vbaParser.DataContext): ...
    def visitGetStatement(self, ctx: vbaParser.GetStatementContext): ...
    def visitVariable(self, ctx: vbaParser.VariableContext): ...
    def visitAttributeStatement(self, ctx: vbaParser.AttributeStatementContext): ...
    def visitAttributeDescName(self, ctx: vbaParser.AttributeDescNameContext): ...
    def visitAttributeUsrName(self, ctx: vbaParser.AttributeUsrNameContext): ...
    def visitExpression(self, ctx: vbaParser.ExpressionContext): ...
    def visitLExpression(self, ctx: vbaParser.LExpressionContext): ...
    def visitLiteralExpression(self, ctx: vbaParser.LiteralExpressionContext): ...
    def visitParenthesizedExpression(self, ctx: vbaParser.ParenthesizedExpressionContext): ...
    def visitTypeofIsExpression(self, ctx: vbaParser.TypeofIsExpressionContext): ...
    def visitNewExpress(self, ctx: vbaParser.NewExpressContext): ...
    def visitNotOperatorExpression(self, ctx: vbaParser.NotOperatorExpressionContext): ...
    def visitUnaryMinusExpression(self, ctx: vbaParser.UnaryMinusExpressionContext): ...
    def visitSimpleNameExpression(self, ctx: vbaParser.SimpleNameExpressionContext): ...
    def visitInstanceExpression(self, ctx: vbaParser.InstanceExpressionContext): ...
    def visitMemberAccessExpression(self, ctx: vbaParser.MemberAccessExpressionContext): ...
    def visitIndexExpression(self, ctx: vbaParser.IndexExpressionContext): ...
    def visitArgumentList(self, ctx: vbaParser.ArgumentListContext): ...
    def visitPositionalOrNamedArgumentList(self, ctx: vbaParser.PositionalOrNamedArgumentListContext): ...
    def visitPositionalArgument(self, ctx: vbaParser.PositionalArgumentContext): ...
    def visitRequiredPositionalArgument(self, ctx: vbaParser.RequiredPositionalArgumentContext): ...
    def visitNamedArgumentList(self, ctx: vbaParser.NamedArgumentListContext): ...
    def visitNamedArgument(self, ctx: vbaParser.NamedArgumentContext): ...
    def visitArgumentExpression(self, ctx: vbaParser.ArgumentExpressionContext): ...
    def visitDictionaryAccessExpression(self, ctx: vbaParser.DictionaryAccessExpressionContext): ...
    def visitWithExpression(self, ctx: vbaParser.WithExpressionContext): ...
    def visitWithMemberAccessExpression(self, ctx: vbaParser.WithMemberAccessExpressionContext): ...
    def visitWithDictionaryAccessExpression(self, ctx: vbaParser.WithDictionaryAccessExpressionContext): ...
    def visitConstantExpression(self, ctx: vbaParser.ConstantExpressionContext): ...
    def visitCcExpression(self, ctx: vbaParser.CcExpressionContext): ...
    def visitBooleanExpression(self, ctx: vbaParser.BooleanExpressionContext): ...
    def visitIntegerExpression(self, ctx: vbaParser.IntegerExpressionContext): ...
    def visitVariableExpression(self, ctx: vbaParser.VariableExpressionContext): ...
    def visitBoundVariableExpression(self, ctx: vbaParser.BoundVariableExpressionContext): ...
    def visitTypeExpression(self, ctx: vbaParser.TypeExpressionContext): ...
    def visitDefinedTypeExpression(self, ctx: vbaParser.DefinedTypeExpressionContext): ...
    def visitAddressofExpression(self, ctx: vbaParser.AddressofExpressionContext): ...
    def visitProcedurePointerExpression(self, ctx: vbaParser.ProcedurePointerExpressionContext): ...
    def visitWsc(self, ctx: vbaParser.WscContext): ...
    def visitEndOfLine(self, ctx: vbaParser.EndOfLineContext): ...
    def visitEndOfLineNoWs(self, ctx: vbaParser.EndOfLineNoWsContext): ...
    def visitEndOfStatement(self, ctx: vbaParser.EndOfStatementContext): ...
    def visitEndOfStatementNoWs(self, ctx: vbaParser.EndOfStatementNoWsContext): ...
    def visitCommentBody(self, ctx: vbaParser.CommentBodyContext): ...
    def visitReservedIdentifier(self, ctx: vbaParser.ReservedIdentifierContext): ...
    def visitAmbiguousIdentifier(self, ctx: vbaParser.AmbiguousIdentifierContext): ...
    def visitStatementKeyword(self, ctx: vbaParser.StatementKeywordContext): ...
    def visitRemKeyword(self, ctx: vbaParser.RemKeywordContext): ...
    def visitMarkerKeyword(self, ctx: vbaParser.MarkerKeywordContext): ...
    def visitOperatorIdentifier(self, ctx: vbaParser.OperatorIdentifierContext): ...
    def visitReservedName(self, ctx: vbaParser.ReservedNameContext): ...
    def visitSpecialForm(self, ctx: vbaParser.SpecialFormContext): ...
    def visitReservedTypeIdentifier(self, ctx: vbaParser.ReservedTypeIdentifierContext): ...
    def visitReservedTypeIdentifierB(self, ctx: vbaParser.ReservedTypeIdentifierBContext): ...
    def visitTypeableReservedName(self, ctx: vbaParser.TypeableReservedNameContext): ...
    def visitLiteralIdentifier(self, ctx: vbaParser.LiteralIdentifierContext): ...
    def visitBooleanLiteralIdentifier(self, ctx: vbaParser.BooleanLiteralIdentifierContext): ...
    def visitObjectLiteralIdentifier(self, ctx: vbaParser.ObjectLiteralIdentifierContext): ...
    def visitVariantLiteralIdentifier(self, ctx: vbaParser.VariantLiteralIdentifierContext): ...
    def visitReservedForImplementationUse(self, ctx: vbaParser.ReservedForImplementationUseContext): ...
    def visitFutureReserved(self, ctx: vbaParser.FutureReservedContext): ...
    def visitBuiltinType(self, ctx: vbaParser.BuiltinTypeContext): ...
    def visitTypedName(self, ctx: vbaParser.TypedNameContext): ...
    def visitTypeSuffix(self, ctx: vbaParser.TypeSuffixContext): ...
    def visitAmbiguousKeyword(self, ctx: vbaParser.AmbiguousKeywordContext): ...
