from antlr4 import *
from _typeshed import Incomplete
from io import StringIO as StringIO
from typing import TextIO

def serializedATN(): ...

class vbaLexer(Lexer):
    atn: Incomplete
    decisionsToDFA: Incomplete
    ABS: int
    ACCESS: int
    ADDRESSOF: int
    ALIAS: int
    AND: int
    ANY: int
    ATTRIBUTE: int
    APPEND: int
    ARRAY: int
    AS: int
    BASE: int
    BEGIN: int
    BEGINPROPERTY: int
    BINARY: int
    BOOLEAN: int
    BOOLEAN_B: int
    BYVAL: int
    BYREF: int
    BYTE: int
    BYTE_B: int
    CALL: int
    CASE: int
    CBOOL: int
    CBYTE: int
    CCUR: int
    CDATE: int
    CDBL: int
    CDEC: int
    CDECL: int
    CHDIR: int
    CHDRIVE: int
    CINT: int
    CIRCLE: int
    CLASS: int
    CLASS_INITIALIZE: int
    CLASS_TERMINATE: int
    CLNG: int
    CLNGLNG: int
    CLNGPTR: int
    CLOSE: int
    COMPARE: int
    CONST: int
    CSNG: int
    CSTR: int
    CVAR: int
    CVERR: int
    CURRENCY: int
    CURRENCY_B: int
    DATE: int
    DATE_B: int
    DEBUG: int
    DECLARE: int
    DECIMAL: int
    DEFBOOL: int
    DEFBYTE: int
    DEFCUR: int
    DEFDATE: int
    DEFDBL: int
    DEFDEC: int
    DEFINT: int
    DEFLNG: int
    DEFLNGLNG: int
    DEFLNGPTR: int
    DEFOBJ: int
    DEFSNG: int
    DEFSTR: int
    DEFVAR: int
    DIM: int
    DO: int
    DOEVENTS: int
    DOUBLE: int
    DOUBLE_B: int
    EACH: int
    ELSE: int
    ELSEIF: int
    EMPTY_X: int
    ENDIF: int
    END: int
    ENDPROPERTY: int
    ENUM: int
    EQV: int
    ERASE: int
    ERROR: int
    EVENT: int
    EXIT: int
    EXPLICIT: int
    FALSE: int
    FIX: int
    FRIEND: int
    FOR: int
    FUNCTION: int
    GET: int
    GLOBAL: int
    GO: int
    GOSUB: int
    GOTO: int
    IF: int
    IMP: int
    IMPLEMENTS: int
    IN: int
    INPUT: int
    INPUTB: int
    INT: int
    IS: int
    INTEGER: int
    INTEGER_B: int
    KILL: int
    LBOUND: int
    LEN: int
    LENB: int
    LET: int
    LIB: int
    LIKE: int
    LINE: int
    LINEINPUT: int
    LOCK: int
    LONG: int
    LONG_B: int
    LONGLONG: int
    LONGLONG_B: int
    LONGPTR: int
    LONGPTR_B: int
    LOOP: int
    LSET: int
    ME: int
    MID: int
    MIDB: int
    MID_D: int
    MIDB_D: int
    MOD: int
    MODULE: int
    NEXT: int
    NEW: int
    NOT: int
    NOTHING: int
    NULL_: int
    OBJECT: int
    OBJECT_B: int
    ON: int
    OPEN: int
    OPTION: int
    OPTIONAL: int
    OR: int
    OUTPUT: int
    PARAMARRAY: int
    PRESERVE: int
    PRINT: int
    PRIVATE: int
    PROPERTY: int
    PSET: int
    PTRSAFE: int
    PUBLIC: int
    PUT: int
    RANDOM: int
    RAISEEVENT: int
    READ: int
    REDIM: int
    REM: int
    RESET: int
    RESUME: int
    RETURN: int
    RSET: int
    SCALE: int
    SEEK: int
    SELECT: int
    SET: int
    SGN: int
    SHARED: int
    SINGLE: int
    SINGLE_B: int
    SPC: int
    STATIC: int
    STEP: int
    STOP: int
    STRING: int
    STRING_B: int
    SUB: int
    TAB: int
    TEXT: int
    THEN: int
    TO: int
    TRUE: int
    TYPE: int
    TYPEOF: int
    UBOUND: int
    UNLOCK: int
    UNTIL: int
    VB_BASE: int
    VB_CONTROL: int
    VB_CREATABLE: int
    VB_CUSTOMIZABLE: int
    VB_DESCRIPTION: int
    VB_EXPOSED: int
    VB_EXT_KEY: int
    VB_GLOBALNAMESPACE: int
    VB_HELPID: int
    VB_INVOKE_FUNC: int
    VB_INVOKE_PROPERTY: int
    VB_INVOKE_PROPERTYPUT: int
    VB_INVOKE_PROPERTYPUTREF: int
    VB_MEMBERFLAGS: int
    VB_NAME: int
    VB_PREDECLAREDID: int
    VB_PROCDATA: int
    VB_TEMPLATEDERIVED: int
    VB_USERMEMID: int
    VB_VARDESCRIPTION: int
    VB_VARHELPID: int
    VB_VARMEMBERFLAGS: int
    VB_VARPROCDATA: int
    VB_VARUSERMEMID: int
    VARIANT: int
    VARIANT_B: int
    VERSION: int
    WEND: int
    WHILE: int
    WIDTH: int
    WITH: int
    WITHEVENTS: int
    WRITE: int
    XOR: int
    APPACTIVATE: int
    BEEP: int
    COLLECTION: int
    DATABASE: int
    DELETESETTING: int
    FILECOPY: int
    MKDIR: int
    NAME: int
    RANDOMIZE: int
    RMDIR: int
    SAVEPICTURE: int
    SAVESETTING: int
    SENDKEYS: int
    SETATTR: int
    TIME: int
    LOAD: int
    UNLOAD: int
    AMPERSAND: int
    ASPERAND: int
    ASSIGN: int
    COMMA: int
    DIV: int
    Dollar: int
    EQ: int
    EXCLAM: int
    GEQ: int
    GT: int
    HASH: int
    LEQ: int
    LPAREN: int
    LT: int
    MINUS: int
    MINUS_EQ: int
    MULT: int
    NEQ: int
    PERCENT: int
    PERIOD: int
    PLUS: int
    PLUS_EQ: int
    POW: int
    RPAREN: int
    SEMICOLON: int
    L_SQUARE_BRACKET: int
    R_SQUARE_BRACKET: int
    GUID: int
    STRINGLITERAL: int
    INTEGERLITERAL: int
    FLOATLITERAL: int
    DATELITERAL: int
    FILEOFFSET: int
    LINE_CONTINUATION: int
    NEWLINE: int
    REMCOMMENT: int
    COMMENT: int
    SINGLEQUOTE: int
    COLON: int
    UNDERSCORE: int
    WS: int
    MACRO_LINE: int
    IDENTIFIER: int
    FOREIGN_NAME: int
    channelNames: Incomplete
    modeNames: Incomplete
    literalNames: Incomplete
    symbolicNames: Incomplete
    ruleNames: Incomplete
    grammarFileName: str
    def __init__(self, input: Incomplete | None = None, output: TextIO = ...) -> None: ...
