from antlr4 import *
from vba_ccParser import vba_ccParser as vba_ccParser

class vba_ccListener(ParseTreeListener):
    def enterStartRule(self, ctx: vba_ccParser.StartRuleContext): ...
    def exitStartRule(self, ctx: vba_ccParser.StartRuleContext): ...
    def enterProceduralModuleHeader(self, ctx: vba_ccParser.ProceduralModuleHeaderContext): ...
    def exitProceduralModuleHeader(self, ctx: vba_ccParser.ProceduralModuleHeaderContext): ...
    def enterClassFileHeader(self, ctx: vba_ccParser.ClassFileHeaderContext): ...
    def exitClassFileHeader(self, ctx: vba_ccParser.ClassFileHeaderContext): ...
    def enterLogicalLine(self, ctx: vba_ccParser.LogicalLineContext): ...
    def exitLogicalLine(self, ctx: vba_ccParser.LogicalLineContext): ...
    def enterConditionalModuleBody(self, ctx: vba_ccParser.ConditionalModuleBodyContext): ...
    def exitConditionalModuleBody(self, ctx: vba_ccParser.ConditionalModuleBodyContext): ...
    def enterCcBlock(self, ctx: vba_ccParser.CcBlockContext): ...
    def exitCcBlock(self, ctx: vba_ccParser.CcBlockContext): ...
    def enterCcConst(self, ctx: vba_ccParser.CcConstContext): ...
    def exitCcConst(self, ctx: vba_ccParser.CcConstContext): ...
    def enterCcVarLhs(self, ctx: vba_ccParser.CcVarLhsContext): ...
    def exitCcVarLhs(self, ctx: vba_ccParser.CcVarLhsContext): ...
    def enterCcIfBlock(self, ctx: vba_ccParser.CcIfBlockContext): ...
    def exitCcIfBlock(self, ctx: vba_ccParser.CcIfBlockContext): ...
    def enterCcIf(self, ctx: vba_ccParser.CcIfContext): ...
    def exitCcIf(self, ctx: vba_ccParser.CcIfContext): ...
    def enterCcElseifBlock(self, ctx: vba_ccParser.CcElseifBlockContext): ...
    def exitCcElseifBlock(self, ctx: vba_ccParser.CcElseifBlockContext): ...
    def enterCcElseif(self, ctx: vba_ccParser.CcElseifContext): ...
    def exitCcElseif(self, ctx: vba_ccParser.CcElseifContext): ...
    def enterCcElseBlock(self, ctx: vba_ccParser.CcElseBlockContext): ...
    def exitCcElseBlock(self, ctx: vba_ccParser.CcElseBlockContext): ...
    def enterCcElse(self, ctx: vba_ccParser.CcElseContext): ...
    def exitCcElse(self, ctx: vba_ccParser.CcElseContext): ...
    def enterCcEndif(self, ctx: vba_ccParser.CcEndifContext): ...
    def exitCcEndif(self, ctx: vba_ccParser.CcEndifContext): ...
    def enterName(self, ctx: vba_ccParser.NameContext): ...
    def exitName(self, ctx: vba_ccParser.NameContext): ...
    def enterUntypedName(self, ctx: vba_ccParser.UntypedNameContext): ...
    def exitUntypedName(self, ctx: vba_ccParser.UntypedNameContext): ...
    def enterTypedName(self, ctx: vba_ccParser.TypedNameContext): ...
    def exitTypedName(self, ctx: vba_ccParser.TypedNameContext): ...
    def enterTypeSuffix(self, ctx: vba_ccParser.TypeSuffixContext): ...
    def exitTypeSuffix(self, ctx: vba_ccParser.TypeSuffixContext): ...
    def enterParenthesizedExpression(self, ctx: vba_ccParser.ParenthesizedExpressionContext): ...
    def exitParenthesizedExpression(self, ctx: vba_ccParser.ParenthesizedExpressionContext): ...
    def enterLiteralExpress(self, ctx: vba_ccParser.LiteralExpressContext): ...
    def exitLiteralExpress(self, ctx: vba_ccParser.LiteralExpressContext): ...
    def enterUnaryMinusExpression(self, ctx: vba_ccParser.UnaryMinusExpressionContext): ...
    def exitUnaryMinusExpression(self, ctx: vba_ccParser.UnaryMinusExpressionContext): ...
    def enterRelationExpression(self, ctx: vba_ccParser.RelationExpressionContext): ...
    def exitRelationExpression(self, ctx: vba_ccParser.RelationExpressionContext): ...
    def enterIndexExpression(self, ctx: vba_ccParser.IndexExpressionContext): ...
    def exitIndexExpression(self, ctx: vba_ccParser.IndexExpressionContext): ...
    def enterNotOperatorExpression(self, ctx: vba_ccParser.NotOperatorExpressionContext): ...
    def exitNotOperatorExpression(self, ctx: vba_ccParser.NotOperatorExpressionContext): ...
    def enterConcatExpression(self, ctx: vba_ccParser.ConcatExpressionContext): ...
    def exitConcatExpression(self, ctx: vba_ccParser.ConcatExpressionContext): ...
    def enterArithmeticExpression(self, ctx: vba_ccParser.ArithmeticExpressionContext): ...
    def exitArithmeticExpression(self, ctx: vba_ccParser.ArithmeticExpressionContext): ...
    def enterBooleanExpression(self, ctx: vba_ccParser.BooleanExpressionContext): ...
    def exitBooleanExpression(self, ctx: vba_ccParser.BooleanExpressionContext): ...
    def enterIdentifierExpression(self, ctx: vba_ccParser.IdentifierExpressionContext): ...
    def exitIdentifierExpression(self, ctx: vba_ccParser.IdentifierExpressionContext): ...
    def enterLiteralExpression(self, ctx: vba_ccParser.LiteralExpressionContext): ...
    def exitLiteralExpression(self, ctx: vba_ccParser.LiteralExpressionContext): ...
    def enterCcFunc(self, ctx: vba_ccParser.CcFuncContext): ...
    def exitCcFunc(self, ctx: vba_ccParser.CcFuncContext): ...
    def enterReservedKeywords(self, ctx: vba_ccParser.ReservedKeywordsContext): ...
    def exitReservedKeywords(self, ctx: vba_ccParser.ReservedKeywordsContext): ...
