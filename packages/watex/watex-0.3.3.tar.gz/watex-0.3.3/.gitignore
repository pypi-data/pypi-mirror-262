# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg

MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

docs2/
docs/_html

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints
.checkpoints/

# IPython
profile_default/
ipython_config.py
IPython

# pyenv
.python-version

# spyder 
.pylint.d/
.pylint.d

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# skip test RES APIS watson_studio 

watex/utils/test_res_api.py 
watex/utils/watson_api

# Data 
data/Bag.main&rawds/
data/BagoueCIV__dataset__main/
#data/geo_fdata/main.bagciv.data.csv
# Ignore h.h5 data and n.npz
watex/watex/datasets/data/h.h5 
watex/watex/datasets/data/n.npz

# ignore the projects 
watex/utils/project_bagoue.py

# Skip pyproject.toml and use setup.py tool 
pyproject.toml

#ignore dumping files
SVC__LinearSVC__LogisticRegression
SVC__LogisticRegression.pkl
SVC__LinearSVC__LogisticRegression.pkl
SVC__LinearSVC__LogisticRegression.pkl

# ignore the useless __init__.py 
untitled0.py
untitled1.py
untitled2.py
untitled3.py
untitled4.py

# ignore beka datafiles 
data/beka/
beka.py
elo.py
test_1.csv 
pme.en.new_data/
__svmmodels.pkl

# remove the scripts in the remote 
watex/scripts/ 
scripts/

# boreholes data 
data/boreholes/h.csv 
data/boreholes/h2.csv
python3

data/boreholes/h502.csv
data/boreholes/hf.csv
demo-project.ipynb
hlogs_project.ipynb
_svms_xgboost_.pkl
_svms_xgboost_.joblib
_svms_xgboost_k0.joblib
data.joblib
data0.joblib
#VS code 
.vs/

#scripts remove 
scripts/
pscript.py
# git certificate 
git-mycompany-com.pem

watex/wlogfiles
watex/_wlogfiles/
.github/
tests/temp/
h2.py
h2.joblib
true_data.joblib
#No need 
EDI/
