>>> embed = np.memmap('data/corpus_hpr/sentences.embeddings.memmap', shape=embed.shape, mode='r+')
>>> import numpy as np
>>> import xarray as xr
>>> !free
>>> !free -h
>>> v = np.random.randn(3, 384)
>>> 
... x = xr.open_dataset('data/corpus_hpr/sentences.embeddings.netcdf')
...
>>> !free
>>> %timeit v.dot(embed.T)
>>> embed = np.memmap('data/corpus_hpr/sentences.embeddings.memmap', shape=embed.shape, mode='r+')
>>> who
>>> shape = (41531,384)
>>> x.shape
>>> x.dims
FrozenMappingWarningOnValuesAccess({'sentence': 41531, 'dim': 384})
>>> x.dims.shape
>>> list(x.dims)
['sentence', 'dim']
>>> shape == (x.dims['sentence'], x.dims['dim'])
True
>>> x.sizes
Frozen({'sentence': 41531, 'dim': 384})
>>> list(x.sizes)
['sentence', 'dim']
>>> shape == (x.sizes['sentence'], x.sizes['dim'])
True
>>> shape = (x.sizes['sentence'], x.sizes['dim'])
>>> embed = np.memmap('data/corpus_hpr/sentences.embeddings.memmap', shape=shape, mode='r+')
>>> !free -h
>>> !free
>>> %timeit v.dot(embed.T)
>>> %timeit v.dot(embed.T)
>>> %timeit v.dot(x.T)
>>> %timeit v.dot(x.transpose())
>>> x = xr.open_dataset('data/corpus_hpr/sentences.embeddings.netcdf', shape=(shape[1], shape[0]))
>>> x = xr.open_dataset?
>>> x = x.transpose()
>>> %timeit v.dot(x)
>>> v = xarrayDataArray(v)
>>> v = xarray.DataArray(v)
>>> v = xr.DataArray(v)
>>> %timeit v.dot(x)
>>> xr.dot(v, x)
>>> v = np.random.randn(3, 384)
>>> xr.dot(v, x)
>>> x.dims
FrozenMappingWarningOnValuesAccess({'sentence': 41531, 'dim': 384})
>>> da_a = xr.DataArray(np.arange(3 * 2).reshape(3, 2), dims=["a", "b"])
... da_b = xr.DataArray(np.arange(3 * 2 * 2).reshape(3, 2, 2), dims=["a", "b", "c"])
... da_c = xr.DataArray(np.arange(2 * 3).reshape(2, 3), dims=["c", "d"])
...
>>> da_a.dot(da_c)
<xarray.DataArray (a: 3, b: 2, c: 2, d: 3)> Size: 288B
array([[[[ 0,  0,  0],
         [ 0,  0,  0]],

        [[ 0,  1,  2],
         [ 3,  4,  5]]],


       [[[ 0,  2,  4],
         [ 6,  8, 10]],

        [[ 0,  3,  6],
         [ 9, 12, 15]]],


       [[[ 0,  4,  8],
         [12, 16, 20]],

        [[ 0,  5, 10],
         [15, 20, 25]]]])
Dimensions without coordinates: a, b, c, d
>>> da_a
<xarray.DataArray (a: 3, b: 2)> Size: 48B
array([[0, 1],
       [2, 3],
       [4, 5]])
Dimensions without coordinates: a, b
>>> type(da_a)
xarray.core.dataarray.DataArray
>>> type(x)
xarray.core.dataset.Dataset
>>> x0 = x.to_dataarray()
>>> !free
>>> 8217772 - 8507388
-289616
>>> !free -h
>>> ls -hal data/corpus_hpr/sentences.embeddings.netcdf
>>> ls -hal data/corpus_hpr/sentences.embeddings.joblib
>>> ls -hal data/corpus_hpr/sentences.embeddings.memmap
>>> 8302724 - 8507388
-204664
>>> %timeit v.dot(x0)
>>> %timeit v.dot(x0)
>>> hist -o -p -f scripts/speed_test_xarray_vs_memmap.hist.ipy
>>> memstart = 8268476
>>> memopendataset = 8302724
>>> memnpmemmap = 8217772
>>> memxtodataarray = 8507388
>>> !free
>>> memend = 8432168
>>> hist -o -p -f scripts/speed_test_xarray_vs_memmap.hist.ipy
