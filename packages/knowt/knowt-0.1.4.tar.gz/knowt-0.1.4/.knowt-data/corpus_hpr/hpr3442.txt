## hpr3442 :: What is this thing called science

 
Counter Point
This show is a counter point to: hpr3414 :: Critical Thinking may make You Critical of the Covid Crisis


Some time ago, I did some Hacker Public Radio episodes in which I ostensibly demonstrated how to create a PDF with Scribus. Secretly, I was actually demonstrating how unexpected payloads could be embedded into a PDF. Did the PDF I uploaded as part of that episode no longer contain a payload if the listener who downloaded it wasn't aware that the payload existed?
I've been diagnosed by educators as a "life long learner," which as far as I can tell is a buzzword referring to someone who takes pleasure in learning new things. In our world of technology, dear listener, I think this term is just "hacker." And that's appropriate, because this is Hacker Public Radio you're listening to now, and listeners of this show tend to be people who enjoy learning and exploring new ideas, taking apart gadgets to see what makes them tick, reverse engineering code and data to understand how it gets processed, and so on.
The thing about being a hacker or a life-long learner is that there's a lot of stuff out there that wants to be hacked, or learnt. And it turns out that it's just not possible to learn everything. Sometimes, you're out of your depth. It can be tricky to recognize when you're out of your depth, and I think there's a certain learn-able skill to knowing that you don't know something. There's a lot of value to this skill, because when you can recognize you don't have expertise on something, you're able to look around you and find someone who has. That's significant because you can learn from someone with expertise.
In my own humdrum life, before getting a full-time job at a tech company, I was commissioned on several occasions to build out infrastructure for a video game development project, an indie radio station, a few different multimedia projects, and so on. When I took on those roles, I became the resident expert. People turned to me for the authoritative word on what technological solutions should be used. When I told them, they were more or less obligated to listen, because that was the role I'd been hired for. If they were to ask me what a workstation should run, and I said Linux, but they bought a Mac instead, then my role would be unarguably redundant. They could just as easily type the question into a search engine on the Internet, and ignore the result. Or they could roll a die, or whatever.
In those cases, though, it's a question of my opinion compared to someone else's opinion. Both are valid. Because I was the architect, my opinion mattered more to the long-term plan, but if the long-term plan were to change from having a highly-available cluster for fast 3d model rendering to having workstations with a familiar desktop, then my opinion would be less valid.
But there are some areas in life where opinions don't matter. Specifically, that area is science. But what is science, anyway? People talk about science a lot, but it took me a long time, especially as someone who largely came from an artistic background, to comprehend the significance of the term, much less how it worked.
Forget about all the high school classes and pop dietitians and physicists. Science is a framework. It's a set of principles designed to help our human brains hack the world around us in a methodical and precise way. Instead of letting our opinions, which may or may not be relevant, influence conclusions and decisions we make, science looks at the results of controlled input and output. Wait a minute. "Input and output"? Those are words I understand. Those are computer terms!
Yeah it turns out that computers are the product of science, and in fact building computers and programming computers is a form of Computer Science. Those are just words we made up, but they reveal a lot about what we computer hackers do all day. Computers don't understand the influence of opinion, or your force of will, or the power of faith. They just take input and produce output. They do this very reliably.
I don't know whether you've ever tried, but it's really hard to make a computer. Comprehending how a CPU processes rudimentary electrical pulses to transform them into complex instruction sets is mind-bending, at least to me. I've sat down and thought about it critically. I've set up a few experiments, too. There's one you can do with dominoes, believe it or not, that can somewhat help you design a logic circuit. There's a Turing Machine you can build with Magic The Gathering cards. And an electronics kit that'll help you build an 8bit CPU. But even with all of those experiments, the open RISC-V CPU still eludes my comprehension.
And just to be clear: back in 2008 or so, I was hired to stress test a RISC CPU to determine whether it was efficient at rendering massive amounts of video. I designed tests in an attempt to prove that a RISC CPU could not out-perform the latest Intel Core2duo, and could not achieve the goal (RISC is better, what can I say?) So my affinity for RISC is far from just a passing interest. But I can't build a RISC-V or even really explain how a CPU works.
For that, I understand that there are experts. These aren't just people I call experts because they're labeled that way on their shirt pocket. They're experts because they're building the RISC-V, and it works. I met some of them back at OSS Con in 2019. I recognize their expertise, because they're proving their knowledge.
Let's say I approached the RISC-V booth with the preconception that x86 was superior. After all, why would most consumer computers be running x86 if it weren't the best? I might be skeptical if I were told that RISC-V is superior for some tasks. Could they have ulterior motives? Could they have been paid off by Big Silicon to lie about RISC's performance in order to hurt x86's marketshare? Sure, it could happen. And that skepticism is important. It's arguably part of the scientific process. Look at the results of an experiment, replicate the input and ensure that the output is reliably the same.
But you can't be sure until you've duplicated the experiments that make the claim in the first place. Unfortunately, this often requires some pretty controlled environments, and possibly some pretty high end equipment.
The bottom line is that I'm never going to get around to doing that, I'm never going to have access to those resources, and I'm never going to have the understanding I'd need to comprehend all the potential variables involved. In short, I just don't have the expertise. But I'm willing to trust the expertise of a lot of people from all over the world working on this project. I'm going to trust that because they all agree on similar findings, that what they're saying about the design and architecture of their CPU, that there's a high likelihood that their findings are correct.
The same goes, as it turns out, for biological sciences. No matter how many one-off experiments discover that cigarette smoking is beneficial to your health, the wider scientific consensus is that it's harmful. No matter how man "free-thinkers" on the Internet discover that Covid-19 is actually no worse than the common cold, the worldwide scientific community asserts that it's actually harmful, and medical staffs across the globe assert that increased cases of Covid-19 cause bed and healthcare shortages for everyone else. Somebody online may assert that it's an impossibly unified globe-spanning political plot, but that relies on a bunch of untest-able opinions and interpretations of reality that fall well outside any scientific framework.
It seems to me that this line of speculation makes about as much sense as asking whether your computer can really still add numbers accurately. Couldn't it occasionally be lying to you? The device you're using to listen to my voice right now not to scramble what I'm saying and accurately play what I recorded in the first place is based on the same scientific principles used by those in biological sciences. We're feeding data into functions, whether the function is written in code, forged in silicon, or written on paper as a math formula, and we're observing the results. When every expert in their field, across the entire globe, agrees on the output, I think we do too. It's either that, or we'd better all go build our own 8bit circuits out of chickens and batteries and just start to rebuild.
So did the PDF I uploaded as part of the Scribus episode no longer contain a payload if the listener who downloaded it wasn't aware that the payload existed? Obviously not. If the listener lacked the foresight or expertise to investigate the PDF for a hidden file, then they could have posted an episode of their own about how my PDF was completely normal. They'd have been confident in their findings. But you and I know that whatever experiments they might have used to come to the conclusion that Klaatu was NOT a liar was, in the end, insufficient. The payload did exist, but it was just outside this imaginary listener's detection or comprehension.
Critical thinking is important. But at the same time, the scientific framework requires more than just critical thinking, just as building a RISC-V CPU requires more than just being a fan of reduced instruction sets. And solving the Covid-19 crisis takes a lot more than just critical thinking and a couple of backyard "experiments." We're not in the Dark Ages any more, folks. Get vaccinated. Stay safe, and I'll talk to you next time.
