[build-system]
requires = [
    "setuptools>=60",
    "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "knowt"
version = "0.1.4"
description = "Private, personalized searchable knowledge base, from your own notes."
authors = [
    {name = "Hobson Lane", email = "git@totalgood.com"},
    {name = "Ethan Cavill", email = "ethancavill@gmail.com"},
]
license = {text = "GPLv3+"}
# # Let setuptools read git tags or knowt.__version__ attribute for the version number
# dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.10"
keywords = ["NLP", "LLM", "vector-search", "ANN", "numpy", "search", "semantic search", "RAG", "personal assistant", "command line"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)"
]
dependencies = [
  "ipython",
  "joblib>=1.3.2,<1.4",
  "jsonlines",
  "jupyter",
  "jupyter-console",
  "numpy>=1.26.2,<1.27",
  "pandas>=2.2.0,<2.3",
  "scikit-learn>=1.3.2,<1.4",
  "spacy>=3.7.2,<3.8",
  ]

[project.optional-dependencies]
llm = ["python-dotenv", "openai"]
test = ["pytest", "black", "twine", "pip", "build", "wheel"]
ann = ["py-lsh"]
# spacy = ["spacy>=3.7.2,<3.8"]
vaex = ["vaex>=4.17.0,<4.18"]
dask = ["dask"]
transformers = ["sentence-transformers>=2.2.2,<2.3"]
all = ["test", "ann", "llm", "spacy", "vaex", "dask", "transformers"]

[project.scripts]
knowt = "knowt.search:main"
ask = "knowt.llm:main"

# ... other project metadata fields as listed in:
#     https://packaging.python.org/en/latest/guides/writing-pyproject-toml/


[tool.setuptools.package-data]
knowt = [
    ".knowt-data/corpus_hpr/*.txt",
    ".knowt-data/corpus_hpr/*.csv.bz2",
]

# [build-system]
# requires = ["poetry-core"]
# build-backend = "poetry.core.masonry.api"


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".venv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".venv",
]
line-length = 125  # black line-length=88
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E", "F"] # default: ["E4", "E7", "E9", "F"]
ignore = []
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# # Like Black, use double quotes for strings.
# quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# # Like Black, respect magic trailing commas.
# skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"


