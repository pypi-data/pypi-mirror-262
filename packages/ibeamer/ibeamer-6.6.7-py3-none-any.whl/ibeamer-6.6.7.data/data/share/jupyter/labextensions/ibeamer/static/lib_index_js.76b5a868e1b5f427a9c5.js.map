{"version":3,"file":"lib_index_js.76b5a868e1b5f427a9c5.js","mappings":";;;;;;;;;;;;;;;;;AAKgD;AACT;AAEvC,MAAM,wBAAwB,GAAG,mBAAmB,CAAC;AAErD;;GAEG;AACH,MAAM,MAAM,GAAgC;IAC1C,EAAE,EAAE,gBAAgB;IACpB,WAAW,EAAE,4EAA4E;IACzF,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,GAAoB,EAAE,EAAE;QACjC,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QAErC,IAAI,IAAI,CAAC;QAET,8CAA8C;QAC9C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC,EAAE;YACjD,uCAAuC;YACvC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,CAAC,SAAS,GAAG,oIAAoI,CAAC;SACvJ;QAED,kDAAkD;QAClD,IAAI,IAAI,EAAE;YACR,MAAM,MAAM,GAAG,IAAI,mDAAM,CAAC,EAAC,IAAI,EAAC,CAAC,CAAC,CAAC,uDAAuD;YAC1F,MAAM,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;YAC1C,MAAM,CAAC,EAAE,GAAG,0DAAQ,CAAC,WAAW,EAAE,CAAC;YACnC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC,8DAA8D;SAC3G;IAEH,CAAC;CACF,CAAC;AAEF,iEAAe,MAAM,EAAC","sources":["webpack://ibeamer/./src/index.ts"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { DOMUtils } from '@jupyterlab/apputils';\nimport {Widget} from '@lumino/widgets';\n\nconst ilambda_Anchor_CSS_CLASS = 'jp-ilambda-Anchor';\n\n/**\n * Initialization data for the iBeamer extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'iBeamer:plugin',\n  description: 'A simple .css Beamer/LaTeX Environment Extension for Jupyter Lab/Notebooks',\n  autoStart: true,\n  activate: (app: JupyterFrontEnd) => {\n    console.log('ibeamer is activated!');\n\n    let node;\n\n    // Check if the node exists before creating it\n    if (!document.querySelector(\".jp-ilambda-Anchor\")) {\n      // If the node doesn't exist, create it\n      node = document.createElement(\"div\");\n      node.innerHTML = \"<a href='https://www.lambda.joburg' target='_blank'><img src='https://lambda.joburg/assets/images/index/logo/lambda_logo.svg'></a>\";\n    }\n\n    // Check if the node has been successfully created\n    if (node) {\n      const widget = new Widget({node}); // constructor for creating a widget from a DOM element\n      widget.addClass(ilambda_Anchor_CSS_CLASS);\n      widget.id = DOMUtils.createDomID();\n      app.shell.add(widget, 'top', {rank: 1000}); // rank - move widget to right-most position in top area panel\n    }\n\n  }\n};\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}